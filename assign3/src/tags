!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	coeff *A;$/;"	m	class:UD_hash_entry
A	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	coeff *A;$/;"	m	class:X_hash_entry
A	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	coeff *A;$/;"	m	class:UD_hash_entry
A	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	coeff *A;$/;"	m	class:X_hash_entry
A	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	coeff *A;$/;"	m	class:UD_hash_entry
A	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	coeff *A;$/;"	m	class:X_hash_entry
A	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^	integer_row * A;  \/\/ the matrix$/;"	m	class:integer_matrix
A	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^	integer_row * A;  \/\/ the matrix$/;"	m	class:integer_matrix
A	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^	integer_row * A;  \/\/ the matrix$/;"	m	class:integer_matrix
ABS	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	26;"	d
ABS	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	26;"	d
ABS	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	23;"	d
ABSORBS	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	44;"	d
ABSORBS	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	44;"	d
ACCESS_VECTOR	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	16;"	d
ACCESS_VECTOR_H	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	13;"	d
ACCESS_VECTOR_H	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	13;"	d
ADDRESS_TYPE	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    ADDRESS_TYPE,			\/* pointers *\/$/;"	e	enum:simple_type_base_enum
ADDRESS_TYPE	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    ADDRESS_TYPE,			\/* pointers *\/$/;"	e	enum:simple_type_base_enum
ALIADDR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	15;"	d
ALIAS_SET_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	15;"	d
ALIDOUBLE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	18;"	d
ALIINT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	19;"	d
ALILENG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	20;"	d
ALILONG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	17;"	d
ALISHORT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	16;"	d
ALIST_H	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	15;"	d
ALIST_H	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	17;"	d
ALLEXPR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	20;"	d
ALLOC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	18;"	d
ALLOCN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	19;"	d
AMAN_H	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	17;"	d
AND	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	41;"	d
AND	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	41;"	d
ANNOTE	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	94;"	d
ANNOTELIST_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/annotelist.h	15;"	d
ANNOTE_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/annote.h	15;"	d
ANNOTE_H	/cad2/ece540s/basesuif-1.1.2/include/suif/annote.h	17;"	d
APPLY	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	47;"	d
APPLY	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	47;"	d
ARGUMENT_MAX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/names.h	3;"	d
ASTFOR_H	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	15;"	d
ASTGROUP_H	/cad2/ece540s/basesuif-1.1.2/include/flow/astgroup.h	15;"	d
ASTIF_H	/cad2/ece540s/basesuif-1.1.2/include/flow/astif.h	15;"	d
ASTINSTR_H	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	15;"	d
ASTLIST_H	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	15;"	d
ASTLOOP_H	/cad2/ece540s/basesuif-1.1.2/include/flow/astloop.h	15;"	d
ASTNODELIST_H	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	15;"	d
ASTNODE_H	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	15;"	d
ASTPROCITER_H	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	15;"	d
ASTPROC_H	/cad2/ece540s/basesuif-1.1.2/include/flow/astproc.h	15;"	d
AST_NODE_FOR	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    AST_NODE_FOR = -2,$/;"	e	enum:ast_node_type
AST_NODE_IF	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    AST_NODE_IF = -3,$/;"	e	enum:ast_node_type
AST_NODE_LOOP	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    AST_NODE_LOOP = -1,$/;"	e	enum:ast_node_type
AST_NODE_SUIF_INSTR	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    AST_NODE_SUIF_INSTR = -4$/;"	e	enum:ast_node_type
Addrblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Addrblock$/;"	s
Addrp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^typedef struct Addrblock *Addrp;$/;"	t	typeref:struct:Addrblock
BAD_MEMNO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	41;"	d
BAD_SIGN	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	50;"	d
BASE_FORM	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    BASE_FORM,				\/* most instructions *\/$/;"	e	enum:simple_format_enum
BASE_FORM	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    BASE_FORM,				\/* most instructions *\/$/;"	e	enum:simple_format_enum
BASIC_H	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	15;"	d
BINARY_OP	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	18;"	d
BITSET_H	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	15;"	d
BITSET_H	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	17;"	d
BJ_FORM	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    BJ_FORM,				\/* branch or jump *\/$/;"	e	enum:simple_format_enum
BJ_FORM	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    BJ_FORM,				\/* branch or jump *\/$/;"	e	enum:simple_format_enum
BLANKCOMMON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	22;"	d
BOUNDS_H	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	13;"	d
BOUNDS_H	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	13;"	d
BOUNDS_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	15;"	d
BT_char	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum base_types { BT_void, BT_int, BT_char };$/;"	e	enum:base_types
BT_char	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum base_types { BT_void, BT_int, BT_char };$/;"	e	enum:base_types
BT_int	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum base_types { BT_void, BT_int, BT_char };$/;"	e	enum:base_types
BT_int	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum base_types { BT_void, BT_int, BT_char };$/;"	e	enum:base_types
BT_void	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum base_types { BT_void, BT_int, BT_char };$/;"	e	enum:base_types
BT_void	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum base_types { BT_void, BT_int, BT_char };$/;"	e	enum:base_types
BUILDERINCFILE	/cad2/ece540s/basesuif-1.1.2/include/builder.h	19;"	d
BUILDERINCFILE	/cad2/ece540s/basesuif-1.1.2/include/builder.h	21;"	d
BUILDERINCFILE	/cad2/ece540s/basesuif-1.1.2/include/builder/builder.h	19;"	d
BUILDERINCFILE	/cad2/ece540s/basesuif-1.1.2/include/builder/builder.h	21;"	d
BUILDER_H	/cad2/ece540s/basesuif-1.1.2/include/builder.h	15;"	d
BUILDER_H	/cad2/ece540s/basesuif-1.1.2/include/builder/builder.h	15;"	d
B_NOOP	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    static block * B_NOOP;              \/\/ noop block$/;"	m	class:builder
BlockSymTab	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    static block_symtab * BlockSymTab;$/;"	m	class:builder_base
CACHE_SZ	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	24;"	d
CALLEE_FPRS	/cad2/ece540s/basesuif-1.1.2/include/simple.h	138;"	d
CALLEE_FPRS	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	138;"	d
CALLEE_GPRS	/cad2/ece540s/basesuif-1.1.2/include/simple.h	136;"	d
CALLEE_GPRS	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	136;"	d
CALLER_FPRS	/cad2/ece540s/basesuif-1.1.2/include/simple.h	139;"	d
CALLER_FPRS	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	139;"	d
CALLER_GPRS	/cad2/ece540s/basesuif-1.1.2/include/simple.h	137;"	d
CALLER_GPRS	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	137;"	d
CALL_FORM	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    CALL_FORM,				\/* call *\/$/;"	e	enum:simple_format_enum
CALL_FORM	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    CALL_FORM,				\/* call *\/$/;"	e	enum:simple_format_enum
CBLOCK	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	37;"	d
CBLOCK	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	37;"	d
CEXTERN	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	22;"	d
CEXTERN	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	22;"	d
CFG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^class CFG$/;"	c
CFG	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^class CFG$/;"	c
CFG_0	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^class CFG_0$/;"	c
CFG_0_reversed	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^class CFG_0_reversed: public CFG_0$/;"	c
CFG_1	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^class CFG_1: public CFG_0$/;"	c
CFG_1_INITIAL_SIZE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	246;"	d
CFG_1_edge	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFG_1_edge() { }$/;"	f	class:CFG_1_edge
CFG_1_edge	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFG_1_edge(CFGnode *f,CFGnode *t) { from = f; to = t; }$/;"	f	class:CFG_1_edge
CFG_1_edge	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^class CFG_1_edge$/;"	c
CFG_1_reversed	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFG_1_reversed(CFG_1 *g):CFG_0_reversed(g)$/;"	f	class:CFG_1_reversed
CFG_1_reversed	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^class CFG_1_reversed: public CFG_0_reversed$/;"	c
CFG_EDGE_MULTIPLE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	244;"	d
CFG_EDGE_UNINIT	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	242;"	d
CFG_EDGE_UNIQUE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	243;"	d
CFGnode	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^typedef Snode         CFGnode;$/;"	t
CFGnode	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^typedef Snode CFGnode;$/;"	t
CFGnode	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^typedef Snode CFGnode;$/;"	t
CFGnode_bb	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^    CFGnode_bb,$/;"	e	enum:CFGnode_kinds
CFGnode_bb	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^    CFGnode_bb,$/;"	e	enum:CFGnode_kinds
CFGnode_bb	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^    CFGnode_bb,$/;"	e	enum:CFGnode_kinds
CFGnode_header	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^    CFGnode_header,$/;"	e	enum:CFGnode_kinds
CFGnode_header	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^    CFGnode_header,$/;"	e	enum:CFGnode_kinds
CFGnode_header	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^    CFGnode_header,$/;"	e	enum:CFGnode_kinds
CFGnode_irreducible	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^    CFGnode_irreducible$/;"	e	enum:CFGnode_kinds
CFGnode_irreducible	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^    CFGnode_irreducible$/;"	e	enum:CFGnode_kinds
CFGnode_irreducible	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^    CFGnode_irreducible$/;"	e	enum:CFGnode_kinds
CFGnode_kinds	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^enum CFGnode_kinds {$/;"	g
CFGnode_kinds	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^enum CFGnode_kinds {$/;"	g
CFGnode_kinds	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^enum CFGnode_kinds {$/;"	g
CFGnode_normal	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^    CFGnode_normal=0,$/;"	e	enum:CFGnode_kinds
CFGnode_normal	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^    CFGnode_normal=0,$/;"	e	enum:CFGnode_kinds
CFGnode_normal	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^    CFGnode_normal=0,$/;"	e	enum:CFGnode_kinds
CFGnode_unreachable	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^    CFGnode_unreachable=-1,$/;"	e	enum:CFGnode_kinds
CFGnode_unreachable	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^    CFGnode_unreachable=-1,$/;"	e	enum:CFGnode_kinds
CFGnode_unreachable	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^    CFGnode_unreachable=-1,$/;"	e	enum:CFGnode_kinds
CFinfo	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^class CFinfo$/;"	c
CFinfo	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^class CFinfo$/;"	c
CFinfo	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^class CFinfo$/;"	c
CGC_code	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    CGC_header, CGC_code, CGC_decl_head,$/;"	e	enum:CG_context
CGC_code	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    CGC_header, CGC_code, CGC_decl_head,$/;"	e	enum:CG_context
CGC_decl_head	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    CGC_header, CGC_code, CGC_decl_head,$/;"	e	enum:CG_context
CGC_decl_head	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    CGC_header, CGC_code, CGC_decl_head,$/;"	e	enum:CG_context
CGC_decl_tail	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    CGC_decl_tail, CGC_defn_head, CGC_defn_tail$/;"	e	enum:CG_context
CGC_decl_tail	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    CGC_decl_tail, CGC_defn_head, CGC_defn_tail$/;"	e	enum:CG_context
CGC_defn_head	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    CGC_decl_tail, CGC_defn_head, CGC_defn_tail$/;"	e	enum:CG_context
CGC_defn_head	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    CGC_decl_tail, CGC_defn_head, CGC_defn_tail$/;"	e	enum:CG_context
CGC_defn_tail	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    CGC_decl_tail, CGC_defn_head, CGC_defn_tail$/;"	e	enum:CG_context
CGC_defn_tail	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    CGC_decl_tail, CGC_defn_head, CGC_defn_tail$/;"	e	enum:CG_context
CGC_header	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    CGC_header, CGC_code, CGC_decl_head,$/;"	e	enum:CG_context
CGC_header	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    CGC_header, CGC_code, CGC_decl_head,$/;"	e	enum:CG_context
CG_context	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum CG_context$/;"	g
CG_context	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum CG_context$/;"	g
CHECK_H	/cad2/ece540s/basesuif-1.1.2/include/check.h	13;"	d
CHECK_H	/cad2/ece540s/basesuif-1.1.2/include/check/check.h	13;"	d
CHECK_INTERNAL_H	/cad2/ece540s/basesuif-1.1.2/include/check/check_internal.h	13;"	d
CHNULL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	34;"	d
CLASS	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	46;"	d
CLASS	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	46;"	d
CLBLOCK	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	105;"	d
CLENTRY	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	103;"	d
CLMAIN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	104;"	d
CLNAMELIST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	107;"	d
CLO_DOUBLE	/cad2/ece540s/basesuif-1.1.2/include/suif/cmdparse.h	/^    CLO_DOUBLE,$/;"	e	enum:cmd_line_option_kind
CLO_INT	/cad2/ece540s/basesuif-1.1.2/include/suif/cmdparse.h	/^    CLO_INT,$/;"	e	enum:cmd_line_option_kind
CLO_MULTI_STRING	/cad2/ece540s/basesuif-1.1.2/include/suif/cmdparse.h	/^    CLO_MULTI_STRING$/;"	e	enum:cmd_line_option_kind
CLO_NOARG	/cad2/ece540s/basesuif-1.1.2/include/suif/cmdparse.h	/^    CLO_NOARG,$/;"	e	enum:cmd_line_option_kind
CLO_STRING	/cad2/ece540s/basesuif-1.1.2/include/suif/cmdparse.h	/^    CLO_STRING,$/;"	e	enum:cmd_line_option_kind
CLPARAM	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	101;"	d
CLPROC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	106;"	d
CLUNKNOWN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	100;"	d
CLVAR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	102;"	d
CMACH	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	7;"	d
CMDPARSE_H	/cad2/ece540s/basesuif-1.1.2/include/suif/cmdparse.h	17;"	d
CNULL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	32;"	d
CN_function	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	CN_function(ty_function *t):SV_const(t) {closed=0;}$/;"	f	class:CN_function
CN_function	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class CN_function: public SV_const {$/;"	c
CN_function	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	CN_function(ty_function *t):SV_const(t) {closed=0;}$/;"	f	class:CN_function
CN_function	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class CN_function: public SV_const {$/;"	c
CODE_CONTEXT_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	15;"	d
COMMENT_BUFFER_SIZE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	46;"	d
COMP_OPS	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	190;"	d
COMP_OPS	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	211;"	d
CONSLIST_H	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	15;"	d
CONSLIST_H	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	15;"	d
CONSTANT_STR_MAX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	47;"	d
CONST_IDENT_MAX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/names.h	1;"	d
COPY_VALUE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	31;"	d
COPY_VALUE	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	31;"	d
COPY_VAR	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	30;"	d
COPY_VAR	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	30;"	d
CREATE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	51;"	d
CREATE	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	51;"	d
CTLDO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	129;"	d
CTLELSE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	131;"	d
CTLIF	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	130;"	d
C_char	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    C_char,$/;"	e	enum:C_types
C_code	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^typedef String C_code;$/;"	t
C_code	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^typedef String C_code;$/;"	t
C_double	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    C_double,$/;"	e	enum:C_types
C_float	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    C_float,$/;"	e	enum:C_types
C_int	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    C_int,$/;"	e	enum:C_types
C_long	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    C_long,$/;"	e	enum:C_types
C_longdouble	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    C_longdouble,$/;"	e	enum:C_types
C_longlong	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    C_longlong,$/;"	e	enum:C_types
C_ptr	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    C_ptr,$/;"	e	enum:C_types
C_short	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    C_short,$/;"	e	enum:C_types
C_types	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^enum C_types {$/;"	g
Chain	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Chain$/;"	s
Charp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	    char *Charp;$/;"	m	union:Addrblock::__anon9
Comvar	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Comvar {$/;"	s
Const	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	    union Constant Const;	\/* Constant value *\/$/;"	m	union:Addrblock::__anon9	typeref:union:Addrblock::__anon9::Constant
Const	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	union Constant Const;$/;"	m	struct:Constblock	typeref:union:Constblock::Constant
Constant	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^union Constant$/;"	u
Constblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Constblock$/;"	s
Constp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^typedef struct Constblock *Constp;$/;"	t	typeref:struct:Constblock
Ctlframe	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Ctlframe$/;"	s
D	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	int *U, *D;$/;"	m	class:UD_hash_entry
D	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int *U, *D;$/;"	m	class:UD_hash_entry
D	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int *U, *D;$/;"	m	class:UD_hash_entry
D	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq D;$/;"	m	class:lin_ineq_difference_iter
DCLIST_H	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	15;"	d
DD	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	int DD;  \/\/ all arrays are square with each dimension = DD+1$/;"	m	class:exact
DD	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int DD;  \/\/ all arrays are square with each dimension = DD+1$/;"	m	class:exact
DD	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int DD;  \/\/ all arrays are square with each dimension = DD+1$/;"	m	class:exact
DEBUG_COUNTER	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	20;"	d
DECLARE_DLIST_CLASS	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	80;"	d
DECLARE_DLIST_CLASSES	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	83;"	d
DECLARE_LIST_CLASS	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	130;"	d
DECLARE_LIST_CLASSES	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	133;"	d
DECLARE_LIST_CLASS_E	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	139;"	d
DECLARE_LIST_CLASS_ITER	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	199;"	d
DECLARE_LIST_CLASS_LIST	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	149;"	d
DECLARE_MTFLIST_CLASS	/cad2/ece540s/basesuif-1.1.2/include/suif/mtflist.h	48;"	d
DECLARE_MTFLIST_CLASSES	/cad2/ece540s/basesuif-1.1.2/include/suif/mtflist.h	51;"	d
DECLARE_X_ARRAY	/cad2/ece540s/basesuif-1.1.2/include/general/xarray.h	51;"	d
DECLARE_X_ARRAY	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	70;"	d
DECLARE_X_ARRAY	/cad2/ece540s/basesuif-1.1.2/include/suif/xarray.h	58;"	d
DECLARE_X_ARRAY	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	70;"	d
DECLARE_X_ARRAY0	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	166;"	d
DECLARE_X_ARRAY0	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	171;"	d
DECLARE_X_ARRAY1	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	320;"	d
DECLARE_X_ARRAY1	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	325;"	d
DECLARE_X_ARRAY1	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	130;"	d
DECLARE_X_ARRAY1	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	135;"	d
DECLARE_X_ARRAY1	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	130;"	d
DECLARE_X_ARRAY1	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	135;"	d
DEF_C_LINE_LENGTH	/cad2/ece540s/basesuif-1.1.2/include/sf2c/format.h	1;"	d
DEF_OBJ	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    DEF_OBJ,				\/* var_def *\/$/;"	e	enum:object_kinds
DEPENDENCE_H	/cad2/ece540s/basesuif-1.1.2/include/dependence.h	15;"	d
DEPENDENCE_H	/cad2/ece540s/basesuif-1.1.2/include/dependence/dependence.h	15;"	d
DEPINCFILE	/cad2/ece540s/basesuif-1.1.2/include/dependence.h	26;"	d
DEPINCFILE	/cad2/ece540s/basesuif-1.1.2/include/dependence.h	28;"	d
DEPINCFILE	/cad2/ece540s/basesuif-1.1.2/include/dependence/dependence.h	26;"	d
DEPINCFILE	/cad2/ece540s/basesuif-1.1.2/include/dependence/dependence.h	28;"	d
DEPTEST_H	/cad2/ece540s/basesuif-1.1.2/include/dephack/deptest.h	15;"	d
DEPTEST_H	/cad2/ece540s/basesuif-1.1.2/include/deptest.h	15;"	d
DEPTEST_H	/cad2/ece540s/basesuif-1.1.2/include/deptest/deptest.h	15;"	d
DEP_NODE	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	14;"	d
DEP_NODE_H	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	13;"	d
DEP_NODE_H	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	13;"	d
DIST_BIT	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	34;"	d
DIST_BIT	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	75;"	d
DIST_BIT	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	47;"	d
DIST_BIT	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	88;"	d
DIST_BIT	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	47;"	d
DIST_BIT	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	88;"	d
DIST_SHIFT	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	35;"	d
DIST_SHIFT	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	76;"	d
DIST_SHIFT	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	48;"	d
DIST_SHIFT	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	89;"	d
DIST_SHIFT	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	48;"	d
DIST_SHIFT	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	89;"	d
DLIST_H	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	17;"	d
DMR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	10;"	d
DO_NOT_WRITE_OUT	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^enum do_write_out { DO_WRITE_OUT, DO_NOT_WRITE_OUT };$/;"	e	enum:do_write_out
DO_WRITE_OUT	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^enum do_write_out { DO_WRITE_OUT, DO_NOT_WRITE_OUT };$/;"	e	enum:do_write_out
DVECTOR	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	14;"	d
DVECTOR	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	13;"	d
DVECTOR	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	13;"	d
DependenceTest	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^inline dvlist * DependenceTest(in_array *w, $/;"	f
Dimblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Dimblock$/;"	s
EHASH_H	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	14;"	d
EHASH_H	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	14;"	d
END	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	16;"	d
END	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	16;"	d
ENULL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	35;"	d
EQUIV_INIT_NAME	/cad2/ece540s/basesuif-1.1.2/include/sf2c/names.h	6;"	d
ERROR	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	351;"	d
EVAL_DIV_BY_ZERO	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    EVAL_OK, EVAL_OVERFLOW, EVAL_NOT_CONST, EVAL_DIV_BY_ZERO, EVAL_UNDEFINED,$/;"	e	enum:__anon38
EVAL_ERROR	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    EVAL_UNKNOWN_AT_LINK, EVAL_ERROR$/;"	e	enum:__anon38
EVAL_NOT_CONST	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    EVAL_OK, EVAL_OVERFLOW, EVAL_NOT_CONST, EVAL_DIV_BY_ZERO, EVAL_UNDEFINED,$/;"	e	enum:__anon38
EVAL_OK	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    EVAL_OK, EVAL_OVERFLOW, EVAL_NOT_CONST, EVAL_DIV_BY_ZERO, EVAL_UNDEFINED,$/;"	e	enum:__anon38
EVAL_OVERFLOW	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    EVAL_OK, EVAL_OVERFLOW, EVAL_NOT_CONST, EVAL_DIV_BY_ZERO, EVAL_UNDEFINED,$/;"	e	enum:__anon38
EVAL_UNDEFINED	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    EVAL_OK, EVAL_OVERFLOW, EVAL_NOT_CONST, EVAL_DIV_BY_ZERO, EVAL_UNDEFINED,$/;"	e	enum:__anon38
EVAL_UNKNOWN_AT_LINK	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    EVAL_UNKNOWN_AT_LINK, EVAL_ERROR$/;"	e	enum:__anon38
EXACT_H	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	14;"	d
EXACT_H	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	14;"	d
EXPR_MAP_H	/cad2/ece540s/basesuif-1.1.2/include/expr_map.h	18;"	d
EXPR_MAP_H	/cad2/ece540s/basesuif-1.1.2/include/useful/expr_map.h	18;"	d
Entrypoint	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Entrypoint$/;"	s
Equivblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Equivblock$/;"	s
Eqvchain	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Eqvchain$/;"	s
Errorblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Errorblock$/;"	s
Exprblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Exprblock$/;"	s
Expression	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^union Expression$/;"	u
Exprp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^typedef struct Exprblock *Exprp;$/;"	t	typeref:struct:Exprblock
Extern	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	34;"	d
Extern	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	34;"	d
Extsym	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Extsym$/;"	s
F2C_INCLUDE	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	8;"	d
F2C_INCLUDE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	8;"	d
FALSE	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	16;"	d
FALSE	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	16;"	d
FALSE	/cad2/ece540s/basesuif-1.1.2/include/general/useful.h	26;"	d
FALSE	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	44;"	d
FALSE	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	44;"	d
FALSE	/cad2/ece540s/basesuif-1.1.2/include/simple.h	24;"	d
FALSE	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	24;"	d
FALSE	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^const int FALSE=0;$/;"	v
FALSE	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	85;"	d
FALSE_	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	30;"	d
FALSE_	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	30;"	d
FCONST	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	19;"	d
FCONST	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	21;"	d
FCONST	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	17;"	d
FCONST	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	19;"	d
FCONST	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	16;"	d
FCONST	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	18;"	d
FCONST	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	19;"	d
FCONST	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	21;"	d
FCONST	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	16;"	d
FCONST	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	18;"	d
FCONST	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	19;"	d
FCONST	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	21;"	d
FILEP	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	/^typedef FILE *FILEP;$/;"	t
FILESET_H	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	17;"	d
FILE_OBJ	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    FILE_OBJ,				\/* file_set_entry *\/$/;"	e	enum:object_kinds
FLOAT_TYPE	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    FLOAT_TYPE,				\/* floats and doubles *\/$/;"	e	enum:simple_type_base_enum
FLOAT_TYPE	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    FLOAT_TYPE,				\/* floats and doubles *\/$/;"	e	enum:simple_type_base_enum
FLOWHOOKS_H	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	15;"	d
FLOW_BASE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	25;"	d
FLOW_BASE	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	25;"	d
FLOW_FUNCTION	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	26;"	d
FLOW_FUNCTION	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	26;"	d
FLOW_H	/cad2/ece540s/basesuif-1.1.2/include/flow.h	15;"	d
FLOW_H	/cad2/ece540s/basesuif-1.1.2/include/flow/flow.h	15;"	d
FLOW_MAP	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	32;"	d
FLOW_MAP	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	32;"	d
FLOW_VALUE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	24;"	d
FLOW_VALUE	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	24;"	d
FMRED_H	/cad2/ece540s/basesuif-1.1.2/include/fmred.h	15;"	d
FMRED_H	/cad2/ece540s/basesuif-1.1.2/include/math/fmred.h	15;"	d
FMRED_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fmred.h	15;"	d
FM_flow	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    FM_flow,$/;"	e	enum:Flow_modes
FM_flow	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    FM_flow,$/;"	e	enum:Flow_modes
FM_flow	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    FM_flow,$/;"	e	enum:Flow_modes
FM_none	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    FM_none,$/;"	e	enum:Flow_modes
FM_none	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    FM_none,$/;"	e	enum:Flow_modes
FM_none	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    FM_none,$/;"	e	enum:Flow_modes
FM_propagate	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    FM_propagate$/;"	e	enum:Flow_modes
FM_propagate	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    FM_propagate$/;"	e	enum:Flow_modes
FM_propagate	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    FM_propagate$/;"	e	enum:Flow_modes
FOR_EQ	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    FOR_EQ, FOR_NEQ,$/;"	e	enum:tree_for_test
FOR_NEQ	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    FOR_EQ, FOR_NEQ,$/;"	e	enum:tree_for_test
FOR_SGELE	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    FOR_SGELE, FOR_SGT, FOR_SGTE, FOR_SLT, FOR_SLTE, \/* signed *\/$/;"	e	enum:tree_for_test
FOR_SGT	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    FOR_SGELE, FOR_SGT, FOR_SGTE, FOR_SLT, FOR_SLTE, \/* signed *\/$/;"	e	enum:tree_for_test
FOR_SGTE	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    FOR_SGELE, FOR_SGT, FOR_SGTE, FOR_SLT, FOR_SLTE, \/* signed *\/$/;"	e	enum:tree_for_test
FOR_SLT	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    FOR_SGELE, FOR_SGT, FOR_SGTE, FOR_SLT, FOR_SLTE, \/* signed *\/$/;"	e	enum:tree_for_test
FOR_SLTE	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    FOR_SGELE, FOR_SGT, FOR_SGTE, FOR_SLT, FOR_SLTE, \/* signed *\/$/;"	e	enum:tree_for_test
FOR_UGELE	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    FOR_UGELE, FOR_UGT, FOR_UGTE, FOR_ULT, FOR_ULTE \/* unsigned *\/$/;"	e	enum:tree_for_test
FOR_UGT	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    FOR_UGELE, FOR_UGT, FOR_UGTE, FOR_ULT, FOR_ULTE \/* unsigned *\/$/;"	e	enum:tree_for_test
FOR_UGTE	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    FOR_UGELE, FOR_UGT, FOR_UGTE, FOR_ULT, FOR_ULTE \/* unsigned *\/$/;"	e	enum:tree_for_test
FOR_ULT	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    FOR_UGELE, FOR_UGT, FOR_UGTE, FOR_ULT, FOR_ULTE \/* unsigned *\/$/;"	e	enum:tree_for_test
FOR_ULTE	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    FOR_UGELE, FOR_UGT, FOR_UGTE, FOR_ULT, FOR_ULTE \/* unsigned *\/$/;"	e	enum:tree_for_test
FRACT_H	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	15;"	d
FRACT_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	16;"	d
FRACT_MATRIX_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	20;"	d
FRACT_VECTOR_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	17;"	d
Flag	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^typedef signed char   Flag;$/;"	t
Flag	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^typedef char Flag;$/;"	t
Flag	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^typedef char Flag;$/;"	t
Flow_hooks	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^class Flow_hooks {$/;"	c
Flow_modes	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^enum Flow_modes$/;"	g
Flow_modes	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^enum Flow_modes$/;"	g
Flow_modes	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^enum Flow_modes$/;"	g
GCOS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	4;"	d
GENERAL_H	/cad2/ece540s/basesuif-1.1.2/include/general.h	15;"	d
GENERAL_H	/cad2/ece540s/basesuif-1.1.2/include/general/general.h	15;"	d
GLIST_H	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	15;"	d
GLIST_H	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	17;"	d
GLOBALS_H	/cad2/ece540s/basesuif-1.1.2/include/simple/globals.h	13;"	d
HASH_H	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	15;"	d
HASH_H	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	17;"	d
HASH_TABLE_SIZE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	91;"	d
HAWGHOOKS_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/hawghooks.h	15;"	d
HAWG_H	/cad2/ece540s/basesuif-1.1.2/include/hawg.h	15;"	d
HAWG_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/hawg.h	15;"	d
HIGHPT	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    int HIGHPT() { return highpt ? highpt->Q->number : -1; }$/;"	f	class:Seqn
HIGHPT	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    int HIGHPT() { return highpt ? highpt->Q->number : -1; }$/;"	f	class:Seqn
HIGHPT	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    int HIGHPT() { return highpt ? highpt->Q->number : -1; }$/;"	f	class:Seqn
Hashed_scope	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class Hashed_scope:public Scope$/;"	c
Hashed_scope	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class Hashed_scope:public Scope$/;"	c
Hashentry	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Hashentry$/;"	s
Hawg_hooks	/cad2/ece540s/basesuif-1.1.2/include/hawg/hawghooks.h	/^class Hawg_hooks {$/;"	c
Headblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Headblock$/;"	s
Header_info	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^class Header_info$/;"	c
Header_info	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^class Header_info$/;"	c
Header_info	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^class Header_info$/;"	c
IBM	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	6;"	d
ICON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	286;"	d
ICON_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	15;"	d
ICON_SEQ_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon_seq.h	15;"	d
ID	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	36;"	d
ID	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	36;"	d
IDENTITY	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	53;"	d
IDENTITY	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	53;"	d
IDENT_LEN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	253;"	d
IF_STREAM_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	15;"	d
IIT_C_INT	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    IIT_C_INT, IIT_STRING_INT, IIT_POS_INFINITY, IIT_NEG_INFINITY,$/;"	e	enum:i_integer_tag
IIT_NEG_INFINITY	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    IIT_C_INT, IIT_STRING_INT, IIT_POS_INFINITY, IIT_NEG_INFINITY,$/;"	e	enum:i_integer_tag
IIT_POS_INFINITY	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    IIT_C_INT, IIT_STRING_INT, IIT_POS_INFINITY, IIT_NEG_INFINITY,$/;"	e	enum:i_integer_tag
IIT_SIGNLESS_INFINITY	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    IIT_SIGNLESS_INFINITY, IIT_UNDETERMINED$/;"	e	enum:i_integer_tag
IIT_STRING_INT	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    IIT_C_INT, IIT_STRING_INT, IIT_POS_INFINITY, IIT_NEG_INFINITY,$/;"	e	enum:i_integer_tag
IIT_UNDETERMINED	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    IIT_SIGNLESS_INFINITY, IIT_UNDETERMINED$/;"	e	enum:i_integer_tag
ILIST_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	15;"	d
IMMED_FLOAT	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    IMMED_FLOAT,			\/* floating-point constant *\/$/;"	e	enum:immed_type_enum
IMMED_FLOAT	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    IMMED_FLOAT,			\/* floating-point constant *\/$/;"	e	enum:immed_type_enum
IMMED_H	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	17;"	d
IMMED_INT	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    IMMED_INT,				\/* integer constant *\/$/;"	e	enum:immed_type_enum
IMMED_INT	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    IMMED_INT,				\/* integer constant *\/$/;"	e	enum:immed_type_enum
IMMED_SYMBOL	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    IMMED_SYMBOL			\/* symbolic address *\/$/;"	e	enum:immed_type_enum
IMMED_SYMBOL	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    IMMED_SYMBOL			\/* symbolic address *\/$/;"	e	enum:immed_type_enum
INCLFILE	/cad2/ece540s/basesuif-1.1.2/include/suif.h	19;"	d
INCLFILE	/cad2/ece540s/basesuif-1.1.2/include/suif.h	21;"	d
INCLFILE	/cad2/ece540s/basesuif-1.1.2/include/suif/suif.h	19;"	d
INCLUDE_SUIF_COPYRIGHT	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	40;"	d
INCLUDE_SUIF_COPYRIGHT_NAMED	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	37;"	d
INDATA	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	64;"	d
INDCL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	63;"	d
INEXEC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	65;"	d
INIT	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	42;"	d
INIT	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	42;"	d
INITSUIF_H	/cad2/ece540s/basesuif-1.1.2/include/suif/initsuif.h	17;"	d
INSERT	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	43;"	d
INSERT	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	43;"	d
INSIDE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	62;"	d
INSTRUCTION_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	15;"	d
INSTRUCTION_H	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	17;"	d
INSTR_OBJ	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    INSTR_OBJ,				\/* instruction *\/$/;"	e	enum:object_kinds
INT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	285;"	d
INTERDATA	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	3;"	d
INTER_FILE	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^typedef enum glob_type { INTRA_FILE, INTER_FILE};$/;"	e	enum:glob_type
INTLIST_H	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	15;"	d
INTRA_FILE	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^typedef enum glob_type { INTRA_FILE, INTER_FILE};$/;"	e	enum:glob_type
INTRBOOL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	215;"	d
INTRCNST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	216;"	d
INTRCONV	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	210;"	d
INTREND	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	209;"	d
INTRGEN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	213;"	d
INTRMAX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	212;"	d
INTRMIN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	211;"	d
INTRSPEC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	214;"	d
INT_MATRIX	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	17;"	d
INT_MATRIX	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	17;"	d
INT_MATRIX_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	18;"	d
INUMBERS_H	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	18;"	d
IN_ACTION	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	34;"	d
IN_ACTION	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	34;"	d
IOBACKSPACE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	235;"	d
IOCLOSE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	233;"	d
IOENDFILE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	236;"	d
IOINQUIRE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	231;"	d
IOOPEN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	232;"	d
IOREAD	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	237;"	d
IOREWIND	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	234;"	d
IOSBAD	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	226;"	d
IOSFMT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	229;"	d
IOSPOSITIONAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	227;"	d
IOSTDERR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	224;"	d
IOSTDIN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	222;"	d
IOSTDOUT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	223;"	d
IOSUNIT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	228;"	d
IOWRITE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	238;"	d
IO_IDENT_MAX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/names.h	2;"	d
ISCHAR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	278;"	d
ISCOMPLEX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	271;"	d
ISCONST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	280;"	d
ISERROR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	281;"	d
ISICON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	274;"	d
ISINT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	279;"	d
ISNUMERIC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	273;"	d
ISONE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	284;"	d
ISPLUSOP	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	282;"	d
ISREAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	272;"	d
ISSTAROP	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	283;"	d
ISTORAGE_H	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	15;"	d
IST_H	/cad2/ece540s/basesuif-1.1.2/include/ist.h	17;"	d
IST_H	/cad2/ece540s/basesuif-1.1.2/include/ist/ist.h	17;"	d
ITERATIVE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	48;"	d
ITERATIVE	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	48;"	d
Ident	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^inline integer_matrix Ident(int i) { integer_matrix tmp; tmp.ident(i); return tmp; }$/;"	f
Impldoblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Impldoblock$/;"	s
Info_writer	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^typedef void (*Info_writer)(if_ostream *, proc *);$/;"	t
Intrpacked	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Intrpacked	\/* bits for intrinsic function description *\/$/;"	s
JOINS	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	50;"	d
JOINS	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	50;"	d
KEYWORDS_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/keywords.h	15;"	d
L	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	integer_matrix *L;$/;"	m	class:full_hash_entry
L	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	integer_matrix *L;$/;"	m	class:exact
L	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	integer_matrix *L;$/;"	m	class:full_hash_entry
L	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	integer_matrix *L;$/;"	m	class:exact
L	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	integer_matrix *L;$/;"	m	class:full_hash_entry
L	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	integer_matrix *L;$/;"	m	class:exact
L	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq L;$/;"	m	class:lin_ineq_negate_iter
L	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq L;$/;"	m	class:lin_ineq_negate_iter
L	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Strans *L;$/;"	m	class:Seqn
L	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^    Strans *L;$/;"	m	class:n_Seqn
L	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Strans *L;$/;"	m	class:Seqn
L	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Strans *L;$/;"	m	class:Seqn
L	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^    Strans *L;$/;"	m	class:n_Seqn
L	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^    Strans *L;$/;"	m	class:n_Seqn
L	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq L;$/;"	m	class:lin_ineq_negate_iter
L	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table_entry * L;$/;"	m	class:name_table
L	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int * L;$/;"	m	class:sc_fm_constraint
L	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int * L;$/;"	m	class:sc_fm_results
L	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    static sc_fm_constraint ** L;                      \/\/ static data-set$/;"	m	class:named_sc_fm
L	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    lin_ineq   * L;$/;"	m	class:named_symcoeff_ineq
LABBASE	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	356;"	d
LABELFMT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	26;"	d
LABELINFO_H	/cad2/ece540s/basesuif-1.1.2/include/flow/labelinfo.h	15;"	d
LABEL_FORM	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    LABEL_FORM				\/* label *\/$/;"	e	enum:simple_format_enum
LABEL_FORM	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    LABEL_FORM				\/* label *\/$/;"	e	enum:simple_format_enum
LABEL_SYM	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    LABEL_SYM,				\/* label *\/$/;"	e	enum:sym_kind_enum
LABEL_SYM	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    LABEL_SYM,				\/* label *\/$/;"	e	enum:sym_kind_enum
LABEXEC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	202;"	d
LABFORMAT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	203;"	d
LABOTHER	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	204;"	d
LABUNKNOWN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	201;"	d
LARROW	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	39;"	d
LARROW	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	39;"	d
LAST_OP	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    LAST_OP$/;"	e	enum:simple_op_enum
LAST_OP	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    LAST_OP$/;"	e	enum:simple_op_enum
LATTICE_BOTTOM	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	143;"	d
LATTICE_BOTTOM	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	137;"	d
LATTICE_BOTTOM	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	137;"	d
LATTICE_OTHER	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	145;"	d
LATTICE_OTHER	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	139;"	d
LATTICE_OTHER	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	139;"	d
LATTICE_TOP	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	144;"	d
LATTICE_TOP	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	138;"	d
LATTICE_TOP	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	138;"	d
LDC_FORM	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    LDC_FORM,				\/* load constant *\/$/;"	e	enum:simple_format_enum
LDC_FORM	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    LDC_FORM,				\/* load constant *\/$/;"	e	enum:simple_format_enum
LEQ	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    lin_ineq LEQ;$/;"	m	class:access_ineq_e
LEQ	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    lin_ineq LEQ;$/;"	m	class:access_ineq_e
LEQ	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    lin_ineq LEQ;$/;"	m	class:access_ineq_e
LEX	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	14;"	d
LEX	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	14;"	d
LIBRARY	/cad2/ece540s/basesuif-1.1.2/include/suif/initsuif.h	56;"	d
LINEAR_INEQ_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	18;"	d
LIN_INEQ	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	17;"	d
LIN_INEQ	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	17;"	d
LL	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record *LL;\/* flow functions *\/$/;"	m	class:SV_dflow
LL	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record *LL;\/* flow functions *\/$/;"	m	class:SV_dflow
LOCAL	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	14;"	d
LOCAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	27;"	d
LOCAL	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	14;"	d
LOWUPSIZE	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	49;"	d
L_name	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *L_name;$/;"	m	class:Q_binder
L_name	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *L_name;$/;"	m	class:Q_binder
Labelblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Labelblock$/;"	s
Lattice_meet	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^inline Lattice_meet_action Lattice_meet(int left,int right)$/;"	f
Lattice_meet	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^inline Lattice_meet_action Lattice_meet(int left,int right)$/;"	f
Lattice_meet	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^inline Lattice_meet_action Lattice_meet(int left,int right)$/;"	f
Lattice_meet_action	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^enum Lattice_meet_action$/;"	g
Lattice_meet_action	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^enum Lattice_meet_action$/;"	g
Lattice_meet_action	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^enum Lattice_meet_action$/;"	g
Listblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Listblock$/;"	s
Literal	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Literal$/;"	s
Lma_bottom	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^    Lma_bottom,$/;"	e	enum:Lattice_meet_action
Lma_bottom	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^    Lma_bottom,$/;"	e	enum:Lattice_meet_action
Lma_bottom	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^    Lma_bottom,$/;"	e	enum:Lattice_meet_action
Lma_left	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^    Lma_left,$/;"	e	enum:Lattice_meet_action
Lma_left	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^    Lma_left,$/;"	e	enum:Lattice_meet_action
Lma_left	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^    Lma_left,$/;"	e	enum:Lattice_meet_action
Lma_meet	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^    Lma_meet$/;"	e	enum:Lattice_meet_action
Lma_meet	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^    Lma_meet$/;"	e	enum:Lattice_meet_action
Lma_meet	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^    Lma_meet$/;"	e	enum:Lattice_meet_action
Lma_right	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^    Lma_right,$/;"	e	enum:Lattice_meet_action
Lma_right	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^    Lma_right,$/;"	e	enum:Lattice_meet_action
Lma_right	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^    Lma_right,$/;"	e	enum:Lattice_meet_action
Lma_top	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^    Lma_top,$/;"	e	enum:Lattice_meet_action
Lma_top	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^    Lma_top,$/;"	e	enum:Lattice_meet_action
Lma_top	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^    Lma_top,$/;"	e	enum:Lattice_meet_action
Long	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef int Long;$/;"	t
Long	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef int Long;$/;"	t
M	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	16;"	d
MACHINE_REG	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    MACHINE_REG				\/* machine register *\/$/;"	e	enum:reg_kind_enum
MACHINE_REG	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    MACHINE_REG				\/* machine register *\/$/;"	e	enum:reg_kind_enum
MACHINE_REG_KINDS	/cad2/ece540s/basesuif-1.1.2/include/simple.h	140;"	d
MACHINE_REG_KINDS	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	140;"	d
MATHINCFILE	/cad2/ece540s/basesuif-1.1.2/include/suifmath.h	19;"	d
MATHINCFILE	/cad2/ece540s/basesuif-1.1.2/include/suifmath.h	21;"	d
MATHINCFILE	/cad2/ece540s/basesuif-1.1.2/include/suifmath/suifmath.h	19;"	d
MATHINCFILE	/cad2/ece540s/basesuif-1.1.2/include/suifmath/suifmath.h	21;"	d
MATRIX_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	13;"	d
MAX	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	22;"	d
MAX	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	139;"	d
MAX	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^inline double MAX(double A, double B) { return (A > B)?A:B; }$/;"	f
MAX	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^inline int    MAX(int A, int B) { return (A > B)?A:B; }$/;"	f
MAX	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	29;"	d
MAXCTL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	16;"	d
MAXDIM	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	11;"	d
MAXEQUIV	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	30;"	d
MAXEXT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	29;"	d
MAXHASH	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	26;"	d
MAXINCLUDES	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	12;"	d
MAXLABLIST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	31;"	d
MAXLITERALS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	13;"	d
MAXREGVAR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	28;"	d
MAXSTNO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	28;"	d
MAXSULIST	/cad2/ece540s/basesuif-1.1.2/include/builder/bldtypes.h	130;"	d
MAXTOKENLEN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	15;"	d
MAX_ARITY	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	32;"	d
MAX_ARITY	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	32;"	d
MAX_ARITY	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	32;"	d
MAX_CUSTOM	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	28;"	d
MAX_DIST	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	36;"	d
MAX_DIST	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	77;"	d
MAX_DIST	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	49;"	d
MAX_DIST	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	90;"	d
MAX_DIST	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	49;"	d
MAX_DIST	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	90;"	d
MAX_LOOPS	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	29;"	d
MAX_LOOPS	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	29;"	d
MAX_LOOPS	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	29;"	d
MAX_OUTPUT_SIZE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/nice_printf.h	5;"	d
MBR_FORM	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    MBR_FORM,				\/* multi-way branch *\/$/;"	e	enum:simple_format_enum
MBR_FORM	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    MBR_FORM,				\/* multi-way branch *\/$/;"	e	enum:simple_format_enum
MEET	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	29;"	d
MEET	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	29;"	d
MIN	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	23;"	d
MIN	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	138;"	d
MIN	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^inline double MIN(double A, double B) { return (A < B)?A:B; }$/;"	f
MIN	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^inline int    MIN(int A, int B) { return (A < B)?A:B; }$/;"	f
MIN	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	36;"	d
MISC_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/misc.h	15;"	d
MISC_H	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	11;"	d
MSKADDR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	258;"	d
MSKCHAR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	259;"	d
MSKCOMPLEX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	262;"	d
MSKINT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	260;"	d
MSKIREG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	30;"	d
MSKLOGICAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	257;"	d
MSKREAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	261;"	d
MSKSTATIC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	263;"	d
MTFLIST_H	/cad2/ece540s/basesuif-1.1.2/include/general/mtflist.h	15;"	d
MTFLIST_H	/cad2/ece540s/basesuif-1.1.2/include/suif/mtflist.h	17;"	d
Multitype	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef union Multitype Multitype;$/;"	t	typeref:union:Multitype
Multitype	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^union Multitype {	\/* for multiple entry points *\/$/;"	u
Multitype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef union Multitype Multitype;$/;"	t	typeref:union:Multitype
Multitype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^union Multitype {	\/* for multiple entry points *\/$/;"	u
N	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    int N;$/;"	m	class:in_cal
NAMED_LIN_INEQ_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	15;"	d
NAMED_SC_FM_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	15;"	d
NAMED_SC_MERGE_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	4;"	d
NAMED_SYMCOEFF_INEQ_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	15;"	d
NAMETABLE_H	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	14;"	d
NAMETABLE_H	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	14;"	d
NAMETABLE_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	15;"	d
NEW_VALUE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	28;"	d
NEW_VALUE	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	28;"	d
NEW_VAR	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	27;"	d
NEW_VAR	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	27;"	d
NEXTINSTR_H	/cad2/ece540s/basesuif-1.1.2/include/flow/nextinstr.h	15;"	d
NM_BOUNDS	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^const int NM_BOUNDS    = -100;$/;"	v
NM_BOUNDS	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^const int NM_BOUNDS    = -100;$/;"	v
NM_BOUNDS	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	20;"	d
NM_CONSTANT	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^const int NM_CONSTANT  = -1000;$/;"	v
NM_CONSTANT	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^const int NM_CONSTANT  = -1000;$/;"	v
NM_CONSTANT	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	21;"	d
NM_LOCATIONS	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^const int NM_LOCATIONS = -1;$/;"	v
NM_LOCATIONS	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^const int NM_LOCATIONS = -1;$/;"	v
NM_LOCATIONS	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	18;"	d
NM_SYMBOLS	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^const int NM_SYMBOLS   = -10;$/;"	v
NM_SYMBOLS	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^const int NM_SYMBOLS   = -10;$/;"	v
NM_SYMBOLS	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	19;"	d
NO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	29;"	d
NO66	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	291;"	d
NODE_BASE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	21;"	d
NODE_BASE	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	21;"	d
NODE_TYPE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	22;"	d
NODE_TYPE	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	22;"	d
NOEXT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	292;"	d
NORMALIZE_CODE	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    NORMALIZE_CODE           \/\/ normalize access vectors *and* modify the code$/;"	e	enum:normalize_kinds
NORMALIZE_NONE	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    NORMALIZE_NONE,          \/\/ don't normalize$/;"	e	enum:normalize_kinds
NORMALIZE_VECTORS	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    NORMALIZE_VECTORS,       \/\/ normalize access vectors but don't modify code$/;"	e	enum:normalize_kinds
NO_REGISTER	/cad2/ece540s/basesuif-1.1.2/include/simple.h	122;"	d
NO_REGISTER	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	122;"	d
NRASTMAP_H	/cad2/ece540s/basesuif-1.1.2/include/flow/nrastmap.h	15;"	d
NTYPES	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	34;"	d
NTYPES0	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	35;"	d
NULL	/cad2/ece540s/basesuif-1.1.2/include/general/useful.h	22;"	d
NULL	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	69;"	d
NULL	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	73;"	d
Name	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    name_store Name;$/;"	m	class:access_ineq_e
Name	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    name_store Name;$/;"	m	class:access_ineq_e
Name	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    name_store Name;$/;"	m	class:access_ineq_e
Nameblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Nameblock$/;"	s
Namelist	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^struct Namelist {$/;"	s
Namelist	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef struct Namelist Namelist;$/;"	t	typeref:struct:Namelist
Namelist	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^struct Namelist {$/;"	s
Namelist	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef struct Namelist Namelist;$/;"	t	typeref:struct:Namelist
Namep	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^typedef struct Nameblock *Namep;$/;"	t	typeref:struct:Nameblock
Node_index	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^typedef int           Node_index;$/;"	t
Node_index	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^typedef int Node_index;$/;"	t
Node_index	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^typedef int Node_index;$/;"	t
OFFSET_END_TO_END	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    OFFSET_END_TO_END$/;"	e	enum:offset_kind
OFFSET_END_TO_START	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    OFFSET_START_TO_START, OFFSET_START_TO_END, OFFSET_END_TO_START,$/;"	e	enum:offset_kind
OFFSET_START_TO_END	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    OFFSET_START_TO_START, OFFSET_START_TO_END, OFFSET_END_TO_START,$/;"	e	enum:offset_kind
OFFSET_START_TO_START	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    OFFSET_START_TO_START, OFFSET_START_TO_END, OFFSET_END_TO_START,$/;"	e	enum:offset_kind
OLDMATH_H	/cad2/ece540s/basesuif-1.1.2/include/math/oldmath.h	15;"	d
OLDMATH_H	/cad2/ece540s/basesuif-1.1.2/include/oldmath.h	15;"	d
ONEOF	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	270;"	d
OPABS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	166;"	d
OPADDR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	169;"	d
OPAND	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	144;"	d
OPARROW	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	188;"	d
OPASSIGN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	157;"	d
OPASSIGNI	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	192;"	d
OPBITAND	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	172;"	d
OPBITANDEQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	182;"	d
OPBITNOT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	174;"	d
OPBITOR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	171;"	d
OPBITOREQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	184;"	d
OPBITXOR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	173;"	d
OPBITXOREQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	183;"	d
OPCALL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	155;"	d
OPCCALL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	156;"	d
OPCHARCAST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	194;"	d
OPCODES_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	15;"	d
OPCODES_H	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	17;"	d
OPCOLON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	165;"	d
OPCOMMA	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	163;"	d
OPCONCAT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	148;"	d
OPCONV	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	160;"	d
OPDABS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	195;"	d
OPDMAX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	191;"	d
OPDMIN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	190;"	d
OPDOT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	187;"	d
OPEQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	150;"	d
OPEQV	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	145;"	d
OPERAND_H	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	17;"	d
OPERAND_OPERATORS_H	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	18;"	d
OPER_INSTR	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    OPER_INSTR				\/* instruction *\/$/;"	e	enum:operand_kinds
OPER_NULL	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    OPER_NULL,				\/* null operand *\/$/;"	e	enum:operand_kinds
OPER_SYM	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    OPER_SYM,				\/* variable symbol *\/$/;"	e	enum:operand_kinds
OPGE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	154;"	d
OPGT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	151;"	d
OPIDENTITY	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	193;"	d
OPINDIRECT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	170;"	d
OPLE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	152;"	d
OPLSHIFT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	161;"	d
OPLSHIFTEQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	180;"	d
OPLT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	149;"	d
OPMAX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	168;"	d
OPMAX2	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	197;"	d
OPMIN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	167;"	d
OPMIN2	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	196;"	d
OPMINUS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	138;"	d
OPMINUSEQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	177;"	d
OPMOD	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	162;"	d
OPMODEQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	179;"	d
OPNE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	153;"	d
OPNEG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	142;"	d
OPNEG1	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	189;"	d
OPNEQV	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	146;"	d
OPNOT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	147;"	d
OPOR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	143;"	d
OPPLUS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	137;"	d
OPPLUSEQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	158;"	d
OPPOWER	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	141;"	d
OPPREDEC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	186;"	d
OPPREINC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	185;"	d
OPQUEST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	164;"	d
OPRSHIFT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	175;"	d
OPRSHIFTEQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	181;"	d
OPSLASH	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	140;"	d
OPSLASHEQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	178;"	d
OPSTAR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	139;"	d
OPSTAREQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	159;"	d
OPS_H	/cad2/ece540s/basesuif-1.1.2/include/simple/ops.h	13;"	d
OPWHATSIN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	176;"	d
OUTSIDE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	61;"	d
OUT_ACTION	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	35;"	d
OUT_ACTION	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	35;"	d
P1_ADDR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	30;"	d
P1_ASGOTO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	22;"	d
P1_CHARP	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	39;"	d
P1_COMMENT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	2;"	d
P1_COMP_GOTO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	35;"	d
P1_CONST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	7;"	d
P1_ELIF	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	27;"	d
P1_ELSE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	26;"	d
P1_ENDELSE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	29;"	d
P1_ENDFOR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	37;"	d
P1_ENDIF	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	28;"	d
P1_EOF	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	3;"	d
P1_EXPR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	8;"	d
P1_EXTERN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	15;"	d
P1_FILENAME	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	5;"	d
P1_FILENAME_MAX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	41;"	d
P1_FOR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	36;"	d
P1_FORTRAN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	38;"	d
P1_GOTO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	24;"	d
P1_HEAD	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	17;"	d
P1_IDENT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	13;"	d
P1_IF	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	25;"	d
P1_LABEL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	21;"	d
P1_LIST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	18;"	d
P1_LITERAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	20;"	d
P1_NAME_POINTER	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	6;"	d
P1_SET_LINE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	4;"	d
P1_STMTBUFSIZE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	42;"	d
P1_SUBR_RET	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	33;"	d
P1_UNKNOWN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/p1defs.h	1;"	d
P2ANDAND	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	18;"	d
P2ARIF	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	53;"	d
P2ASSIGN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	22;"	d
P2BAD	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	3;"	d
P2BITAND	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	13;"	d
P2BITNOT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	32;"	d
P2BITOR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	14;"	d
P2BITXOR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	15;"	d
P2CALL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	28;"	d
P2CALL0	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	29;"	d
P2CBRANCH	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	43;"	d
P2CHAR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	60;"	d
P2COLON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	17;"	d
P2COMOP	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	23;"	d
P2CONV	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	41;"	d
P2DREAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	62;"	d
P2EOF	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	52;"	d
P2EQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	33;"	d
P2FORCE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	42;"	d
P2FUNCT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	64;"	d
P2GE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	37;"	d
P2GOTO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	20;"	d
P2GT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	38;"	d
P2ICON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	5;"	d
P2INDIRECT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	12;"	d
P2INT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	57;"	d
P2LABEL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	54;"	d
P2LBRACKET	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	50;"	d
P2LE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	35;"	d
P2LISTOP	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	21;"	d
P2LONG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	58;"	d
P2LSHIFT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	26;"	d
P2LT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	36;"	d
P2MINUS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	8;"	d
P2MOD	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	25;"	d
P2NAME	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	4;"	d
P2NE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	34;"	d
P2NEG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	9;"	d
P2NOT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	31;"	d
P2OREG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	40;"	d
P2OROR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	19;"	d
P2PASS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	47;"	d
P2PLUS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	6;"	d
P2PLUSEQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	7;"	d
P2PTR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	63;"	d
P2QUEST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	16;"	d
P2RBRACKET	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	51;"	d
P2REAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	61;"	d
P2REG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	39;"	d
P2RSHIFT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	27;"	d
P2SHORT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	56;"	d
P2SLASH	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	24;"	d
P2STAR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	10;"	d
P2STAREQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	11;"	d
P2STMT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	48;"	d
P2SWITCH	/cad2/ece540s/basesuif-1.1.2/include/sf2c/pccdefs.h	49;"	d
PARSE_INCLUDE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	2;"	d
PATH	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	49;"	d
PATH	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	49;"	d
PATH_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	15;"	d
PBLIST_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/pblist.h	15;"	d
PCC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	11;"	d
PDP11	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	5;"	d
PEXTERNAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	115;"	d
PINTRINSIC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	116;"	d
PK_label_info	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    PK_label_manager = -5,	PK_label_info = -6,$/;"	e	enum:path_kind
PK_label_manager	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    PK_label_manager = -5,	PK_label_info = -6,$/;"	e	enum:path_kind
PK_procedure_info	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    PK_procedure_manager = -7,	PK_procedure_info = -8$/;"	e	enum:path_kind
PK_procedure_manager	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    PK_procedure_manager = -7,	PK_procedure_info = -8$/;"	e	enum:path_kind
PK_register_info	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    PK_register_manager= -1,	PK_register_info = -2,$/;"	e	enum:path_kind
PK_register_manager	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    PK_register_manager= -1,	PK_register_info = -2,$/;"	e	enum:path_kind
PK_storage_info	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    PK_storage_manager = -3,	PK_storage_info = -4,$/;"	e	enum:path_kind
PK_storage_manager	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    PK_storage_manager = -3,	PK_storage_info = -4,$/;"	e	enum:path_kind
PNULL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	33;"	d
PP_iset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    PP_iset() {}$/;"	f	class:PP_iset
PP_iset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class PP_iset: public glist$/;"	c
PP_iset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    PP_iset() {}$/;"	f	class:PP_iset
PP_iset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class PP_iset: public glist$/;"	c
PP_iset_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    PP_iset_iter() {}$/;"	f	class:PP_iset_iter
PP_iset_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    PP_iset_iter(PP_iset *s):glist_iter(s)$/;"	f	class:PP_iset_iter
PP_iset_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class PP_iset_iter: public glist_iter {$/;"	c
PP_iset_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    PP_iset_iter() {}$/;"	f	class:PP_iset_iter
PP_iset_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    PP_iset_iter(PP_iset *s):glist_iter(s)$/;"	f	class:PP_iset_iter
PP_iset_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class PP_iset_iter: public glist_iter {$/;"	c
PP_item	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    PP_item(SV_rule *r,int d=0)$/;"	f	class:PP_item
PP_item	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class PP_item: public glist_e$/;"	c
PP_item	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    PP_item(SV_rule *r,int d=0)$/;"	f	class:PP_item
PP_item	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class PP_item: public glist_e$/;"	c
PP_mach	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class PP_mach $/;"	c
PP_mach	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class PP_mach $/;"	c
PP_mach_size	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^const int PP_mach_size = 100;$/;"	v
PP_mach_size	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^const int PP_mach_size = 100;$/;"	v
PP_state	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class PP_state $/;"	c
PP_state	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class PP_state $/;"	c
PROBLEM	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	20;"	d
PROBLEM	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	20;"	d
PROCBLOCK	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	70;"	d
PROCESS_FUNCTION	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	33;"	d
PROCESS_FUNCTION	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	33;"	d
PROCFUNCT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	72;"	d
PROCINFO_H	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	15;"	d
PROCITER_H	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	15;"	d
PROCMAIN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	69;"	d
PROCSUBR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	71;"	d
PROC_H	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	15;"	d
PROC_SYM	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    PROC_SYM				\/* procedure *\/$/;"	e	enum:sym_kind_enum
PROC_SYM	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    PROC_SYM				\/* procedure *\/$/;"	e	enum:sym_kind_enum
PROLOG	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	17;"	d
PROLOG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	17;"	d
PSEUDO_REG	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    PSEUDO_REG,				\/* pseudo register *\/$/;"	e	enum:reg_kind_enum
PSEUDO_REG	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    PSEUDO_REG,				\/* pseudo register *\/$/;"	e	enum:reg_kind_enum
PSTFUNCT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	117;"	d
PTHISPROC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	118;"	d
PTR_INDEX_H	/cad2/ece540s/basesuif-1.1.2/include/suif/ptr_index.h	17;"	d
PUNKNOWN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	114;"	d
P_CASE_INSENSITIVE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	17;"	d
P_CHAR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	7;"	d
P_DOUBLE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	15;"	d
P_FILE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	11;"	d
P_FLOAT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	14;"	d
P_INFINITE_ARGS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	22;"	d
P_INT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	10;"	d
P_LONG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	9;"	d
P_NEW_FILE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	13;"	d
P_NO_ARGS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	20;"	d
P_OLD_FILE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	12;"	d
P_ONE_ARG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	21;"	d
P_REQUIRED_PREFIX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	18;"	d
P_SHORT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	8;"	d
P_STRING	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	6;"	d
Paramblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Paramblock$/;"	s
Parameterized_x_array0	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  Parameterized_x_array0(int sz = -1)$/;"	f	class:Parameterized_x_array0
Parameterized_x_array0	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^class Parameterized_x_array0$/;"	c
Parameterized_x_array1	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^    Parameterized_x_array1(int sz=0)$/;"	f	class:Parameterized_x_array1
Parameterized_x_array1	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^class Parameterized_x_array1: public X_array0$/;"	c
Parameterized_x_array1	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    inline Parameterized_x_array1(int sz=0)$/;"	f	class:Parameterized_x_array1
Parameterized_x_array1	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^class Parameterized_x_array1: public X_array1$/;"	c
Parameterized_x_array1	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    inline Parameterized_x_array1(int sz=0)$/;"	f	class:Parameterized_x_array1
Parameterized_x_array1	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^class Parameterized_x_array1: public X_array1$/;"	c
Primblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Primblock$/;"	s
Q	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Seqn *Q;$/;"	m	class:Snode
Q	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Seqn *Q;$/;"	m	class:Snode
Q	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Seqn *Q;$/;"	m	class:Snode
Q_binder	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Q_binder(Symbol *Q,Symbol *V,Symbol *L,Symbol *S)$/;"	f	class:Q_binder
Q_binder	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class Q_binder {$/;"	c
Q_binder	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Q_binder(Symbol *Q,Symbol *V,Symbol *L,Symbol *S)$/;"	f	class:Q_binder
Q_binder	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class Q_binder {$/;"	c
Q_name	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *Q_name;$/;"	m	class:Q_binder
Q_name	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *Q_name;$/;"	m	class:Q_binder
R	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^    int * R;$/;"	m	class:integer_row
R	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^    int * R;$/;"	m	class:integer_row
R	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    int * R;$/;"	m	class:integer_row
RARROW	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	40;"	d
RARROW	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	40;"	d
RCS_BASE	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	24;"	d
RCS_BASE	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	32;"	d
RCS_HEADER	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	27;"	d
RCS_HEADER	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	33;"	d
RECORD_TYPE	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    RECORD_TYPE				\/* structs and unions *\/$/;"	e	enum:simple_type_base_enum
RECORD_TYPE	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    RECORD_TYPE				\/* structs and unions *\/$/;"	e	enum:simple_type_base_enum
REDUCE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	18;"	d
REDUCE	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	18;"	d
REGINFO_H	/cad2/ece540s/basesuif-1.1.2/include/flow/reginfo.h	15;"	d
REGISTER_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	15;"	d
REGMAP_H	/cad2/ece540s/basesuif-1.1.2/include/simple/regmap.h	13;"	d
REG_MAP_SIZE	/cad2/ece540s/basesuif-1.1.2/include/simple/regmap.h	17;"	d
RO_DONT_REDUCE	/cad2/ece540s/basesuif-1.1.2/include/fmred.h	/^enum red_operation { RO_DONT_REDUCE,$/;"	e	enum:red_operation
RO_DONT_REDUCE	/cad2/ece540s/basesuif-1.1.2/include/math/fmred.h	/^enum red_operation { RO_DONT_REDUCE,$/;"	e	enum:red_operation
RO_DONT_REDUCE	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fmred.h	/^enum red_operation { RO_DONT_REDUCE,$/;"	e	enum:red_operation
RO_REDUCE_AWAY	/cad2/ece540s/basesuif-1.1.2/include/fmred.h	/^                     RO_REDUCE_AWAY$/;"	e	enum:red_operation
RO_REDUCE_AWAY	/cad2/ece540s/basesuif-1.1.2/include/math/fmred.h	/^                     RO_REDUCE_AWAY$/;"	e	enum:red_operation
RO_REDUCE_AWAY	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fmred.h	/^                     RO_REDUCE_AWAY$/;"	e	enum:red_operation
RO_REDUCE_SHOW	/cad2/ece540s/basesuif-1.1.2/include/fmred.h	/^                     RO_REDUCE_SHOW,$/;"	e	enum:red_operation
RO_REDUCE_SHOW	/cad2/ece540s/basesuif-1.1.2/include/math/fmred.h	/^                     RO_REDUCE_SHOW,$/;"	e	enum:red_operation
RO_REDUCE_SHOW	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fmred.h	/^                     RO_REDUCE_SHOW,$/;"	e	enum:red_operation
RSTREAM_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	15;"	d
RULES	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	15;"	d
RULES	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	15;"	d
Rplblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^struct Rplblock	\/* name replacement block *\/$/;"	s
S	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    lin_ineq  S;$/;"	m	class:poly_iterator
S	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	integer_matrix *S;$/;"	m	class:full_hash_entry
S	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	integer_matrix S;$/;"	m	class:exact
S	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	integer_matrix *S;$/;"	m	class:full_hash_entry
S	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	integer_matrix S;$/;"	m	class:exact
S	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	integer_matrix *S;$/;"	m	class:full_hash_entry
S	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	integer_matrix S;$/;"	m	class:exact
S	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    lin_ineq  S;$/;"	m	class:poly_iterator
S	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Snode *S;$/;"	m	class:Seqn
S	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Snode *S;$/;"	m	class:Seqn
S	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Snode *S;$/;"	m	class:Seqn
S	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    lin_ineq  S;$/;"	m	class:poly_iterator
SAND	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	86;"	d
SARITHIF	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	48;"	d
SASGOTO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	46;"	d
SASSIGN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	20;"	d
SAUTOMATIC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	21;"	d
SBACKSPACE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	22;"	d
SBITCON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	9;"	d
SBLOCK	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	23;"	d
SCALL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	24;"	d
SCHARACTER	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	25;"	d
SCLOSE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	26;"	d
SCOLON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	77;"	d
SCOMMA	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	78;"	d
SCOMMENT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	2;"	d
SCOMMON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	27;"	d
SCOMPGOTO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	47;"	d
SCOMPLEX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	28;"	d
SCONCAT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	85;"	d
SCONTINUE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	29;"	d
SCURRENCY	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	79;"	d
SDATA	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	30;"	d
SDCOMPLEX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	31;"	d
SDCON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	8;"	d
SDIMENSION	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	32;"	d
SDO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	33;"	d
SDOUBLE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	34;"	d
SELSE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	35;"	d
SELSEIF	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	36;"	d
SEND	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	37;"	d
SENDFILE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	38;"	d
SENDIF	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	39;"	d
SENTRY	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	40;"	d
SEOS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	1;"	d
SEQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	91;"	d
SEQN_bb	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^enum SEQN_type { SEQN_normal, SEQN_noncyclic, SEQN_bb,$/;"	e	enum:SEQN_type
SEQN_bb	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^enum SEQN_type { SEQN_normal, SEQN_noncyclic, SEQN_bb,$/;"	e	enum:SEQN_type
SEQN_bb	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^enum SEQN_type { SEQN_normal, SEQN_noncyclic, SEQN_bb,$/;"	e	enum:SEQN_type
SEQN_dominator	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^		 SEQN_header, SEQN_dominator,$/;"	e	enum:SEQN_type
SEQN_dominator	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^		 SEQN_header, SEQN_dominator,$/;"	e	enum:SEQN_type
SEQN_dominator	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^		 SEQN_header, SEQN_dominator,$/;"	e	enum:SEQN_type
SEQN_header	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^		 SEQN_header, SEQN_dominator,$/;"	e	enum:SEQN_type
SEQN_header	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^		 SEQN_header, SEQN_dominator,$/;"	e	enum:SEQN_type
SEQN_header	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^		 SEQN_header, SEQN_dominator,$/;"	e	enum:SEQN_type
SEQN_improper	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^		 SEQN_improper, SEQN_unreachable };$/;"	e	enum:SEQN_type
SEQN_improper	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^		 SEQN_improper, SEQN_unreachable };$/;"	e	enum:SEQN_type
SEQN_improper	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^		 SEQN_improper, SEQN_unreachable };$/;"	e	enum:SEQN_type
SEQN_noncyclic	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^enum SEQN_type { SEQN_normal, SEQN_noncyclic, SEQN_bb,$/;"	e	enum:SEQN_type
SEQN_noncyclic	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^enum SEQN_type { SEQN_normal, SEQN_noncyclic, SEQN_bb,$/;"	e	enum:SEQN_type
SEQN_noncyclic	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^enum SEQN_type { SEQN_normal, SEQN_noncyclic, SEQN_bb,$/;"	e	enum:SEQN_type
SEQN_normal	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^enum SEQN_type { SEQN_normal, SEQN_noncyclic, SEQN_bb,$/;"	e	enum:SEQN_type
SEQN_normal	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^enum SEQN_type { SEQN_normal, SEQN_noncyclic, SEQN_bb,$/;"	e	enum:SEQN_type
SEQN_normal	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^enum SEQN_type { SEQN_normal, SEQN_noncyclic, SEQN_bb,$/;"	e	enum:SEQN_type
SEQN_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^enum SEQN_type { SEQN_normal, SEQN_noncyclic, SEQN_bb,$/;"	g
SEQN_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^enum SEQN_type { SEQN_normal, SEQN_noncyclic, SEQN_bb,$/;"	g
SEQN_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^enum SEQN_type { SEQN_normal, SEQN_noncyclic, SEQN_bb,$/;"	g
SEQN_unreachable	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^		 SEQN_improper, SEQN_unreachable };$/;"	e	enum:SEQN_type
SEQN_unreachable	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^		 SEQN_improper, SEQN_unreachable };$/;"	e	enum:SEQN_type
SEQN_unreachable	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^		 SEQN_improper, SEQN_unreachable };$/;"	e	enum:SEQN_type
SEQUALS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	76;"	d
SEQUIV	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	41;"	d
SEQV	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	89;"	d
SEXTERNAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	42;"	d
SFALSE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	13;"	d
SFIELD	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	16;"	d
SFORMAT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	43;"	d
SFUNCTION	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	44;"	d
SF_CANT_OPEN	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^enum suif_check_result { SF_CANT_OPEN, SF_NOT_SUIF, SF_SUIF_FILE };$/;"	e	enum:suif_check_result
SF_NOT_SUIF	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^enum suif_check_result { SF_CANT_OPEN, SF_NOT_SUIF, SF_SUIF_FILE };$/;"	e	enum:suif_check_result
SF_SUIF_FILE	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^enum suif_check_result { SF_CANT_OPEN, SF_NOT_SUIF, SF_SUIF_FILE };$/;"	e	enum:suif_check_result
SGE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	95;"	d
SGOTO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	45;"	d
SGT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	93;"	d
SHARLIT	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	17;"	d
SHARLIT	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	17;"	d
SHARLIT	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	17;"	d
SHARLIT_TEST	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	13;"	d
SHARLIT_TEST	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	13;"	d
SHARLIT_TEST	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	13;"	d
SHEXCON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	11;"	d
SHOLLERITH	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	5;"	d
SICON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	6;"	d
SIGNED_TYPE	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    SIGNED_TYPE,			\/* signed integers *\/$/;"	e	enum:simple_type_base_enum
SIGNED_TYPE	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    SIGNED_TYPE,			\/* signed integers *\/$/;"	e	enum:simple_type_base_enum
SIMPLE_H	/cad2/ece540s/basesuif-1.1.2/include/simple.h	13;"	d
SIMPLE_H	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	13;"	d
SIMPLE_IPA_IND_READ_PARAM	/cad2/ece540s/basesuif-1.1.2/include/dependence/deptest_msc.h	49;"	d
SIMPLE_IPA_IND_READ_PARAM	/cad2/ece540s/basesuif-1.1.2/include/dephack/deptest_msc.h	44;"	d
SIMPLE_IPA_IND_READ_PARAM	/cad2/ece540s/basesuif-1.1.2/include/deptest/deptest_msc.h	44;"	d
SIMPLE_IPA_IND_WRITE_PARAM	/cad2/ece540s/basesuif-1.1.2/include/dependence/deptest_msc.h	50;"	d
SIMPLE_IPA_IND_WRITE_PARAM	/cad2/ece540s/basesuif-1.1.2/include/dephack/deptest_msc.h	45;"	d
SIMPLE_IPA_IND_WRITE_PARAM	/cad2/ece540s/basesuif-1.1.2/include/deptest/deptest_msc.h	45;"	d
SIMPLE_IPA_READ_GLOB	/cad2/ece540s/basesuif-1.1.2/include/dependence/deptest_msc.h	51;"	d
SIMPLE_IPA_READ_GLOB	/cad2/ece540s/basesuif-1.1.2/include/dephack/deptest_msc.h	46;"	d
SIMPLE_IPA_READ_GLOB	/cad2/ece540s/basesuif-1.1.2/include/deptest/deptest_msc.h	46;"	d
SIMPLE_IPA_WRITE_GLOB	/cad2/ece540s/basesuif-1.1.2/include/dependence/deptest_msc.h	52;"	d
SIMPLE_IPA_WRITE_GLOB	/cad2/ece540s/basesuif-1.1.2/include/dephack/deptest_msc.h	47;"	d
SIMPLE_IPA_WRITE_GLOB	/cad2/ece540s/basesuif-1.1.2/include/deptest/deptest_msc.h	47;"	d
SIMPLICIT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	50;"	d
SIMPLIFIER	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	19;"	d
SIMPLIFIER	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	19;"	d
SINCLUDE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	18;"	d
SINQUIRE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	51;"	d
SINTEGER	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	52;"	d
SINTRINSIC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	53;"	d
SLABEL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	3;"	d
SLE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	94;"	d
SLET	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	19;"	d
SLOGICAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	54;"	d
SLOGIF	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	49;"	d
SLPAR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	74;"	d
SLT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	92;"	d
SMALLEST_LONG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	14;"	d
SMALLEST_SHORT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	13;"	d
SMALL_TABLE_SIZE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	90;"	d
SMINUS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	81;"	d
SNAME	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	14;"	d
SNAMEEQ	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	15;"	d
SNAMELIST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	55;"	d
SNE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	96;"	d
SNEQV	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	88;"	d
SNOT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	90;"	d
SOCTCON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	10;"	d
SOP	/cad2/ece540s/basesuif-1.1.2/include/simple.h	184;"	d
SOP	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	184;"	d
SOPEN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	56;"	d
SOR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	87;"	d
SP	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    lin_ineq  SP;$/;"	m	class:poly_iterator
SP	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    lin_ineq  SP;$/;"	m	class:poly_iterator
SP	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    lin_ineq  SP;$/;"	m	class:poly_iterator
SPARAM	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	57;"	d
SPAUSE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	58;"	d
SPDEL	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    lin_ineq  SPDEL;$/;"	m	class:poly_iterator
SPDEL	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    lin_ineq  SPDEL;$/;"	m	class:poly_iterator
SPDEL	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    lin_ineq  SPDEL;$/;"	m	class:poly_iterator
SPECIAL_FMT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	20;"	d
SPLUS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	80;"	d
SPOWER	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	84;"	d
SPRINT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	59;"	d
SPROGRAM	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	60;"	d
SPUNCH	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	61;"	d
SRCON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	7;"	d
SREAD	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	62;"	d
SREAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	63;"	d
SRETURN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	64;"	d
SREWIND	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	65;"	d
SRPAR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	75;"	d
SS	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record *SS;\/* nodes *\/$/;"	m	class:SV_dflow
SS	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record *SS;\/* nodes *\/$/;"	m	class:SV_dflow
SSAVE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	66;"	d
SSCALE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	17;"	d
SSLASH	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	83;"	d
SSTAR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	82;"	d
SSTATIC	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	67;"	d
SSTOP	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	68;"	d
SSTRING	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	15;"	d
SSTRING	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	19;"	d
SSUBROUTINE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	69;"	d
SS_pointer_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_pointer *SS_pointer_type;$/;"	m	class:SV_dflow
SS_pointer_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_pointer *SS_pointer_type;$/;"	m	class:SV_dflow
STAR	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	52;"	d
STAR	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	52;"	d
STGARG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	80;"	d
STGAUTO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	81;"	d
STGBSS	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	82;"	d
STGCOMMON	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	89;"	d
STGCONST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	84;"	d
STGEQUIV	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	90;"	d
STGEXT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	85;"	d
STGINIT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	83;"	d
STGINTR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	86;"	d
STGLENG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	95;"	d
STGNULL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	96;"	d
STGREG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	91;"	d
STGSTFUNCT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	88;"	d
STGUNKNOWN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	79;"	d
STHEN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	70;"	d
STO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	71;"	d
STORINFO_H	/cad2/ece540s/basesuif-1.1.2/include/flow/storinfo.h	15;"	d
STRING	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	38;"	d
STRING	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	38;"	d
STRINGTABLE_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/stringtable.h	15;"	d
STRINGTABLE_H	/cad2/ece540s/basesuif-1.1.2/include/suif/stringtable.h	17;"	d
STRING_INDEX_H	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	17;"	d
STRUCT_ANNOTE	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	99;"	d
STRUE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	12;"	d
ST_NORMAL	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    ST_NORMAL,$/;"	e	enum:stream_type
ST_RANDOM	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    ST_RANDOM$/;"	e	enum:stream_type
SUIFMATH_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath.h	15;"	d
SUIFMATH_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/suifmath.h	15;"	d
SUIFOBJ_H	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	17;"	d
SUIFSTREAMS_H	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	17;"	d
SUIFTYPES_H	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	15;"	d
SUIF_CAT	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	20;"	d
SUIF_CAT_INTERNAL	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	19;"	d
SUIF_FOPEN_MAX	/cad2/ece540s/basesuif-1.1.2/include/machine_dependent.h	45;"	d
SUIF_FOPEN_MAX	/cad2/ece540s/basesuif-1.1.2/include/machine_dependent.h	48;"	d
SUIF_FOPEN_MAX	/cad2/ece540s/basesuif-1.1.2/include/suif/machine_dependent.h	45;"	d
SUIF_FOPEN_MAX	/cad2/ece540s/basesuif-1.1.2/include/suif/machine_dependent.h	48;"	d
SUIF_H	/cad2/ece540s/basesuif-1.1.2/include/suif.h	11;"	d
SUIF_H	/cad2/ece540s/basesuif-1.1.2/include/suif/suif.h	11;"	d
SUIF_INTERNAL_H	/cad2/ece540s/basesuif-1.1.2/include/suif/suif_internal.h	11;"	d
SUIF_bad_format	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^    SUIF_bad_format = -1,$/;"	e	enum:SUIF_versions
SUIF_bad_sex	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^    SUIF_bad_sex = -4,$/;"	e	enum:SUIF_versions
SUIF_bad_version	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^    SUIF_bad_version = -3,$/;"	e	enum:SUIF_versions
SUIF_error	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^    SUIF_error = 0,$/;"	e	enum:SUIF_versions
SUIF_is_newsuif	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^    SUIF_is_newsuif = -2,$/;"	e	enum:SUIF_versions
SUIF_normal	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^    SUIF_normal = 1,$/;"	e	enum:SUIF_versions
SUIF_random	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^    SUIF_random = 2,$/;"	e	enum:SUIF_versions
SUIF_versions	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^enum SUIF_versions {$/;"	g
SUNDEFINED	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	72;"	d
SUNKNOWN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	4;"	d
SVR_absorb	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SVR_absorb: public SV_rule {$/;"	c
SVR_absorb	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SVR_absorb: public SV_rule {$/;"	c
SVR_create	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SVR_create: public SV_rule {$/;"	c
SVR_create	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SVR_create: public SV_rule {$/;"	c
SVR_kinds	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum SVR_kinds {$/;"	g
SVR_kinds	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum SVR_kinds {$/;"	g
SVR_meet	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SVR_meet: public SV_rule {$/;"	c
SVR_meet	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SVR_meet: public SV_rule {$/;"	c
SVR_star	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SVR_star: public SV_rule {$/;"	c
SVR_star	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SVR_star: public SV_rule {$/;"	c
SVR_unit	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SVR_unit: public SV_rule {$/;"	c
SVR_unit	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SVR_unit: public SV_rule {$/;"	c
SV_cell	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	SV_cell(SV_type *t,int arg=0):Sym_val(TAG(SV_cell)) { type=t; is_arg=arg; }$/;"	f	class:SV_cell
SV_cell	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SV_cell: public Sym_val {$/;"	c
SV_cell	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	SV_cell(SV_type *t,int arg=0):Sym_val(TAG(SV_cell)) { type=t; is_arg=arg; }$/;"	f	class:SV_cell
SV_cell	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SV_cell: public Sym_val {$/;"	c
SV_const	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SV_const:public Sym_val {$/;"	c
SV_const	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SV_const:public Sym_val {$/;"	c
SV_dflow	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SV_dflow: public Sym_val {$/;"	c
SV_dflow	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SV_dflow: public Sym_val {$/;"	c
SV_dflow_parsing	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SV_dflow_parsing: public SV_dflow {$/;"	c
SV_dflow_parsing	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SV_dflow_parsing: public SV_dflow {$/;"	c
SV_dflow_switches	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SV_dflow_switches: public SV_dflow_parsing {$/;"	c
SV_dflow_switches	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SV_dflow_switches: public SV_dflow_parsing {$/;"	c
SV_keyword	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	SV_keyword(int k): Sym_val(TAG(SV_keyword)), token(k) {}$/;"	f	struct:SV_keyword
SV_keyword	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct SV_keyword: public Sym_val{$/;"	s
SV_keyword	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	SV_keyword(int k): Sym_val(TAG(SV_keyword)), token(k) {}$/;"	f	struct:SV_keyword
SV_keyword	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct SV_keyword: public Sym_val{$/;"	s
SV_node	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_node(SV_tags k,Symbol *s,C_code *ldef,C_code *a,$/;"	f	class:SV_node
SV_node	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_node(Symbol *s,C_code *ldef,C_code *a,C_code *fl=0, C_code *pr=0)$/;"	f	class:SV_node
SV_node	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SV_node: public Sym_val {$/;"	c
SV_node	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_node(SV_tags k,Symbol *s,C_code *ldef,C_code *a,$/;"	f	class:SV_node
SV_node	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_node(Symbol *s,C_code *ldef,C_code *a,C_code *fl=0, C_code *pr=0)$/;"	f	class:SV_node
SV_node	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SV_node: public Sym_val {$/;"	c
SV_path	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_path(Symbol *s,C_code *ldef,C_code *a,C_code *fl=0, C_code *pr=0)$/;"	f	class:SV_path
SV_path	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SV_path: public SV_node {$/;"	c
SV_path	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_path(Symbol *s,C_code *ldef,C_code *a,C_code *fl=0, C_code *pr=0)$/;"	f	class:SV_path
SV_path	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SV_path: public SV_node {$/;"	c
SV_rule	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_rule(int k=TAG(SVR_none))$/;"	f	class:SV_rule
SV_rule	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SV_rule: public Sym_val {$/;"	c
SV_rule	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_rule(int k=TAG(SVR_none))$/;"	f	class:SV_rule
SV_rule	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SV_rule: public Sym_val {$/;"	c
SV_rule_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_rule_iter() {}$/;"	f	class:SV_rule_iter
SV_rule_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_rule_iter(SV_rule_list *rl) { reset(rl); }$/;"	f	class:SV_rule_iter
SV_rule_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SV_rule_iter: public consiter {$/;"	c
SV_rule_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_rule_iter() {}$/;"	f	class:SV_rule_iter
SV_rule_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_rule_iter(SV_rule_list *rl) { reset(rl); }$/;"	f	class:SV_rule_iter
SV_rule_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SV_rule_iter: public consiter {$/;"	c
SV_rule_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_rule_list() {}$/;"	f	class:SV_rule_list
SV_rule_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class SV_rule_list: public conslist {$/;"	c
SV_rule_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_rule_list() {}$/;"	f	class:SV_rule_list
SV_rule_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class SV_rule_list: public conslist {$/;"	c
SV_tags	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum SV_tags$/;"	g
SV_tags	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum SV_tags$/;"	g
SV_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_type(int k):Sym_val(TAG(SV_type)),kind(k) {};$/;"	f	struct:SV_type
SV_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct SV_type: public Sym_val {$/;"	s
SV_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_type(int k):Sym_val(TAG(SV_type)),kind(k) {};$/;"	f	struct:SV_type
SV_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct SV_type: public Sym_val {$/;"	s
SWRITE	/cad2/ece540s/basesuif-1.1.2/include/sf2c/tokdefs.h	73;"	d
SYMADDR_H	/cad2/ece540s/basesuif-1.1.2/include/suif/symaddr.h	17;"	d
SYMBOL	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	18;"	d
SYMBOL	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	17;"	d
SYMBOLS_H	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	17;"	d
SYMTAB_BLOCK	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    SYMTAB_BLOCK$/;"	e	enum:symtab_kinds
SYMTAB_FILE	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    SYMTAB_FILE,$/;"	e	enum:symtab_kinds
SYMTAB_GLOBAL	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    SYMTAB_GLOBAL,$/;"	e	enum:symtab_kinds
SYMTAB_H	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	15;"	d
SYMTAB_H	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	17;"	d
SYMTAB_OBJ	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    SYMTAB_OBJ,				\/* base_symtab *\/$/;"	e	enum:object_kinds
SYMTAB_PROC	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    SYMTAB_PROC,$/;"	e	enum:symtab_kinds
SYMTYPES_H	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	15;"	d
SYM_LABEL	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    SYM_LABEL,				\/* label *\/$/;"	e	enum:sym_kinds
SYM_OBJ	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    SYM_OBJ,				\/* sym_node *\/$/;"	e	enum:object_kinds
SYM_PROC	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    SYM_PROC,				\/* procedure *\/$/;"	e	enum:sym_kinds
SYM_USERDEF	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	43;"	d
SYM_VAR	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    SYM_VAR				\/* variable *\/$/;"	e	enum:sym_kinds
SZADDR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	4;"	d
SZDREAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	11;"	d
SZINT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	6;"	d
SZLENG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	9;"	d
SZLONG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	8;"	d
SZSHORT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	5;"	d
S_name	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *S_name;$/;"	m	class:Q_binder
S_name	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *S_name;$/;"	m	class:Q_binder
Scope	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Scope() {}$/;"	f	class:Scope
Scope	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class Scope: private glist_e {$/;"	c
Scope	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Scope():glist_e(0) {}$/;"	f	class:Scope
Scope	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class Scope: private glist_e {$/;"	c
Sedge	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  Sedge(Seqn *f,Seqn *t) { from=f; to=t; }$/;"	f	class:Sedge
Sedge	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^class Sedge: public glist_e$/;"	c
Sedge	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Sedge(Seqn *f,Seqn *t):glist_e(0) { from=f; to=t; }$/;"	f	struct:Sedge
Sedge	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^struct Sedge: public glist_e {$/;"	s
Sedge	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Sedge(Seqn *f,Seqn *t):glist_e(0) { from=f; to=t; }$/;"	f	struct:Sedge
Sedge	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^struct Sedge: public glist_e {$/;"	s
Sedge_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  Sedge_iter() {}$/;"	f	struct:Sedge_iter
Sedge_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  Sedge_iter(Sedge_list *el) { reset(el); }$/;"	f	struct:Sedge_iter
Sedge_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^struct Sedge_iter: public glist_iter$/;"	s
Sedge_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Sedge_iter() {}$/;"	f	struct:Sedge_iter
Sedge_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Sedge_iter(Sedge_list *el) { reset(el); }$/;"	f	struct:Sedge_iter
Sedge_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^struct Sedge_iter: public glist_iter {$/;"	s
Sedge_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Sedge_iter() {}$/;"	f	struct:Sedge_iter
Sedge_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Sedge_iter(Sedge_list *el) { reset(el); }$/;"	f	struct:Sedge_iter
Sedge_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^struct Sedge_iter: public glist_iter {$/;"	s
Sedge_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^class Sedge_list:public glist$/;"	c
Sedge_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^struct Sedge_list: public glist {$/;"	s
Sedge_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^struct Sedge_list: public glist {$/;"	s
Seqn	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Seqn() {}$/;"	f	class:Seqn
Seqn	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Seqn(Seqn *q)$/;"	f	class:Seqn
Seqn	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Seqn(Snode *s)$/;"	f	class:Seqn
Seqn	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Seqn(Svar *g,Strans *l,Snode *s)$/;"	f	class:Seqn
Seqn	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^class Seqn: public glist_e {$/;"	c
Seqn	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Seqn():glist_e(0) {}$/;"	f	class:Seqn
Seqn	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Seqn(Seqn *q):glist_e(0)$/;"	f	class:Seqn
Seqn	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Seqn(Snode *s):glist_e(0)$/;"	f	class:Seqn
Seqn	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Seqn(Svar *g,Strans *l,Snode *s):glist_e(0)$/;"	f	class:Seqn
Seqn	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^class Seqn: public glist_e {$/;"	c
Seqn	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Seqn():glist_e(0) {}$/;"	f	class:Seqn
Seqn	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Seqn(Seqn *q):glist_e(0)$/;"	f	class:Seqn
Seqn	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Seqn(Snode *s):glist_e(0)$/;"	f	class:Seqn
Seqn	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Seqn(Svar *g,Strans *l,Snode *s):glist_e(0)$/;"	f	class:Seqn
Seqn	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^class Seqn: public glist_e {$/;"	c
Seqn_consiter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn_consiter() {}$/;"	f	struct:Seqn_consiter
Seqn_consiter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn_consiter(Seqn_conslist *l) { reset(l); }$/;"	f	struct:Seqn_consiter
Seqn_consiter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^struct Seqn_consiter: public consiter {$/;"	s
Seqn_consiter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn_consiter() {}$/;"	f	struct:Seqn_consiter
Seqn_consiter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn_consiter(Seqn_conslist *l) { reset(l); }$/;"	f	struct:Seqn_consiter
Seqn_consiter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^struct Seqn_consiter: public consiter {$/;"	s
Seqn_consiter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn_consiter() {}$/;"	f	struct:Seqn_consiter
Seqn_consiter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn_consiter(Seqn_conslist *l) { reset(l); }$/;"	f	struct:Seqn_consiter
Seqn_consiter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^struct Seqn_consiter: public consiter {$/;"	s
Seqn_conslist	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn_conslist() {}$/;"	f	struct:Seqn_conslist
Seqn_conslist	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^struct Seqn_conslist: public conslist {$/;"	s
Seqn_conslist	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn_conslist() {}$/;"	f	struct:Seqn_conslist
Seqn_conslist	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^struct Seqn_conslist: public conslist {$/;"	s
Seqn_conslist	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn_conslist() {}$/;"	f	struct:Seqn_conslist
Seqn_conslist	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^struct Seqn_conslist: public conslist {$/;"	s
Seqn_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn_iter() {}$/;"	f	struct:Seqn_iter
Seqn_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn_iter(Seqn_list *l) { reset(l); }$/;"	f	struct:Seqn_iter
Seqn_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^struct Seqn_iter: public glist_iter {$/;"	s
Seqn_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn_iter() {}$/;"	f	struct:Seqn_iter
Seqn_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn_iter(Seqn_list *l) { reset(l); }$/;"	f	struct:Seqn_iter
Seqn_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^struct Seqn_iter: public glist_iter {$/;"	s
Seqn_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn_iter() {}$/;"	f	struct:Seqn_iter
Seqn_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn_iter(Seqn_list *l) { reset(l); }$/;"	f	struct:Seqn_iter
Seqn_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^struct Seqn_iter: public glist_iter {$/;"	s
Seqn_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn_list() {}$/;"	f	struct:Seqn_list
Seqn_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^struct Seqn_list: public glist {$/;"	s
Seqn_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn_list() {}$/;"	f	struct:Seqn_list
Seqn_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^struct Seqn_list: public glist {$/;"	s
Seqn_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn_list() {}$/;"	f	struct:Seqn_list
Seqn_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^struct Seqn_list: public glist {$/;"	s
Sharlit_flag	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^typedef unsigned char Sharlit_flag;$/;"	t
Sharlit_flag	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^typedef unsigned char Sharlit_flag;$/;"	t
Sharlit_flag	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^typedef unsigned char Sharlit_flag;$/;"	t
Sharlit_state	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^typedef signed char Sharlit_state;$/;"	t
Sharlit_state	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^typedef signed char Sharlit_state;$/;"	t
Sharlit_state	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^typedef signed char Sharlit_state;$/;"	t
Sk_bottom	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Sk_top = -3, Sk_bottom = -2, Sk_identity = -1$/;"	e	enum:Strans_kinds
Sk_bottom	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Sk_top = -3, Sk_bottom = -2, Sk_identity = -1$/;"	e	enum:Strans_kinds
Sk_bottom	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Sk_top = -3, Sk_bottom = -2, Sk_identity = -1$/;"	e	enum:Strans_kinds
Sk_identity	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Sk_top = -3, Sk_bottom = -2, Sk_identity = -1$/;"	e	enum:Strans_kinds
Sk_identity	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Sk_top = -3, Sk_bottom = -2, Sk_identity = -1$/;"	e	enum:Strans_kinds
Sk_identity	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Sk_top = -3, Sk_bottom = -2, Sk_identity = -1$/;"	e	enum:Strans_kinds
Sk_top	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Sk_top = -3, Sk_bottom = -2, Sk_identity = -1$/;"	e	enum:Strans_kinds
Sk_top	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Sk_top = -3, Sk_bottom = -2, Sk_identity = -1$/;"	e	enum:Strans_kinds
Sk_top	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Sk_top = -3, Sk_bottom = -2, Sk_identity = -1$/;"	e	enum:Strans_kinds
Snode	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^class Snode$/;"	c
Snode	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^class Snode$/;"	c
Snode	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^class Snode$/;"	c
Snode_e	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode_e(Snode *t):cons_e(t) {}$/;"	f	struct:Snode_e
Snode_e	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^struct Snode_e: public cons_e {$/;"	s
Snode_e	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode_e(Snode *t):cons_e(t) {}$/;"	f	struct:Snode_e
Snode_e	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^struct Snode_e: public cons_e {$/;"	s
Snode_e	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode_e(Snode *t):cons_e(t) {}$/;"	f	struct:Snode_e
Snode_e	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^struct Snode_e: public cons_e {$/;"	s
Snode_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode_iter() {}$/;"	f	struct:Snode_iter
Snode_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode_iter(Snode_list *l):consiter(l) {}$/;"	f	struct:Snode_iter
Snode_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^struct Snode_iter: public consiter {$/;"	s
Snode_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode_iter() {}$/;"	f	struct:Snode_iter
Snode_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode_iter(Snode_list *l):consiter(l) {}$/;"	f	struct:Snode_iter
Snode_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^struct Snode_iter: public consiter {$/;"	s
Snode_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode_iter() {}$/;"	f	struct:Snode_iter
Snode_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode_iter(Snode_list *l):consiter(l) {}$/;"	f	struct:Snode_iter
Snode_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^struct Snode_iter: public consiter {$/;"	s
Snode_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode_list() { count=0; }$/;"	f	class:Snode_list
Snode_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^class Snode_list:public conslist {$/;"	c
Snode_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode_list() { count=0; }$/;"	f	class:Snode_list
Snode_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^class Snode_list:public conslist {$/;"	c
Snode_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode_list() { count=0; }$/;"	f	class:Snode_list
Snode_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^class Snode_list:public conslist {$/;"	c
Sprob_switches	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^class Sprob_switches: public Sprob_tarjan_DEBUG$/;"	c
Sprob_switches	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^class Sprob_switches: public Sprob_tarjan_DEBUG$/;"	c
Sprob_switches	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^class Sprob_switches: public Sprob_tarjan_DEBUG$/;"	c
Sprob_tarjan	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^class Sprob_tarjan: public Sproblem {$/;"	c
Sprob_tarjan	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^class Sprob_tarjan: public Sproblem {$/;"	c
Sprob_tarjan	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^class Sprob_tarjan: public Sproblem {$/;"	c
Sprob_tarjan_DEBUG	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^class Sprob_tarjan_DEBUG: public Sprob_tarjan {$/;"	c
Sprob_tarjan_DEBUG	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^class Sprob_tarjan_DEBUG: public Sprob_tarjan {$/;"	c
Sprob_tarjan_DEBUG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^class Sprob_tarjan_DEBUG: public Sprob_tarjan {$/;"	c
Sproblem	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^class Sproblem {$/;"	c
Sproblem	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^class Sproblem {$/;"	c
Sproblem	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^class Sproblem {$/;"	c
Sproblem_DEBUG	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^class Sproblem_DEBUG: public Sproblem {$/;"	c
Sproblem_DEBUG	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^class Sproblem_DEBUG: public Sproblem {$/;"	c
Sproblem_DEBUG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^class Sproblem_DEBUG: public Sproblem {$/;"	c
Strans	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Strans() {}$/;"	f	class:Strans
Strans	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Strans(int k) { kind=k; }$/;"	f	class:Strans
Strans	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^class Strans$/;"	c
Strans	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Strans() {}$/;"	f	class:Strans
Strans	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Strans(int k) { kind=k; }$/;"	f	class:Strans
Strans	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^class Strans$/;"	c
Strans	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Strans() {}$/;"	f	class:Strans
Strans	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Strans(int k) { kind=k; }$/;"	f	class:Strans
Strans	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^class Strans$/;"	c
Strans_kinds	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^enum Strans_kinds$/;"	g
Strans_kinds	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^enum Strans_kinds$/;"	g
Strans_kinds	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^enum Strans_kinds$/;"	g
String	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	String(int ln=0,const char *fn=0){ line_no=ln; filename=fn; }$/;"	f	struct:String
String	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^struct String: public glist {$/;"	s
String	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	String(int ln=0,const char *fn=0){ line_no=ln; filename=fn; }$/;"	f	struct:String
String	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^struct String: public glist {$/;"	s
String_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	String_iter() { next_index=0; }$/;"	f	struct:String_iter
String_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	String_iter(String *s) { reset(s); }$/;"	f	struct:String_iter
String_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^struct String_iter: public glist_iter {$/;"	s
String_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	String_iter() { next_index=0; }$/;"	f	struct:String_iter
String_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	String_iter(String *s) { reset(s); }$/;"	f	struct:String_iter
String_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^struct String_iter: public glist_iter {$/;"	s
String_seg	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	String_seg() { length=0; }$/;"	f	struct:String_seg
String_seg	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^struct String_seg: public glist_e {$/;"	s
String_seg	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	String_seg():glist_e(0) { length=0; }$/;"	f	struct:String_seg
String_seg	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^struct String_seg: public glist_e {$/;"	s
Svar	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Svar() { solved=0; }$/;"	f	struct:Svar
Svar	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^struct Svar {$/;"	s
Svar	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Svar() { solved=0; }$/;"	f	struct:Svar
Svar	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^struct Svar {$/;"	s
Svar	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Svar() { solved=0; }$/;"	f	struct:Svar
Svar	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^struct Svar {$/;"	s
Svar_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Svar_iter() {}$/;"	f	struct:Svar_iter
Svar_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Svar_iter(Svar_list *l):consiter(l) {}$/;"	f	struct:Svar_iter
Svar_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^struct Svar_iter: public consiter {$/;"	s
Svar_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Svar_iter() {}$/;"	f	struct:Svar_iter
Svar_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Svar_iter(Svar_list *l):consiter(l) {}$/;"	f	struct:Svar_iter
Svar_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^struct Svar_iter: public consiter {$/;"	s
Svar_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Svar_iter() {}$/;"	f	struct:Svar_iter
Svar_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Svar_iter(Svar_list *l):consiter(l) {}$/;"	f	struct:Svar_iter
Svar_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^struct Svar_iter: public consiter {$/;"	s
Svar_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Svar_list() {}$/;"	f	struct:Svar_list
Svar_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^struct Svar_list: public conslist {$/;"	s
Svar_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Svar_list() {}$/;"	f	struct:Svar_list
Svar_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^struct Svar_list: public conslist {$/;"	s
Svar_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Svar_list() {}$/;"	f	struct:Svar_list
Svar_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^struct Svar_list: public conslist {$/;"	s
Sym_val	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Sym_val(SV_tags k): kind(k) {}$/;"	f	class:Sym_val
Sym_val	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class Sym_val$/;"	c
Sym_val	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Sym_val(SV_tags k): kind(k) {}$/;"	f	class:Sym_val
Sym_val	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class Sym_val$/;"	c
Symbol	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol(const char *n,int s):hash_e(s)$/;"	f	class:Symbol
Symbol	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class Symbol:public hash_e$/;"	c
Symbol	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol(const char *n,int s):hash_e(s)$/;"	f	class:Symbol
Symbol	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class Symbol:public hash_e$/;"	c
Symbol_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol_iter() {}$/;"	f	struct:Symbol_iter
Symbol_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol_iter(Symbol_list *sl) { reset(sl); }$/;"	f	struct:Symbol_iter
Symbol_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct Symbol_iter: public consiter {$/;"	s
Symbol_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol_iter() {}$/;"	f	struct:Symbol_iter
Symbol_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol_iter(Symbol_list *sl) { reset(sl); }$/;"	f	struct:Symbol_iter
Symbol_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct Symbol_iter: public consiter {$/;"	s
Symbol_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class Symbol_list: public Scope {$/;"	c
Symbol_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class Symbol_list: public Scope {$/;"	c
Symbol_table	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct Symbol_table: public glist {$/;"	s
Symbol_table	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct Symbol_table: public glist {$/;"	s
T	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	int_indef *T;$/;"	m	class:exact
T	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int_indef *T;$/;"	m	class:exact
T	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int_indef *T;$/;"	m	class:exact
TABLESIZE	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^const int TABLESIZE=50;$/;"	v
TABLESIZE	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^const int TABLESIZE=50;$/;"	v
TABLESIZE	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	25;"	d
TADDR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	49;"	d
TAG	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    TAG(SVR_absorb),TAG(SVR_star),TAG(SVR_meet),$/;"	e	enum:SVR_kinds
TAG	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    TAG(SVR_max),$/;"	e	enum:SVR_kinds
TAG	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    TAG(SVR_none),TAG(SVR_create),TAG(SVR_unit),$/;"	e	enum:SVR_kinds
TAG	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    TAG(SV_keyword),$/;"	e	enum:SV_tags
TAG	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    TAG(SV_node), TAG(SV_rule), TAG(SV_dflow),$/;"	e	enum:SV_tags
TAG	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    TAG(SV_path)$/;"	e	enum:SV_tags
TAG	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    TAG(SV_type), TAG(SV_const), TAG(SV_cell), TAG(SV_error),$/;"	e	enum:SV_tags
TAG	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/util.h	10;"	d
TAG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    TAG(SVR_absorb),TAG(SVR_star),TAG(SVR_meet),$/;"	e	enum:SVR_kinds
TAG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    TAG(SVR_max),$/;"	e	enum:SVR_kinds
TAG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    TAG(SVR_none),TAG(SVR_create),TAG(SVR_unit),$/;"	e	enum:SVR_kinds
TAG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    TAG(SV_keyword),$/;"	e	enum:SV_tags
TAG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    TAG(SV_node), TAG(SV_rule), TAG(SV_dflow),$/;"	e	enum:SV_tags
TAG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    TAG(SV_path)$/;"	e	enum:SV_tags
TAG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    TAG(SV_type), TAG(SV_const), TAG(SV_cell), TAG(SV_error),$/;"	e	enum:SV_tags
TAG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/util.h	12;"	d
TAG_ASSERT	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/util.h	14;"	d
TAG_ASSERT	/cad2/ece540s/basesuif-1.1.2/include/sharlit/util.h	16;"	d
TAG_CASE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/util.h	13;"	d
TAG_CASE	/cad2/ece540s/basesuif-1.1.2/include/sharlit/util.h	15;"	d
TAG_CHECK	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/util.h	11;"	d
TAG_CHECK	/cad2/ece540s/basesuif-1.1.2/include/sharlit/util.h	13;"	d
TAG_IS	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/util.h	12;"	d
TAG_IS	/cad2/ece540s/basesuif-1.1.2/include/sharlit/util.h	14;"	d
TCONST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	47;"	d
TEMP_REG	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    TEMP_REG,				\/* temporary register *\/$/;"	e	enum:reg_kind_enum
TEMP_REG	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    TEMP_REG,				\/* temporary register *\/$/;"	e	enum:reg_kind_enum
TERROR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	55;"	d
TEXPR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	48;"	d
TIMPLDO	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	54;"	d
TLIST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	53;"	d
TNAME	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	46;"	d
TPRIM	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	50;"	d
TREES_H	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	17;"	d
TREE_BLOCK	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    TREE_BLOCK$/;"	e	enum:tree_kinds
TREE_FOR	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    TREE_FOR,$/;"	e	enum:tree_kinds
TREE_IF	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    TREE_IF,$/;"	e	enum:tree_kinds
TREE_INSTR	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    TREE_INSTR,$/;"	e	enum:tree_kinds
TREE_LOOP	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    TREE_LOOP,$/;"	e	enum:tree_kinds
TREE_OBJ	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    TREE_OBJ,				\/* tree_node *\/$/;"	e	enum:object_kinds
TREE_STRING_INDEX_H	/cad2/ece540s/basesuif-1.1.2/include/suif/tree_string_index.h	17;"	d
TRUE	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	15;"	d
TRUE	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	15;"	d
TRUE	/cad2/ece540s/basesuif-1.1.2/include/general/useful.h	27;"	d
TRUE	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	40;"	d
TRUE	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	40;"	d
TRUE	/cad2/ece540s/basesuif-1.1.2/include/simple.h	23;"	d
TRUE	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	23;"	d
TRUE	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^const int TRUE=1;$/;"	v
TRUE	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	81;"	d
TRUE_	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	29;"	d
TRUE_	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	29;"	d
TS_PTR_INDEX_H	/cad2/ece540s/basesuif-1.1.2/include/suif/ts_ptr_index.h	17;"	d
TYADDR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	9;"	d
TYALIST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	24;"	d
TYBLANK	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	36;"	d
TYCHAR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	17;"	d
TYCILIST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	20;"	d
TYCLLIST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	23;"	d
TYCOMPLEX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	14;"	d
TYDCOMPLEX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	15;"	d
TYDREAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	13;"	d
TYERROR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	19;"	d
TYICILIST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	21;"	d
TYINLIST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	25;"	d
TYINT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	3;"	d
TYIREG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	29;"	d
TYLENG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/machdefs.h	1;"	d
TYLOGICAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	16;"	d
TYLONG	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	11;"	d
TYOLIST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	22;"	d
TYPES_H	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	17;"	d
TYPE_ARRAY	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_ARRAY,				  \/* array_type *\/$/;"	e	enum:type_ops
TYPE_CALL_BY_REF	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_CALL_BY_REF,			  \/* call-by-reference modifier *\/$/;"	e	enum:type_ops
TYPE_CONST	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_CONST,				  \/* const modifier *\/$/;"	e	enum:type_ops
TYPE_ENUM	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_ENUM,				  \/* enum_type *\/$/;"	e	enum:type_ops
TYPE_FLOAT	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_INT, TYPE_FLOAT, TYPE_VOID,	  \/* base_type *\/$/;"	e	enum:type_ops
TYPE_FUNC	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_FUNC,				  \/* func_type *\/$/;"	e	enum:type_ops
TYPE_GROUP	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_GROUP, TYPE_STRUCT, TYPE_UNION,  \/* struct_type *\/$/;"	e	enum:type_ops
TYPE_INT	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_INT, TYPE_FLOAT, TYPE_VOID,	  \/* base_type *\/$/;"	e	enum:type_ops
TYPE_NULL	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_NULL				  \/* null modifier *\/$/;"	e	enum:type_ops
TYPE_OBJ	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    TYPE_OBJ				\/* type_node *\/$/;"	e	enum:object_kinds
TYPE_PTR	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_PTR,				  \/* ptr_type *\/$/;"	e	enum:type_ops
TYPE_STRUCT	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_GROUP, TYPE_STRUCT, TYPE_UNION,  \/* struct_type *\/$/;"	e	enum:type_ops
TYPE_UNION	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_GROUP, TYPE_STRUCT, TYPE_UNION,  \/* struct_type *\/$/;"	e	enum:type_ops
TYPE_VOID	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_INT, TYPE_FLOAT, TYPE_VOID,	  \/* base_type *\/$/;"	e	enum:type_ops
TYPE_VOLATILE	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    TYPE_VOLATILE,			  \/* volatile modifier *\/$/;"	e	enum:type_ops
TYREAL	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	12;"	d
TYSHORT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	10;"	d
TYSUBR	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	18;"	d
TYUNKNOWN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	8;"	d
TYVOID	/cad2/ece540s/basesuif-1.1.2/include/sf2c/ftypes.h	26;"	d
TY_base	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	e	enum:type_kind
TY_base	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	e	enum:type_kind
TY_enum	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	e	enum:type_kind
TY_enum	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	e	enum:type_kind
TY_function	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	e	enum:type_kind
TY_function	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	e	enum:type_kind
TY_named	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	e	enum:type_kind
TY_named	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	e	enum:type_kind
TY_pointer	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	e	enum:type_kind
TY_pointer	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	e	enum:type_kind
TY_record	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	e	enum:type_kind
TY_record	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	e	enum:type_kind
T_constr	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	integer_matrix T_constr;  \/\/ constraints in terms of t variables$/;"	m	class:exact
T_constr	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	integer_matrix T_constr;  \/\/ constraints in terms of t variables$/;"	m	class:exact
T_constr	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	integer_matrix T_constr;  \/\/ constraints in terms of t variables$/;"	m	class:exact
T_constr2	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	integer_matrix T_constr2; \/\/ simplified constraints after cyclic$/;"	m	class:exact
T_constr2	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	integer_matrix T_constr2; \/\/ simplified constraints after cyclic$/;"	m	class:exact
T_constr2	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	integer_matrix T_constr2; \/\/ simplified constraints after cyclic$/;"	m	class:exact
Type_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Type_iter() {}$/;"	f	class:Type_iter
Type_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Type_iter(Type_list *tl) { reset(tl); }$/;"	f	class:Type_iter
Type_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class Type_iter:public consiter {$/;"	c
Type_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Type_iter() {}$/;"	f	class:Type_iter
Type_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Type_iter(Type_list *tl) { reset(tl); }$/;"	f	class:Type_iter
Type_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class Type_iter:public consiter {$/;"	c
Type_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	 Type_list() {}$/;"	f	class:Type_list
Type_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^     class Type_list: public conslist {$/;"	c
Type_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	 Type_list() {}$/;"	f	class:Type_list
Type_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^     class Type_list: public conslist {$/;"	c
U	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	int *U, *D;$/;"	m	class:UD_hash_entry
U	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	integer_matrix *U;$/;"	m	class:full_hash_entry
U	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	integer_matrix *U;$/;"	m	class:exact
U	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int *U, *D;$/;"	m	class:UD_hash_entry
U	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	integer_matrix *U;$/;"	m	class:full_hash_entry
U	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	integer_matrix *U;$/;"	m	class:exact
U	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int *U, *D;$/;"	m	class:UD_hash_entry
U	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	integer_matrix *U;$/;"	m	class:full_hash_entry
U	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	integer_matrix *U;$/;"	m	class:exact
UD_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	UD_hash_entry() { full = FALSE; next=0;}$/;"	f	class:UD_hash_entry
UD_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^class UD_hash_entry {$/;"	c
UD_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	UD_hash_entry() { full = FALSE; next=0;}$/;"	f	class:UD_hash_entry
UD_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^class UD_hash_entry {$/;"	c
UD_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	UD_hash_entry() { full = FALSE; next=0;}$/;"	f	class:UD_hash_entry
UD_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^class UD_hash_entry {$/;"	c
UD_hash_table	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	UD_hash_table(int n) {table = new UD_hash_entry[n]; size=n;$/;"	f	class:UD_hash_table
UD_hash_table	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^class UD_hash_table {$/;"	c
UD_hash_table	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	UD_hash_table(int n) {table = new UD_hash_entry[n]; size=n;$/;"	f	class:UD_hash_table
UD_hash_table	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^class UD_hash_table {$/;"	c
UD_hash_table	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	UD_hash_table(int n) {table = new UD_hash_entry[n]; size=n;$/;"	f	class:UD_hash_table
UD_hash_table	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^class UD_hash_table {$/;"	c
UNAM_CHARP	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	250;"	d
UNAM_CONST	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	249;"	d
UNAM_EXTERN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	247;"	d
UNAM_IDENT	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	246;"	d
UNAM_NAME	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	245;"	d
UNAM_UNKNOWN	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	244;"	d
UNARY_OP	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	17;"	d
UNKNOWN	/cad2/ece540s/basesuif-1.1.2/include/general/useful.h	28;"	d
UNKNOWN	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^const int UNKNOWN=-1;$/;"	v
UNSIGNED_TYPE	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    UNSIGNED_TYPE,			\/* unsigned integers *\/$/;"	e	enum:simple_type_base_enum
UNSIGNED_TYPE	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    UNSIGNED_TYPE,			\/* unsigned integers *\/$/;"	e	enum:simple_type_base_enum
USEFUL_H	/cad2/ece540s/basesuif-1.1.2/include/general/useful.h	15;"	d
USEFUL_H	/cad2/ece540s/basesuif-1.1.2/include/useful.h	15;"	d
USEFUL_H	/cad2/ece540s/basesuif-1.1.2/include/useful/useful.h	15;"	d
USEFUL_INTERNAL_H	/cad2/ece540s/basesuif-1.1.2/include/useful/useful_internal.h	15;"	d
USER_LABEL_MAX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/names.h	4;"	d
V	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Svar *V;$/;"	m	class:Seqn
V	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Svar *V;$/;"	m	class:Seqn
V	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Svar *V;$/;"	m	class:Seqn
VALUE_BASE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	23;"	d
VALUE_BASE	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	23;"	d
VARDEF_H	/cad2/ece540s/basesuif-1.1.2/include/suif/vardef.h	17;"	d
VARIABLES	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	45;"	d
VARIABLES	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	45;"	d
VARSYM_ADDRTAKEN	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	45;"	d
VARSYM_ISPARAM	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	44;"	d
VARSYM_ISREG	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	46;"	d
VAR_SYM	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    VAR_SYM,				\/* variable *\/$/;"	e	enum:sym_kind_enum
VAR_SYM	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    VAR_SYM,				\/* variable *\/$/;"	e	enum:sym_kind_enum
VAX	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	8;"	d
VECTOR_SPACE_H	/cad2/ece540s/basesuif-1.1.2/include/suifmath/vector_space.h	17;"	d
VOID	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	125;"	d
VOID	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	125;"	d
VOID_TYPE	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    VOID_TYPE,				\/* void types *\/$/;"	e	enum:simple_type_base_enum
VOID_TYPE	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    VOID_TYPE,				\/* void types *\/$/;"	e	enum:simple_type_base_enum
VV	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record *VV;\/* flow values *\/$/;"	m	class:SV_dflow
VV	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record *VV;\/* flow values *\/$/;"	m	class:SV_dflow
VV_pointer_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_pointer *VV_pointer_type;$/;"	m	class:SV_dflow
VV_pointer_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_pointer *VV_pointer_type;$/;"	m	class:SV_dflow
V_name	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *V_name;$/;"	m	class:Q_binder
V_name	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *V_name;$/;"	m	class:Q_binder
Vardesc	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^struct Vardesc {	\/* for Namelist *\/$/;"	s
Vardesc	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef struct Vardesc Vardesc;$/;"	t	typeref:struct:Vardesc
Vardesc	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^struct Vardesc {	\/* for Namelist *\/$/;"	s
Vardesc	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef struct Vardesc Vardesc;$/;"	t	typeref:struct:Vardesc
WALK_H	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	17;"	d
WSEQ_H	/cad2/ece540s/basesuif-1.1.2/include/general/wseq.h	15;"	d
X	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	coeff *X;$/;"	m	class:X_hash_entry
X	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	coeff *X;$/;"	m	class:X_hash_entry
X	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	coeff *X;$/;"	m	class:X_hash_entry
XARRAY_H	/cad2/ece540s/basesuif-1.1.2/include/general/xarray.h	15;"	d
XARRAY_H	/cad2/ece540s/basesuif-1.1.2/include/suif/xarray.h	17;"	d
X_ARRAY0	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	13;"	d
X_ARRAY0	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	13;"	d
X_ARRAY0	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	13;"	d
X_array0	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^class X_array0 {$/;"	c
X_array0	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^class X_array0$/;"	c
X_array0	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^class X_array0$/;"	c
X_array1	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^class X_array1 {$/;"	c
X_array1	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^class X_array1 {$/;"	c
X_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	X_hash_entry() { full = FALSE; next=0;}$/;"	f	class:X_hash_entry
X_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^class X_hash_entry {$/;"	c
X_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	X_hash_entry() { full = FALSE; next=0;}$/;"	f	class:X_hash_entry
X_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^class X_hash_entry {$/;"	c
X_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	X_hash_entry() { full = FALSE; next=0;}$/;"	f	class:X_hash_entry
X_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^class X_hash_entry {$/;"	c
X_hash_table	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	X_hash_table(int n) {table = new X_hash_entry[n]; size=n;$/;"	f	class:X_hash_table
X_hash_table	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^class X_hash_table {$/;"	c
X_hash_table	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	X_hash_table(int n) {table = new X_hash_entry[n]; size=n;$/;"	f	class:X_hash_table
X_hash_table	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^class X_hash_table {$/;"	c
X_hash_table	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	X_hash_table(int n) {table = new X_hash_entry[n]; size=n;$/;"	f	class:X_hash_table
X_hash_table	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^class X_hash_table {$/;"	c
YES	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	30;"	d
YYSTYPE	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	/^} YYSTYPE;$/;"	t	typeref:union:__anon5
YYSTYPE	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	/^} YYSTYPE;$/;"	t	typeref:union:__anon24
_CFG	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	13;"	d
_CFG	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	13;"	d
_CFG	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	13;"	d
_MODULE_	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	77;"	d
_assoc_table	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	/^static char _assoc_table[] = { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0 };$/;"	v
_copiable	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^  Sharlit_flag *_copiable;$/;"	m	class:Sprob_switches
_copiable	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^  Sharlit_flag *_copiable;$/;"	m	class:Sprob_switches
_copiable	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^  Sharlit_flag *_copiable;$/;"	m	class:Sprob_switches
_error_set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    static void _error_set(error_type t, char * f, int l) { error_level = t;$/;"	f	class:builder_base
_i	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef struct { doublereal _r, _i; } doublecomplex;$/;"	m	struct:__anon41
_i	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef struct { real _r, _i; } complex;$/;"	m	struct:__anon40
_i	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef struct { doublereal _r, _i; } doublecomplex;$/;"	m	struct:__anon17
_i	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef struct { real _r, _i; } complex;$/;"	m	struct:__anon16
_init	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    void _init(Snode *s)$/;"	f	class:Seqn
_init	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    void _init(Snode *s)$/;"	f	class:Seqn
_init	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    void _init(Snode *s)$/;"	f	class:Seqn
_kind	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFGnode_kinds _kind;$/;"	m	class:CFinfo
_kind	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  CFGnode_kinds _kind;$/;"	m	class:CFinfo
_kind	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  CFGnode_kinds _kind;$/;"	m	class:CFinfo
_meet_able	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^  Sharlit_state *_meet_able;$/;"	m	class:Sprob_switches
_meet_able	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^  Sharlit_state *_meet_able;$/;"	m	class:Sprob_switches
_meet_able	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^  Sharlit_state *_meet_able;$/;"	m	class:Sprob_switches
_r	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef struct { doublereal _r, _i; } doublecomplex;$/;"	m	struct:__anon41
_r	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef struct { real _r, _i; } complex;$/;"	m	struct:__anon40
_r	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef struct { doublereal _r, _i; } doublecomplex;$/;"	m	struct:__anon17
_r	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef struct { real _r, _i; } complex;$/;"	m	struct:__anon16
_times_able	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^  Sharlit_state *_times_able;$/;"	m	class:Sprob_switches
_times_able	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^  Sharlit_state *_times_able;$/;"	m	class:Sprob_switches
_times_able	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^  Sharlit_state *_times_able;$/;"	m	class:Sprob_switches
a	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^    ast_node *a;$/;"	m	class:astlist_e
a	/cad2/ece540s/basesuif-1.1.2/include/hawg/annotelist.h	/^    annote *a;$/;"	m	class:annote_list_e
a	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon_seq.h	/^    annote *a;$/;"	m	class:icon_rseq
a	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon_seq.h	/^    annote *a;$/;"	m	class:icon_wseq
aL	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^    Strans *aL;$/;"	m	class:n_Seqn
aL	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^    Strans *aL;$/;"	m	class:n_Seqn
aL	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^    Strans *aL;$/;"	m	class:n_Seqn
abs	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & abs(block &a)        { return a.douniop(uop_abs); }$/;"	f	class:block
abs	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    fract abs() const			{ return fract((n < 0) ? -n : n, d); }$/;"	f	class:fract
abs	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	155;"	d
abs	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	155;"	d
abs	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    fract abs() const			{ return fract((n < 0) ? -n : n, d); }$/;"	f	class:fract
absorb_table	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    char *unit_table,*create_table,*absorb_table;$/;"	m	class:SV_path
absorb_table	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    char *unit_table,*create_table,*absorb_table;$/;"	m	class:SV_path
access_ineq_e	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_e() { level=-1; next = 0; }$/;"	f	class:access_ineq_e
access_ineq_e	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_e(lin_ineq & inq, int lev) { LEQ.init(&inq); level=lev; next = 0; }$/;"	f	class:access_ineq_e
access_ineq_e	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^class access_ineq_e {$/;"	c
access_ineq_e	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_e() { level=-1; next = 0; }$/;"	f	class:access_ineq_e
access_ineq_e	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_e(lin_ineq & inq, int lev) { LEQ.init(&inq); level=lev; next = 0; }$/;"	f	class:access_ineq_e
access_ineq_e	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^class access_ineq_e {$/;"	c
access_ineq_e	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_e() { level=-1; next = 0; }$/;"	f	class:access_ineq_e
access_ineq_e	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_e(lin_ineq & inq, int lev) { LEQ.init(&inq); level=lev; next = 0; }$/;"	f	class:access_ineq_e
access_ineq_e	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^class access_ineq_e {$/;"	c
access_ineq_list	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_list() { head = 0; }$/;"	f	class:access_ineq_list
access_ineq_list	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^class access_ineq_list {$/;"	c
access_ineq_list	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_list() { head = 0; }$/;"	f	class:access_ineq_list
access_ineq_list	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^class access_ineq_list {$/;"	c
access_ineq_list	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_list() { head = 0; }$/;"	f	class:access_ineq_list
access_ineq_list	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^class access_ineq_list {$/;"	c
access_ineq_list_iter	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_list_iter(access_ineq_list & al) { init(al, 0, 100); }$/;"	f	class:access_ineq_list_iter
access_ineq_list_iter	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_list_iter(access_ineq_list & al, int i) { init(al, i, i); } $/;"	f	class:access_ineq_list_iter
access_ineq_list_iter	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_list_iter(access_ineq_list & al, int i, int j) { init(al, i, j); }$/;"	f	class:access_ineq_list_iter
access_ineq_list_iter	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^class access_ineq_list_iter {$/;"	c
access_ineq_list_iter	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_list_iter(access_ineq_list & al) { init(al, 0, 100); }$/;"	f	class:access_ineq_list_iter
access_ineq_list_iter	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_list_iter(access_ineq_list & al, int i) { init(al, i, i); } $/;"	f	class:access_ineq_list_iter
access_ineq_list_iter	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_list_iter(access_ineq_list & al, int i, int j) { init(al, i, j); }$/;"	f	class:access_ineq_list_iter
access_ineq_list_iter	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^class access_ineq_list_iter {$/;"	c
access_ineq_list_iter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_list_iter(access_ineq_list & al) { init(al, 0, 100); }$/;"	f	class:access_ineq_list_iter
access_ineq_list_iter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_list_iter(access_ineq_list & al, int i) { init(al, i, i); } $/;"	f	class:access_ineq_list_iter
access_ineq_list_iter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_list_iter(access_ineq_list & al, int i, int j) { init(al, i, j); }$/;"	f	class:access_ineq_list_iter
access_ineq_list_iter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^class access_ineq_list_iter {$/;"	c
access_list	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_list() {}$/;"	f	struct:access_list
access_list	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^struct access_list: public alist {$/;"	s
access_list	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_list() {}$/;"	f	struct:access_list
access_list	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^struct access_list: public alist {$/;"	s
access_list	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_list() {}$/;"	f	struct:access_list
access_list	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^struct access_list: public alist {$/;"	s
access_list_e	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_list_e(void *v,int i): alist_e(v,(void *)i) {}$/;"	f	struct:access_list_e
access_list_e	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^struct access_list_e: public alist_e {$/;"	s
access_list_e	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_list_e(void *v,int i): alist_e(v,(void *)i) {}$/;"	f	struct:access_list_e
access_list_e	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^struct access_list_e: public alist_e {$/;"	s
access_list_e	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_list_e(void *v,int i): alist_e(v,(void *)i) {}$/;"	f	struct:access_list_e
access_list_e	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^struct access_list_e: public alist_e {$/;"	s
access_list_iter	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_list_iter(FCONST access_list *c): alist_iter(c) {}$/;"	f	struct:access_list_iter
access_list_iter	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^struct access_list_iter: public alist_iter {$/;"	s
access_list_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_list_iter(FCONST access_list *c): alist_iter(c) {}$/;"	f	struct:access_list_iter
access_list_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^struct access_list_iter: public alist_iter {$/;"	s
access_list_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_list_iter(FCONST access_list *c): alist_iter(c) {}$/;"	f	struct:access_list_iter
access_list_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^struct access_list_iter: public alist_iter {$/;"	s
access_vector	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_vector(): glist_e(),too_messy(0),con(0),mod_this(0),min(0),max(0) {}$/;"	f	class:access_vector
access_vector	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^class access_vector: public glist_e {$/;"	c
access_vector	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_vector(): glist_e(0),too_messy(0),con(0),mod_this(0),min(0),max(0) {}$/;"	f	class:access_vector
access_vector	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^class access_vector: public glist_e {$/;"	c
access_vector	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_vector(): glist_e(0),too_messy(0),con(0),mod_this(0),min(0),max(0) {}$/;"	f	class:access_vector
access_vector	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^class access_vector: public glist_e {$/;"	c
add	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_e * add(lin_ineq & inq, int lev) { access_ineq_e * elem = new access_ineq_e(inq, lev); $/;"	f	class:priv_access
add	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    void add(tree_node *a, int i) {elts.enter(a,i);}$/;"	f	class:access_vector
add	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    void add(var_sym * s, int indirect, int i)  {    $/;"	f	class:access_vector
add	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    void add(ast_node *a,int i) {elts.enter(a,i);}$/;"	f	class:access_vector
add	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    void add(if_reg r,int indirect,int i)$/;"	f	class:access_vector
add	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    void add(path_base *p,int i) {conpaths.enter(p,i);}$/;"	f	class:access_vector
add	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    void add(ast_node *a,int i) {elts.enter(a,i);}$/;"	f	class:access_vector
add	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    void add(if_reg r,int indirect,int i)$/;"	f	class:access_vector
add	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    void add(path_base *p,int i) {conpaths.enter(p,i);}$/;"	f	class:access_vector
add	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_e * add(lin_ineq & inq, int lev) { access_ineq_e * elem = new access_ineq_e(inq, lev); $/;"	f	class:priv_access
add	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_case *add(sc_case *c) { cases.append(c); return c;}$/;"	f	struct:sc_switch
add	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_case *add(sc_case *c) { cases.append(c); return c;}$/;"	f	struct:sc_switch
add	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_e * add(lin_ineq & inq, int lev) { access_ineq_e * elem = new access_ineq_e(inq, lev); $/;"	f	class:priv_access
add_data	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^    void add_data(in_data *dp)		{ data_areas.append(dp); }$/;"	f	class:proc
add_formal	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	void add_formal(char *s)$/;"	f	class:CN_function
add_formal	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    void add_formal(SV_type *t) { formals.append(t); }$/;"	f	class:ty_function
add_formal	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	void add_formal(char *s)$/;"	f	class:CN_function
add_formal	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    void add_formal(SV_type *t) { formals.append(t); }$/;"	f	class:ty_function
addr	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *addr;$/;"	m	struct:Vardesc
addr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *addr;$/;"	m	struct:Vardesc
addr	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand addr;$/;"	m	class:in_cal
addr_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand addr_op()			{ return addr; }$/;"	f	class:in_cal
addrblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Addrblock addrblock;$/;"	m	union:Expression	typeref:struct:Expression::Addrblock
address	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef char *address;$/;"	t
address	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef char *address;$/;"	t
addressable_size	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    int addressable_size;		\/* usually 8 (byte-addressable) *\/$/;"	m	struct:machine_params
aerr	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^{	flag aerr;$/;"	m	struct:__anon46
aerr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^{	flag aerr;$/;"	m	struct:__anon22
ag	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^    ast_group *ag;$/;"	m	class:ast_proc_iter
ai	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    array_info *ai;$/;"	m	struct:dep_instr_annote
ai	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    array_info *ai;$/;"	m	struct:dep_node_si
ai	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    array_info *ai;$/;"	m	struct:dep_node_si
ail	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_list * ail;$/;"	m	class:access_ineq_list_iter
ail	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_list * ail;$/;"	m	class:access_ineq_list_iter
ail	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_list * ail;$/;"	m	class:access_ineq_list_iter
alias_set	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    alias_set()				{ phead = NULL; ihead = NULL; }$/;"	f	class:alias_set
alias_set	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^class alias_set {$/;"	c
align	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    int size, align;$/;"	m	class:in_data
align	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    int align[num_C_types];$/;"	m	struct:machine_params
align	/cad2/ece540s/basesuif-1.1.2/include/suif/vardef.h	/^    int align;$/;"	m	class:var_def
alignment	/cad2/ece540s/basesuif-1.1.2/include/suif/vardef.h	/^    int alignment()			{ return align; }$/;"	f	class:var_def
alist	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist()				{ }$/;"	f	class:alist
alist	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^class alist : public glist {$/;"	c
alist	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^} alist;$/;"	t	typeref:struct:__anon46
alist	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^} alist;$/;"	t	typeref:struct:__anon22
alist	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^class alist : public glist {$/;"	c
alist_e	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e(void *x, void *y) : glist_e(NULL)	{ key = x; info = y; }$/;"	f	class:alist_e
alist_e	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^class alist_e : public glist_e {$/;"	c
alist_e	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e(void *k, void *i) 		{ key = k; info = i; }$/;"	f	class:alist_e
alist_e	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^class alist_e : public glist_e {$/;"	c
alist_iter	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_iter()			{ }$/;"	f	class:alist_iter
alist_iter	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_iter(alist *l)		{ reset(l); }$/;"	f	class:alist_iter
alist_iter	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_iter(amtflist *l)		{ reset(l); }$/;"	f	class:alist_iter
alist_iter	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^class alist_iter : public glist_iter {$/;"	c
alist_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_iter()			{ }$/;"	f	class:alist_iter
alist_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_iter(const alist *l)		{ reset(l); }$/;"	f	class:alist_iter
alist_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_iter(const amtflist *l)	{ reset(l); }$/;"	f	class:alist_iter
alist_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^class alist_iter : public glist_iter {$/;"	c
allextp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	chainp allextp;		\/* List of lists of identifiers; if the$/;"	m	struct:Extsym
alloc_node_reg	/cad2/ece540s/basesuif-1.1.2/include/flow/astproc.h	/^    if_reg alloc_node_reg()		{ return block()->new_nreg(); }$/;"	f	class:ast_proc
already_analyzed	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual int already_analyzed()     { return base_of_arrays!=NULL; }$/;"	f	class:CFG_0
amtflist	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^class amtflist : public mtflist {$/;"	c
amtflist	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^class amtflist : public mtflist {$/;"	c
analyze	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual void analyze()$/;"	f	class:CFG_1_reversed
ancestor	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Snode *ancestor;$/;"	m	class:Seqn
ancestor	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^    Snode *ancestor;$/;"	m	class:n_Seqn
ancestor	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Snode *ancestor;$/;"	m	class:Seqn
ancestor	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Snode *ancestor;$/;"	m	class:Seqn
ancestor	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^    Snode *ancestor;$/;"	m	class:n_Seqn
ancestor	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^    Snode *ancestor;$/;"	m	class:n_Seqn
anl	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    annote_list *anl;$/;"	m	class:suif_object
ann_free_f	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^typedef void (*ann_free_f)(void *data);$/;"	t
ann_print_f	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^typedef void (*ann_print_f)(FILE *out, char *name, void *data);$/;"	t
annote	/cad2/ece540s/basesuif-1.1.2/include/hawg/annote.h	/^class annote {$/;"	c
annote	/cad2/ece540s/basesuif-1.1.2/include/suif/annote.h	/^class annote {$/;"	c
annote_def	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^class annote_def {$/;"	c
annote_eater	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^typedef void (*annote_eater)(proc *,annote *,boolean);$/;"	t
annote_list	/cad2/ece540s/basesuif-1.1.2/include/hawg/annotelist.h	/^    annote_list()			{ }$/;"	f	class:annote_list
annote_list	/cad2/ece540s/basesuif-1.1.2/include/hawg/annotelist.h	/^class annote_list : public glist {$/;"	c
annote_list	/cad2/ece540s/basesuif-1.1.2/include/suif/annote.h	/^class annote_list : public annote_list_base {$/;"	c
annote_list_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/annotelist.h	/^    annote_list_e(annote *an) : glist_e(NULL)	{ a = an; }$/;"	f	class:annote_list_e
annote_list_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/annotelist.h	/^class annote_list_e : public glist_e {$/;"	c
annote_list_iter	/cad2/ece540s/basesuif-1.1.2/include/hawg/annotelist.h	/^    annote_list_iter(annote_list *l)	{ reset(l); }$/;"	f	class:annote_list_iter
annote_list_iter	/cad2/ece540s/basesuif-1.1.2/include/hawg/annotelist.h	/^class annote_list_iter : public glist_iter {$/;"	c
annote_name	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    char *annote_name;$/;"	m	class:temp_marker
answer	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^enum answer{independent, dependent, unsure};$/;"	g
answer	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^enum answer{independent, dependent, unsure};$/;"	g
answer	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^enum answer{independent, dependent, unsure};$/;"	g
any_oper	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    any_oper() { clear(); }$/;"	f	struct:any_oper
any_oper	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    any_oper(const any_oper & a)        { init(a); }$/;"	f	struct:any_oper
any_oper	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    any_oper(const any_oper * a)        { init(*a); }$/;"	f	struct:any_oper
any_oper	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    any_oper(op_type op, int x)         { clear(); set(op, x); }$/;"	f	struct:any_oper
any_oper	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^struct any_oper:public builder_base {$/;"	s
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(char init_c) : c(init_c)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(double init_d) : d(init_d)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(float init_f) : f(init_f)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(int init_si) : si(init_si)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(long double init_ld) : ld(init_ld)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(long init_sl) : sl(init_sl)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(short init_ss) : ss(init_ss)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(signed char init_sc) : sc(init_sc)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(unsigned char init_uc) : uc(init_uc)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(unsigned init_ui) : ui(init_ui)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(unsigned long init_ul) : ul(init_ul)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(unsigned short init_us) : us(init_us)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(void *init_ptr) : ptr(init_ptr)  { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type(void) { }$/;"	f	union:any_type
any_type	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^union any_type$/;"	u
aop	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    assign_op aop;$/;"	m	struct:any_oper
aop_add	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 aop_add,                       \/\/ a = a + b;$/;"	e	enum:assign_op
aop_and	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 aop_and,                       \/\/ a = a & b;$/;"	e	enum:assign_op
aop_div	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 aop_div,                       \/\/ a = a \/ b;$/;"	e	enum:assign_op
aop_eq	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^enum assign_op { aop_eq,                        \/\/ a = b;$/;"	e	enum:assign_op
aop_lshift	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 aop_lshift,                    \/\/ a = a << b;$/;"	e	enum:assign_op
aop_mod	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 aop_mod,                       \/\/ a = a % b;$/;"	e	enum:assign_op
aop_mul	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 aop_mul,                       \/\/ a = a * b;$/;"	e	enum:assign_op
aop_or	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 aop_or                         \/\/ a = a | b;$/;"	e	enum:assign_op
aop_rshift	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 aop_rshift,                    \/\/ a = a >> b;$/;"	e	enum:assign_op
aop_sub	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 aop_sub,                       \/\/ a = a - b;$/;"	e	enum:assign_op
aop_xor	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 aop_xor,                       \/\/ a = a ^ b;$/;"	e	enum:assign_op
append	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    void append(access_ineq_list & in) { this->strip(in, 0, 100); }$/;"	f	class:access_ineq_list
append	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    void append(access_vector *a) {glist::append((glist_e *)a);}$/;"	f	class:array_info
append	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    void append(distance d)$/;"	f	struct:distance_vector
append	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	void append(dir_list *dl) {$/;"	f	struct:dir_list
append	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    void append(access_vector *a) {glist::append((glist_e *)a);}$/;"	f	class:array_info
append	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	void append(distance d)$/;"	f	struct:distance_vector
append	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	void append(dir_list *dl) {$/;"	f	struct:dir_list
append	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    void append(access_vector *a) {glist::append((glist_e *)a);}$/;"	f	class:array_info
append	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	void append(distance d)$/;"	f	struct:distance_vector
append	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	void append(dir_list *dl) {$/;"	f	struct:dir_list
append	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^    void append(ast_node *a)		{ glist::append(new astlist_e(a)); }$/;"	f	class:astlist
append	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    void append(ast_node *e)		{ dlist_e::push((dlist_e *)e);$/;"	f	class:ast_node
append	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    void append(ast_node *e)		{ clist_e::append((clist_e *)e);$/;"	f	class:ast_node_list
append	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    void append(void *d)		{ glist::append(new cons_e(d)); }$/;"	f	class:conslist
append	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    clist_e * append(clist_e *e)	{ return (clist_e *)insert(e); }$/;"	f	class:clist_e
append	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^    void append(int i)			{ glist::append(new intlist_e(i)); }$/;"	f	class:intlist
append	/cad2/ece540s/basesuif-1.1.2/include/hawg/annotelist.h	/^    void append(annote *a)		{ glist::append(new annote_list_e(a)); }$/;"	f	class:annote_list
append	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	/^    void append(instruction *i)		{ glist::append(new ilist_e(i)); }$/;"	f	class:ilist
append	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    void append(access_ineq_list & in) { this->strip(in, 0, 100); }$/;"	f	class:access_ineq_list
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    void append(void *d)		{ glist::append(new cons_e(d)); }$/;"	f	class:conslist
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode *append(Snode *s)$/;"	f	class:Snode_list
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Svar *append(Svar *v) { conslist::append(v); return v; }$/;"	f	struct:Svar_list
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void append(Seqn *e) { conslist::append(e); }$/;"	f	struct:Seqn_conslist
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void append(Seqn *e) { glist::append(e); }$/;"	f	struct:Seqn_list
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  void append(Sedge *e) $/;"	f	class:Sedge_list
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  void append(Seqn *f,Seqn *t)$/;"	f	class:Sedge_list
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	 void append(SV_type *t) { conslist::append(t); }$/;"	f	class:Type_list
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	void append(sc_case *c) { glist::append(c); }$/;"	f	struct:sc_cases
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	void append(sc_code *s) { glist::append(s); }$/;"	f	struct:sc_list2
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	void append(sc_code *s) { list.append(s); }$/;"	f	struct:sc_list
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	void append(sc_expr *s) { glist::append(s); }$/;"	f	struct:sc_elist
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    void append(SV_rule *r) { conslist::append(r); }$/;"	f	class:SV_rule_list
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    void append(Symbol *sp) { l.append(sp); }$/;"	f	class:Symbol_list
append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    void append(ty_record *t) { conslist::append(t); }$/;"	f	class:ty_record_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode *append(Snode *s)$/;"	f	class:Snode_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Svar *append(Svar *v) { conslist::append(v); return v; }$/;"	f	struct:Svar_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void append(Sedge *e) { glist::append(e); }$/;"	f	struct:Sedge_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void append(Seqn *e) { conslist::append(e); }$/;"	f	struct:Seqn_conslist
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void append(Seqn *e) { glist::append(e); }$/;"	f	struct:Seqn_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void append(Seqn *f,Seqn *t) { glist::append(new Sedge(f,t)); }$/;"	f	struct:Sedge_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode *append(Snode *s)$/;"	f	class:Snode_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Svar *append(Svar *v) { conslist::append(v); return v; }$/;"	f	struct:Svar_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void append(Sedge *e) { glist::append(e); }$/;"	f	struct:Sedge_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void append(Seqn *e) { conslist::append(e); }$/;"	f	struct:Seqn_conslist
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void append(Seqn *e) { glist::append(e); }$/;"	f	struct:Seqn_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void append(Seqn *f,Seqn *t) { glist::append(new Sedge(f,t)); }$/;"	f	struct:Sedge_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	 void append(SV_type *t) { conslist::append(t); }$/;"	f	class:Type_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	void append(sc_case *c) { glist::append(c); }$/;"	f	struct:sc_cases
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	void append(sc_code *s) { glist::append(s); }$/;"	f	struct:sc_list2
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	void append(sc_code *s) { list.append(s); }$/;"	f	struct:sc_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	void append(sc_expr *s) { glist::append(s); }$/;"	f	struct:sc_elist
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    void append(SV_rule *r) { conslist::append(r); }$/;"	f	class:SV_rule_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    void append(Symbol *sp) { l.append(sp); }$/;"	f	class:Symbol_list
append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    void append(ty_record *t) { conslist::append(t); }$/;"	f	class:ty_record_list
append	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    void append(access_ineq_list & in) { this->strip(in, 0, 100); }$/;"	f	class:access_ineq_list
append_after	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    void append_after(int i, int_e *prev)$/;"	f	class:alias_set
append_after	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    void append_after(path_base *pb, path_e *prev)$/;"	f	class:alias_set
append_sorted	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  Sedge *append_sorted(Sedge *e)$/;"	f	class:Sedge_list
append_sorted	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  Sedge *append_sorted(Seqn *f,Seqn *t)$/;"	f	class:Sedge_list
append_sorted	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Sedge *append_sorted(Sedge *e)$/;"	f	struct:Sedge_list
append_sorted	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Sedge *append_sorted(Seqn *f,Seqn *t)$/;"	f	struct:Sedge_list
append_sorted	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Sedge *append_sorted(Sedge *e)$/;"	f	struct:Sedge_list
append_sorted	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Sedge *append_sorted(Seqn *f,Seqn *t)$/;"	f	struct:Sedge_list
apply_iteration_only	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual int apply_iteration_only() { return interval_order==NULL; }$/;"	f	class:CFG_0
arg_info	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	/^} arg_info;$/;"	t	typeref:struct:__anon15
arg_info	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean arg_info;$/;"	m	class:func_type
arg_list	/cad2/ece540s/basesuif-1.1.2/include/builder/bldtypes.h	/^    type_node * arg_list[10];$/;"	m	class:type_template
arg_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node *arg_type(unsigned n)	{ check_range(n); return argts[n]; }$/;"	f	class:func_type
arglist	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	chainp arglist;$/;"	m	struct:Entrypoint
argno	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int argno;		\/* for multiple entries *\/$/;"	m	struct:Nameblock
args	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    dep_node_si **args() {return (dep_node_si **)ast_node_suif_instr::args();}$/;"	f	struct:dep_node_si
args	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    dep_node_si **args() {return (dep_node_si **)ast_node_suif_instr::args();}$/;"	f	struct:dep_node_si
args	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    ast_node_suif_instr ** args()	{ return listp; }$/;"	f	class:ast_node_suif_instr
args	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg *args;$/;"	m	class:in_cal
args	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_reg **args;		\/* array of arguments *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon54
args	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_reg **args;		\/* array of arguments *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon31
args	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand *args;$/;"	m	class:in_cal
args_known	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean args_known()		{ return arg_info; }$/;"	f	class:func_type
argsp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Listblock *argsp;$/;"	m	struct:Primblock	typeref:struct:Primblock::Listblock
argts	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node **argts;$/;"	m	class:func_type
argument	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand argument(unsigned n)	{ check_range(n); return args[n]; }$/;"	f	class:in_cal
array_align	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    int array_align;			\/* extra alignment for arrays *\/$/;"	m	struct:machine_params
array_bound	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    array_bound()			{ is_cnst = FALSE; u.var = NULL; }$/;"	f	class:array_bound
array_bound	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    array_bound(int c)			{ is_cnst = TRUE; u.cnst = c; }$/;"	f	class:array_bound
array_bound	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    array_bound(var_sym *v)		{ is_cnst = FALSE; u.var = v; }$/;"	f	class:array_bound
array_bound	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^class array_bound {$/;"	c
array_info	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    array_info(): glist() {}$/;"	f	class:array_info
array_info	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^class array_info: public glist {$/;"	c
array_info	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    array_info(): glist() {}$/;"	f	class:array_info
array_info	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^class array_info: public glist {$/;"	c
array_info	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    array_info(): glist() {}$/;"	f	class:array_info
array_info	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^class array_info: public glist {$/;"	c
array_info_iter	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    array_info_iter(array_info *v): glist_iter((glist *)v) {}$/;"	f	class:array_info_iter
array_info_iter	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^class array_info_iter: public glist_iter {$/;"	c
array_info_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    array_info_iter(array_info *v): glist_iter((glist *)v) {}$/;"	f	class:array_info_iter
array_info_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^class array_info_iter: public glist_iter {$/;"	c
array_info_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    array_info_iter(array_info *v): glist_iter((glist *)v) {}$/;"	f	class:array_info_iter
array_info_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^class array_info_iter: public glist_iter {$/;"	c
array_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    array_type()			{ }$/;"	f	class:array_type
array_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^class array_type : public type_node {$/;"	c
assert	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	214;"	d
assert_msg	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	207;"	d
assign	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & assign(block & A,$/;"	f	class:block
assign	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^inline tree_node *assign(var_sym *lval, operand rval)$/;"	f
assign_op	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^enum assign_op { aop_eq,                        \/\/ a = b;$/;"	g
assigned_values	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		chainp assigned_values;	\/* list of integers, each being a$/;"	m	union:Nameblock::__anon7
ast_data_process	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^    virtual void ast_data_process(in_data *) { }$/;"	f	class:ast_proc_iter
ast_graph	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^    ast_graph(if_istream *is, ast_proc *p)$/;"	f	class:ast_graph
ast_graph	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^class ast_graph : public i_storage {$/;"	c
ast_group	/cad2/ece540s/basesuif-1.1.2/include/flow/astgroup.h	/^    ast_group()				{ }$/;"	f	class:ast_group
ast_group	/cad2/ece540s/basesuif-1.1.2/include/flow/astgroup.h	/^class ast_group {$/;"	c
ast_node	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    ast_node(ast_node_type k, ast_node_list *l) : clist_e(NULL, NULL)$/;"	f	class:ast_node
ast_node	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^class ast_node : public clist_e {$/;"	c
ast_node_for	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    ast_node_for(if_istream *is, ast_node_list *l) : ast_node(AST_NODE_FOR, l)$/;"	f	class:ast_node_for
ast_node_for	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^class ast_node_for: public ast_node {$/;"	c
ast_node_if	/cad2/ece540s/basesuif-1.1.2/include/flow/astif.h	/^    ast_node_if ($/;"	f	class:ast_node_if
ast_node_if	/cad2/ece540s/basesuif-1.1.2/include/flow/astif.h	/^    ast_node_if(if_istream *is, ast_node_list *l) : ast_node(AST_NODE_IF, l)$/;"	f	class:ast_node_if
ast_node_if	/cad2/ece540s/basesuif-1.1.2/include/flow/astif.h	/^class ast_node_if : public ast_node {$/;"	c
ast_node_iter	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    ast_node_iter(ast_node_list *l) : clist_iter(l) { }$/;"	f	class:ast_node_iter
ast_node_iter	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^class ast_node_iter : public clist_iter {$/;"	c
ast_node_list	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    ast_node_list(ast_node *p, ast_proc *sp, boolean trees = FALSE)$/;"	f	class:ast_node_list
ast_node_list	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    ast_node_list(if_istream *is, ast_node *p, ast_proc *sp)$/;"	f	class:ast_node_list
ast_node_list	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^class ast_node_list : public clist {$/;"	c
ast_node_loop	/cad2/ece540s/basesuif-1.1.2/include/flow/astloop.h	/^    ast_node_loop ($/;"	f	class:ast_node_loop
ast_node_loop	/cad2/ece540s/basesuif-1.1.2/include/flow/astloop.h	/^    ast_node_loop(if_istream *is, ast_node_list *l) : ast_node(AST_NODE_LOOP, l)$/;"	f	class:ast_node_loop
ast_node_loop	/cad2/ece540s/basesuif-1.1.2/include/flow/astloop.h	/^class ast_node_loop : public ast_node {$/;"	c
ast_node_suif_instr	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^class ast_node_suif_instr : public ast_node {$/;"	c
ast_node_type	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^enum ast_node_type {$/;"	g
ast_pre_process	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^    void ast_pre_process()		{ ag = new ast_group; }$/;"	f	class:ast_proc_iter
ast_proc	/cad2/ece540s/basesuif-1.1.2/include/flow/astproc.h	/^    ast_proc(ast_group *ag)		{ group = ag; g = NULL; }$/;"	f	class:ast_proc
ast_proc	/cad2/ece540s/basesuif-1.1.2/include/flow/astproc.h	/^    ast_proc(if_istream *is, ast_group *ag)$/;"	f	class:ast_proc
ast_proc	/cad2/ece540s/basesuif-1.1.2/include/flow/astproc.h	/^class ast_proc : public proc {$/;"	c
ast_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^    ast_proc_iter(char *inf)$/;"	f	class:ast_proc_iter
ast_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^    ast_proc_iter(char *inf, char *outf)$/;"	f	class:ast_proc_iter
ast_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^    ast_proc_iter(char *inf, char *outf, stream_type ost)$/;"	f	class:ast_proc_iter
ast_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^class ast_proc_iter : public proc_iter {$/;"	c
ast_proc_process	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^    virtual void ast_proc_process()	{ assert(FALSE); }$/;"	f	class:ast_proc_iter
astlist	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^    astlist()				{ }$/;"	f	class:astlist
astlist	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^class astlist : public glist {$/;"	c
astlist_e	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^    astlist_e(ast_node *ap) : glist_e(NULL)	{ a = ap; }$/;"	f	class:astlist_e
astlist_e	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^class astlist_e : public glist_e {$/;"	c
astlist_iter	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^    astlist_iter(astlist *al)		{ reset(al); }$/;"	f	class:astlist_iter
astlist_iter	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^class astlist_iter : public glist_iter {$/;"	c
at_end	/cad2/ece540s/basesuif-1.1.2/include/general/wseq.h	/^    int at_end()			{ return wp == eos; }$/;"	f	class:flat_seq
aunit	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint aunit;$/;"	m	struct:__anon46
aunit	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint aunit;$/;"	m	struct:__anon22
aux	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^	int aux;$/;"	m	class:name_store
aux	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^	int aux;$/;"	m	class:name_store
aux	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	/^	int aux;$/;"	m	class:name_store
av_compare_info	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^class av_compare_info {$/;"	c
av_compare_info	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^class av_compare_info {$/;"	c
av_compare_info	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^class av_compare_info {$/;"	c
back_pointer	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^    void *back_pointer;$/;"	m	class:si_entry
backup	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    instruction *backup;$/;"	m	class:if_istream
backward_edge_index	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  Int_xarray backward_edge_index;$/;"	m	class:CFG_1
backward_jumps	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    instruction_list backward_jumps;$/;"	m	struct:label_info
base	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg base, rdst;$/;"	m	class:in_array
base	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base *base;			\/* back-pointer *\/$/;"	m	class:path_info
base	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base *base;$/;"	m	class:path
base	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    it_basecomp base()			{ return (it_basecomp)basec; }$/;"	f	class:if_type
base	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	} base;$/;"	m	union:simple_instr_struct::__anon50	typeref:struct:simple_instr_struct::__anon50::__anon51
base	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    simple_type_base base;		\/* base type *\/$/;"	m	struct:simple_type_struct
base	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	} base;$/;"	m	union:simple_instr_struct::__anon27	typeref:struct:simple_instr_struct::__anon27::__anon28
base	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    simple_type_base base;		\/* base type *\/$/;"	m	struct:simple_type_struct
base	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand base;$/;"	m	class:in_array
base	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node *base()			{ return typ; }$/;"	f	class:modifier_type
base_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^class base_init_struct$/;"	c
base_of_arrays	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFinfo **base_of_arrays;$/;"	m	class:CFG_0
base_of_arrays	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  Node_index *base_of_arrays;$/;"	m	class:CFG
base_of_arrays	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  Node_index *base_of_arrays;$/;"	m	class:CFG
base_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand base_op()			{ return base; }$/;"	f	class:in_array
base_stream	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^class base_stream {$/;"	c
base_symtab	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^class base_symtab : public suif_object {$/;"	c
base_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    base_type()				{ }$/;"	f	class:base_type
base_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^class base_type : public type_node {$/;"	c
base_types	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum base_types { BT_void, BT_int, BT_char };$/;"	g
base_types	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum base_types { BT_void, BT_int, BT_char };$/;"	g
basec	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    int basec;$/;"	m	class:if_type
baseoffset	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr baseoffset;	\/* a constant or local variable holding$/;"	m	struct:Dimblock
bases	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record_list bases;$/;"	m	class:ty_record
bases	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record_list bases;$/;"	m	class:ty_record
basestrvar	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr basestrvar;$/;"	m	struct:Nameblock
basevar	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr basevar;$/;"	m	struct:Dimblock
basexpr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr basexpr;		\/* expression for comuting the offset, if$/;"	m	struct:Dimblock
basic_annote_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^typedef void basic_annote_walkee(annote *, so_walker *);$/;"	t
basic_op_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^typedef void basic_op_walkee(operand, so_walker *);$/;"	t
basic_so_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^typedef void basic_so_walkee(suif_object *, so_walker *);$/;"	t
basic_sym_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^typedef void basic_sym_walkee(sym_node *, so_walker *);$/;"	t
basic_type_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^typedef void basic_type_walkee(type_node *, so_walker *);$/;"	t
basis	/cad2/ece540s/basesuif-1.1.2/include/suifmath/vector_space.h	/^    fract_vector_list *basis() { make_basis(); return basis_vectors; }$/;"	f	class:vector_space
basis_vectors	/cad2/ece540s/basesuif-1.1.2/include/suifmath/vector_space.h	/^    fract_vector_list *basis_vectors;$/;"	m	class:vector_space
bb_head	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Snode *bb_head;$/;"	m	class:Sproblem
bb_head	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Snode *bb_head;$/;"	m	class:Sproblem
bb_head	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Snode *bb_head;$/;"	m	class:Sproblem
begins_bb	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  Flag is_join, is_fork, begins_bb, needs_var;$/;"	m	class:CFinfo
begins_bb	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  Flag is_join, is_fork, begins_bb, needs_var;$/;"	m	class:CFinfo
begins_bb	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  Flag is_join, is_fork, begins_bb, needs_var;$/;"	m	class:CFinfo
binary_op	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^enum binary_op { bop_mul,                       \/\/ a * b$/;"	g
bit_set	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    bit_set()				{ first = 0; last = 0; bits = NULL; }$/;"	f	class:bit_set
bit_set	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^class bit_set {$/;"	c
bit_set	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    bit_set()				{ first = 0; last = 0; bits = NULL; }$/;"	f	class:bit_set
bit_set	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^class bit_set {$/;"	c
bit_set_iter	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    bit_set_iter()			{ s = NULL; }$/;"	f	class:bit_set_iter
bit_set_iter	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^class bit_set_iter {$/;"	c
bit_set_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    bit_set_iter()			{ s = NULL; }$/;"	f	class:bit_set_iter
bit_set_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^class bit_set_iter {$/;"	c
bits	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    int *bits;$/;"	m	class:bit_set
bits	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    int *bits;$/;"	m	class:bit_set
bj	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	} bj;$/;"	m	union:simple_instr_struct::__anon50	typeref:struct:simple_instr_struct::__anon50::__anon52
bj	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	} bj;$/;"	m	union:simple_instr_struct::__anon27	typeref:struct:simple_instr_struct::__anon27::__anon29
blab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    label_sym *clab, *blab, *tol;$/;"	m	class:tree_loop
blab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    label_sym *clab, *blab;$/;"	m	class:tree_for
blanks	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		ftnint blanks;$/;"	m	struct:Constant::__anon8
bld_expr	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    static block * bld_expr(instruction *) { error(et_none, "No blk_expr yet"); return NULL; }$/;"	f	class:builder
blk	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    tree_block *blk;			\/* corresponding block *\/$/;"	m	class:block_symtab
blklevel	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned blklevel:8;	\/* level of nesting , for branch-in-loop$/;"	m	struct:Labelblock
block	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block(immed & im) { init(im); }$/;"	f	class:block
block	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block(immed *im)  { assert(im != NULL); init(*im); }$/;"	f	class:block
block	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block(instruction * in)             { init(in); }$/;"	f	class:block
block	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block(operand & op)                 { init(op); }$/;"	f	class:block
block	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block(operand * op)                 { init(*op); }$/;"	f	class:block
block	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block(tree_node * tn,$/;"	f	class:block
block	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block(tree_node_list *tnl,$/;"	f	class:block
block	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    block()                             { init(); }$/;"	f	class:block
block	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    block(const block & b)              { init(b); }$/;"	f	class:block
block	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    block(const block * b)              { init(b); }$/;"	f	class:block
block	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^class block:protected builder {$/;"	c
block	/cad2/ece540s/basesuif-1.1.2/include/flow/astproc.h	/^    block_node * block()		{ return (block_node *)name->base; }$/;"	f	class:ast_proc
block	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    tree_proc *block()			{ return pr; }$/;"	f	class:proc_sym
block	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    tree_block *block()			{ return blk; }$/;"	f	class:block_symtab
block_info	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    block_info()                        { op.ot = ot_none;$/;"	f	struct:block_info
block_info	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    block_info(const block_info & b)    { init(b); }$/;"	f	struct:block_info
block_info	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    block_info(const block_info * b)    { init(*b); }$/;"	f	struct:block_info
block_info	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^struct block_info:public builder_base {$/;"	s
block_node	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^class block_node : public sym_node {$/;"	c
block_sym	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^    block_sym,$/;"	e	enum:sym_kinds
block_symtab	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^class block_symtab : public base_symtab {$/;"	c
block_type	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum block_type { bt_none,  bt_expr,$/;"	g
bod	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *bod, *lpad, *lower, *upper, *step;$/;"	m	class:tree_for
bod	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *bod, *tst;$/;"	m	class:tree_loop
bod	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *bod;$/;"	m	class:tree_block
body	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    ast_node_list *body;$/;"	m	class:ast_node_for
body	/cad2/ece540s/basesuif-1.1.2/include/flow/astloop.h	/^    ast_node_list *body;$/;"	m	class:ast_node_loop
body	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_list body;$/;"	m	class:CN_function
body	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_list body;$/;"	m	class:CN_function
body	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *body()		{ return bod; }$/;"	f	class:tree_block
body	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *body()		{ return bod; }$/;"	f	class:tree_for
body	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *body()		{ return bod; }$/;"	f	class:tree_loop
bodya	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    annote_list bodya;$/;"	m	class:ast_node_for
boolean	/cad2/ece540s/basesuif-1.1.2/include/general/useful.h	/^typedef int boolean;$/;"	t
boolean	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^typedef int boolean;$/;"	t
boolean	/cad2/ece540s/basesuif-1.1.2/include/machine_dependent.h	18;"	d
boolean	/cad2/ece540s/basesuif-1.1.2/include/machine_dependent.h	20;"	d
boolean	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^typedef int boolean;$/;"	t
boolean	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^typedef int boolean;$/;"	t
boolean	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^typedef int boolean;$/;"	t
boolean	/cad2/ece540s/basesuif-1.1.2/include/suif/machine_dependent.h	18;"	d
boolean	/cad2/ece540s/basesuif-1.1.2/include/suif/machine_dependent.h	20;"	d
boolean	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^typedef int boolean;$/;"	t
bop	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    binary_op bop;$/;"	m	struct:any_oper
bop_add	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_add,                       \/\/ a + b$/;"	e	enum:binary_op
bop_and	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_and,                       \/\/ a & b$/;"	e	enum:binary_op
bop_div	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_div,                       \/\/ a \/ b$/;"	e	enum:binary_op
bop_divceil	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_divceil,              \/\/ (int)ceil((double)a\/(double)b)$/;"	e	enum:binary_op
bop_divfloor	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_divfloor,             \/\/ (int)floor((double)a\/(double)b)$/;"	e	enum:binary_op
bop_eq	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_eq,                        \/\/ (a == b)$/;"	e	enum:binary_op
bop_geq	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_geq,                       \/\/ (a >= b)$/;"	e	enum:binary_op
bop_gt	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_gt,                        \/\/ (a > b)$/;"	e	enum:binary_op
bop_land	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_land,                      \/\/ a && b$/;"	e	enum:binary_op
bop_leq	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_leq,                       \/\/ (a <= b)$/;"	e	enum:binary_op
bop_less	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_less,                      \/\/ (a < b)$/;"	e	enum:binary_op
bop_lor	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_lor,                       \/\/ a || b$/;"	e	enum:binary_op
bop_lshift	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_lshift,                    \/\/ a << b$/;"	e	enum:binary_op
bop_max	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_max                        \/\/ max(a, b)$/;"	e	enum:binary_op
bop_min	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_min,                       \/\/ min(a, b)$/;"	e	enum:binary_op
bop_mod	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_mod,                       \/\/ a % b  (always positive result)$/;"	e	enum:binary_op
bop_mul	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^enum binary_op { bop_mul,                       \/\/ a * b$/;"	e	enum:binary_op
bop_neq	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_neq,                       \/\/ (a != b)$/;"	e	enum:binary_op
bop_or	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_or,                        \/\/ a | b$/;"	e	enum:binary_op
bop_rem	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_rem,                       \/\/ same as a % b (not always positive)$/;"	e	enum:binary_op
bop_rshift	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_rshift,                    \/\/ a >> b$/;"	e	enum:binary_op
bop_sub	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_sub,                       \/\/ a - b$/;"	e	enum:binary_op
bop_xor	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 bop_xor,                       \/\/ a ^ b$/;"	e	enum:binary_op
bound	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand bound(unsigned n)		{ check_range(n); return uppers[n]; }$/;"	f	class:in_array
brklab	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    path *brklab;$/;"	m	class:ast_node_for
brklab	/cad2/ece540s/basesuif-1.1.2/include/flow/astloop.h	/^    path *brklab;$/;"	m	class:ast_node_loop
brklab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    label_sym *brklab()			{ return blab; }$/;"	f	class:tree_for
brklab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    label_sym *brklab()			{ return blab; }$/;"	f	class:tree_loop
bt	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    block_type bt;$/;"	m	class:builder
bt_expr	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum block_type { bt_none,  bt_expr,$/;"	e	enum:block_type
bt_label	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  bt_label, bt_sym,$/;"	e	enum:block_type
bt_lval	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  bt_prim, bt_lval,$/;"	e	enum:block_type
bt_none	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum block_type { bt_none,  bt_expr,$/;"	e	enum:block_type
bt_param	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  bt_stmt, bt_param,$/;"	e	enum:block_type
bt_parmlist	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  bt_parmlist, bt_proc };$/;"	e	enum:block_type
bt_prim	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  bt_prim, bt_lval,$/;"	e	enum:block_type
bt_proc	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  bt_parmlist, bt_proc };$/;"	e	enum:block_type
bt_stmt	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  bt_stmt, bt_param,$/;"	e	enum:block_type
bt_sym	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  bt_label, bt_sym,$/;"	e	enum:block_type
bucket	/cad2/ece540s/basesuif-1.1.2/include/simple/regmap.h	/^    alist *bucket;			\/* array of lists *\/$/;"	m	class:reg_map
buckets	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	/^    hash_chain *buckets;$/;"	m	class:hash_table
buckets	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^    hash_chain *buckets;$/;"	m	class:hash_table
buffer	/cad2/ece540s/basesuif-1.1.2/include/suif/ts_ptr_index.h	/^    char *buffer;$/;"	m	class:ts_ptr_index
builder	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    builder() { }$/;"	f	class:builder
builder	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    builder(tree_proc * p) { set_proc(p); }$/;"	f	class:builder
builder	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^class builder:public builder_base {$/;"	c
builder_base	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^class builder_base {$/;"	c
byte_size	/cad2/ece540s/basesuif-1.1.2/include/general/useful.h	30;"	d
c	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	complex c;$/;"	m	union:Multitype
c	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	complex c;$/;"	m	union:Multitype
c	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    const fract &c(int i) const$/;"	f	class:fract_vector
c	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    int c(int i) const { assert((i>=0)&&(i<sz)); return R[i]; }$/;"	f	class:integer_row
c	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    char c;$/;"	m	union:any_type
c_char	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    char c_char(void) const$/;"	f	class:i_rational
c_int	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    int c_int(void) const$/;"	f	class:i_rational
c_istream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^class c_istream: public istream$/;"	c
c_istream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^class c_istream: public istream$/;"	c
c_long	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    long c_long(void) const$/;"	f	class:i_rational
c_short	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    short c_short(void) const$/;"	f	class:i_rational
c_signed_char	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    signed char c_signed_char(void) const$/;"	f	class:i_rational
c_unsigned_char	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    unsigned char c_unsigned_char(void) const$/;"	f	class:i_rational
c_unsigned_int	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    unsigned int c_unsigned_int(void) const$/;"	f	class:i_rational
c_unsigned_long	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    unsigned long c_unsigned_long(void) const$/;"	f	class:i_rational
c_unsigned_short	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    unsigned short c_unsigned_short(void) const$/;"	f	class:i_rational
cache	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    char *cache[CACHE_SZ];$/;"	m	class:base_stream
cache_num	/cad2/ece540s/basesuif-1.1.2/include/expr_map.h	/^    unsigned cache_num;$/;"	m	class:expr_map
cache_num	/cad2/ece540s/basesuif-1.1.2/include/useful/expr_map.h	/^    unsigned cache_num;$/;"	m	class:expr_map
cached_alist	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^class cached_alist : public alist {$/;"	c
call	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	} call;$/;"	m	union:simple_instr_struct::__anon50	typeref:struct:simple_instr_struct::__anon50::__anon54
call	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	} call;$/;"	m	union:simple_instr_struct::__anon27	typeref:struct:simple_instr_struct::__anon27::__anon31
cases	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_cases cases;$/;"	m	struct:sc_switch
cases	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_cases cases;$/;"	m	struct:sc_switch
ccache	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    void *ccache[ccache_size];$/;"	m	class:if_istream
ccache	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    void *ccache[ccache_size];$/;"	m	class:if_ostream
ccache_size	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	47;"	d
ccon	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^        char    ccon;$/;"	m	union:block_info::__anon2
ccp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	524;"	d
ccp0	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		char *ccp0;$/;"	m	struct:Constant::__anon8
ccp1	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		} ccp1;$/;"	m	union:Constant	typeref:struct:Constant::__anon8
cd	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	double cd[2];$/;"	m	union:Constant
cds	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char *cds[2];$/;"	m	struct:Literal
cds	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char *cds[2];$/;"	m	union:Constant
cerr	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^{	flag cerr;$/;"	m	struct:__anon45
cerr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^{	flag cerr;$/;"	m	struct:__anon21
cextname	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char *cextname;		\/* C version of external name *\/$/;"	m	struct:Extsym
cfi	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^    CFinfo *cfi;$/;"	m	class:Header_info
cfi	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^    CFinfo *cfi;$/;"	m	class:Header_info
cfi	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^    CFinfo *cfi;$/;"	m	class:Header_info
ch	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    level_elem_list ch;                         \/\/ children loops$/;"	m	class:level_elem
ch_vtree	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    value_tree * ch_vtree;                      \/\/ tree (to construct children)$/;"	m	class:level_elem
chainp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^typedef struct Chain *chainp;$/;"	t	typeref:struct:Chain
changed	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    signed char changed;$/;"	m	class:Sproblem
changed	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    char changed;$/;"	m	class:Sproblem
changed	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    char changed;$/;"	m	class:Sproblem
char_is_signed	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    boolean char_is_signed;		\/* "char" types signed by default? *\/$/;"	m	struct:machine_params
charp	/cad2/ece540s/basesuif-1.1.2/include/builder/bldtypes.h	/^typedef char * charp;$/;"	t
charptr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	/^typedef char *charptr;$/;"	t
check	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_rule *check(int t)$/;"	f	class:SV_rule
check	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_type *check(int k) { assert(this!=0 && k==kind); return this; };$/;"	f	struct:SV_type
check	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Sym_val *check(int a)$/;"	f	class:Symbol
check	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Sym_val *check(int k) { assert(is(k)); return this; }$/;"	f	class:Sym_val
check	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_rule *check(int t)$/;"	f	class:SV_rule
check	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_type *check(int k) { assert(this!=0 && k==kind); return this; };$/;"	f	struct:SV_type
check	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Sym_val *check(int a)$/;"	f	class:Symbol
check	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Sym_val *check(int k) { assert(is(k)); return this; }$/;"	f	class:Sym_val
check_limit	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    int check_limit;$/;"	m	class:Sproblem
check_limit	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    int check_limit;$/;"	m	class:Sproblem
check_limit	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    int check_limit;$/;"	m	class:Sproblem
checking	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    int checking;$/;"	m	class:Sproblem
checking	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    int checking;$/;"	m	class:Sproblem
checking	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    int checking;$/;"	m	class:Sproblem
child	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    block * child;                      \/\/ children$/;"	m	class:builder
child	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base * child()			{ return children; }$/;"	f	class:path_base
child_list_num	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *child_list_num(unsigned \/* num *\/)$/;"	f	class:tree_instr
children	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base *children;$/;"	m	class:path_base
children	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    var_sym_list *children;$/;"	m	class:var_sym
children	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    base_symtab_list *children()	{ return childs; }$/;"	f	class:base_symtab
childs	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    base_symtab_list *childs;		\/* list of child symtabs *\/$/;"	m	class:base_symtab
ci	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	ftnint ci;		\/* Constant long integer *\/$/;"	m	union:Constant
ciend	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	flag ciend;$/;"	m	struct:__anon42
ciend	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	flag ciend;$/;"	m	struct:__anon18
cierr	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^{	flag cierr;$/;"	m	struct:__anon42
cierr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^{	flag cierr;$/;"	m	struct:__anon18
cifmt	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *cifmt;$/;"	m	struct:__anon42
cifmt	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *cifmt;$/;"	m	struct:__anon18
cilist	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^} cilist;$/;"	t	typeref:struct:__anon42
cilist	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^} cilist;$/;"	t	typeref:struct:__anon18
cirec	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint cirec;$/;"	m	struct:__anon42
cirec	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint cirec;$/;"	m	struct:__anon18
ciunit	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint ciunit;$/;"	m	struct:__anon42
ciunit	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint ciunit;$/;"	m	struct:__anon18
clab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    label_sym *clab, *blab, *tol;$/;"	m	class:tree_loop
clab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    label_sym *clab, *blab;$/;"	m	class:tree_for
clear	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void clear()                        { ot = ot_none; }$/;"	f	struct:any_oper
clear	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    void clear()			{ head = tail = NULL; }$/;"	f	class:glist
clear	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    void clear()			{ n_annotes = 0; first_nb = NULL; }$/;"	f	class:instruction
clear	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void clear() { glist::clear(); count=0; }$/;"	f	class:Snode_list
clear	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  void clear()$/;"	f	class:Parameterized_x_array0
clear	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void clear() { glist::clear(); count=0; }$/;"	f	class:Snode_list
clear	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void clear() { glist::clear(); count=0; }$/;"	f	class:Snode_list
clear	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    void clear()			{ head_e = tail_e = NULL; }$/;"	f	class:glist
clear_backup	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    void clear_backup()			{ backup = NULL; eoi = TRUE; }$/;"	f	class:if_istream
clear_numbers	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    virtual void clear_numbers()	{ set_number(0); }$/;"	f	class:tree_node
clist	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    clist() : clist_e(this, this)	{ }$/;"	f	class:clist
clist	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^class clist : public clist_e {$/;"	c
clist_e	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    clist_e(clist_e *n, clist_e *p) : dlist_e(n, p) { }$/;"	f	class:clist_e
clist_e	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^class clist_e : public dlist_e {$/;"	c
clist_iter	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    clist_iter(clist *l)		{ hd = l; cur = NULL;$/;"	f	class:clist_iter
clist_iter	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^class clist_iter {$/;"	c
cllist	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^} cllist;$/;"	t	typeref:struct:__anon45
cllist	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^} cllist;$/;"	t	typeref:struct:__anon21
clone	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_block *clone(base_symtab *dst_scope = NULL)$/;"	f	class:tree_block
clone	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_for *clone(base_symtab *dst_scope = NULL)$/;"	f	class:tree_for
clone	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_if *clone(base_symtab *dst_scope = NULL)$/;"	f	class:tree_if
clone	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_instr *clone(base_symtab *dst_scope = NULL)$/;"	f	class:tree_instr
clone	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_loop *clone(base_symtab *dst_scope = NULL)$/;"	f	class:tree_loop
clone	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_proc *clone(base_symtab *dst_scope = NULL)$/;"	f	class:tree_proc
clone	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node *clone(void)		{ return clone_internal(); }$/;"	f	class:type_node
closed	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	int closed;$/;"	m	class:CN_function
closed	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	int closed;$/;"	m	class:CN_function
cm	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    static int cm;$/;"	m	class:named_sc_fm
cmd_line_option	/cad2/ece540s/basesuif-1.1.2/include/suif/cmdparse.h	/^struct cmd_line_option {$/;"	s
cmd_line_option_kind	/cad2/ece540s/basesuif-1.1.2/include/suif/cmdparse.h	/^enum cmd_line_option_kind {$/;"	g
cn	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    static int cn;$/;"	m	class:named_sc_fm
cn_integer	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	cn_integer(int v):SV_const(int_type) { value=v; }$/;"	f	class:cn_integer
cn_integer	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class cn_integer: public SV_const {$/;"	c
cn_integer	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	cn_integer(int v):SV_const(int_type) { value=v; }$/;"	f	class:cn_integer
cn_integer	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class cn_integer: public SV_const {$/;"	c
cname	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    char *cname;$/;"	m	class:path_base
cnst	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^	int cnst;$/;"	m	union:array_bound::__anon36
cnt	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    int cnt, rcnt;$/;"	m	class:Sproblem
cnt	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    int cnt, rcnt;$/;"	m	class:Sproblem
cnt	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    int cnt, rcnt;$/;"	m	class:Sproblem
cnt	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    static name_table * cnt;                    \/\/ align the columns$/;"	m	class:named_sc_merge
code	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    } code;$/;"	m	struct:block_info	typeref:union:block_info::__anon1
code	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_code *code;$/;"	m	struct:sc_case
code	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_code *code;$/;"	m	struct:sc_case
code_context	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^class code_context {$/;"	c
code_context_annote	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    code_context_annote()                        { nm = NULL; }$/;"	f	struct:code_context_annote
code_context_annote	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^struct code_context_annote {$/;"	s
code_type	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum code_type { ct_none, ct_sym_node,$/;"	g
coeff	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^class coeff {$/;"	c
coeff	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^class coeff {$/;"	c
coeff	/cad2/ece540s/basesuif-1.1.2/include/suifmath/coeff.h	/^class coeff {$/;"	c
col_list	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    fract_vector *col_list;$/;"	m	class:fract_matrix
col_matrix	/cad2/ece540s/basesuif-1.1.2/include/suifmath/vector_space.h	/^    matrix *col_matrix;$/;"	m	class:vector_space
cols	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    int cols;$/;"	m	class:fract_matrix
cols	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    name_table & cols()                         { return nt_c; }$/;"	f	class:named_symcoeff_ineq
column_stat	/cad2/ece540s/basesuif-1.1.2/include/fmred.h	/^struct column_stat {$/;"	s
column_stat	/cad2/ece540s/basesuif-1.1.2/include/math/fmred.h	/^struct column_stat {$/;"	s
column_stat	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fmred.h	/^struct column_stat {$/;"	s
compare	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	/^    hash_compare compare;$/;"	m	class:hash_table
compare	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    int compare;$/;"	m	class:f_ostream
compare	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    int compare;$/;"	m	class:f_ostream
compare	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^    hash_compare compare;$/;"	m	class:hash_table
compile_info	/cad2/ece540s/basesuif-1.1.2/include/suif/initsuif.h	/^    char *compile_info;			\/* who\/when\/where was it compiled *\/$/;"	m	struct:suif_library
complete	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^    virtual void complete()		{ hawg_error(1, "i_storage::complete");}$/;"	f	class:i_storage
complete	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^    virtual void complete()		{ }$/;"	f	class:ast_graph
complete	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^    void complete()			{ }$/;"	f	class:simple_graph
complete	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^    void complete()			{ graph()->complete(); }$/;"	f	class:proc
complex	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef struct { real _r, _i; } complex;$/;"	t	typeref:struct:__anon40
complex	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef struct { real _r, _i; } complex;$/;"	t	typeref:struct:__anon16
con	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    } con;$/;"	m	struct:block_info	typeref:union:block_info::__anon2
con	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int con;		        \/\/ constant to add to vector$/;"	m	class:access_vector
con	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int con;		\/\/ constant to add to vector$/;"	m	class:access_vector
con	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int con;		\/\/ constant to add to vector$/;"	m	class:access_vector
cond_num	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    int cond_num;                               \/\/ # of `if' levels (beginning)$/;"	m	class:named_sc_merge
conpaths	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_list conpaths;	\/\/ access vector for paths$/;"	m	class:access_vector
conpaths	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_list conpaths;	\/\/ access vector for paths$/;"	m	class:access_vector
conregs	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_list conregs;	\/\/ access vector for non-induction registers$/;"	m	class:access_vector
conregs	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_list conregs;	\/\/ access vector for non-induction registers$/;"	m	class:access_vector
conregs	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_list conregs;	\/\/ access vector for non-induction registers$/;"	m	class:access_vector
cons_e	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    cons_e(void *d) : glist_e(NULL)	{ data = d; }$/;"	f	class:cons_e
cons_e	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^class cons_e : public glist_e {$/;"	c
cons_e	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    cons_e(void *d) { data = d; }$/;"	f	class:cons_e
cons_e	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^class cons_e : public glist_e {$/;"	c
consiter	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    consiter()				{ }$/;"	f	class:consiter
consiter	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    consiter(const conslist *sl)	{ reset(sl); }$/;"	f	class:consiter
consiter	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^class consiter : public glist_iter {$/;"	c
consiter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    consiter()				{ }$/;"	f	class:consiter
consiter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    consiter(const conslist *sl)	{ reset(sl); }$/;"	f	class:consiter
consiter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^class consiter : public glist_iter {$/;"	c
conslist	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    conslist()				{ }$/;"	f	class:conslist
conslist	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^class conslist : public glist {$/;"	c
conslist	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    conslist()				{ }$/;"	f	class:conslist
conslist	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^class conslist : public glist {$/;"	c
const_cols	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    const name_table & const_cols() const       { return nt_c; }$/;"	f	class:named_symcoeff_ineq
const_ineqs	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    const lin_ineq   & const_ineqs() const      { return lq; }$/;"	f	class:named_lin_ineq
const_names	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    const name_table & const_names() const      { return nt; }$/;"	f	class:named_lin_ineq
const_op	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^inline operand const_op(const i_integer &the_const, type_node *the_type)$/;"	f
const_planes	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    const name_table & const_planes() const     { return nt_p; }$/;"	f	class:named_symcoeff_ineq
const_test	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int const_test;$/;"	m	class:dependency_test
const_test	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int const_test;$/;"	m	class:dependency_test
const_test	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int const_test;$/;"	m	class:dependency_test
const_type	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum const_type { cst_none, cst_int, cst_ext_int,$/;"	g
constant	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    int *constant;$/;"	m	class:coeff
constant	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    int *constant;$/;"	m	class:coeff
constant	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	SV_const *constant;$/;"	m	struct:sc_const
constant	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	SV_const *constant;$/;"	m	struct:sc_const
constant	/cad2/ece540s/basesuif-1.1.2/include/suifmath/coeff.h	/^    int *constant;$/;"	m	class:coeff
constblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Constblock constblock;$/;"	m	union:Expression	typeref:struct:Expression::Constblock
constraint	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint() { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint(constraint & rw):integer_row((integer_row &) rw) { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint(constraint * rw):integer_row((integer_row *) rw) { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint(int s):integer_row(s) { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^class constraint:public integer_row {$/;"	c
constraint	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint() { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint(constraint & rw):integer_row((integer_row &) rw) { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint(constraint * rw):integer_row((integer_row *) rw) { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint(int s):integer_row(s) { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^class constraint:public integer_row {$/;"	c
constraint	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint() { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint(const constraint & rw):integer_row(rw) { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint(const constraint * rw):integer_row(rw) { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint(const integer_row & rw):integer_row(rw) { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint(const integer_row * rw):integer_row(rw) { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint(int s):integer_row(s) { }$/;"	f	class:constraint
constraint	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^class constraint:public integer_row {$/;"	c
container	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record *container;$/;"	m	class:ty_function
container	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record *container;$/;"	m	class:ty_function
contains	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    boolean contains(clist_e *e)	{ return contains_aux(e, this); }$/;"	f	class:clist_e
context	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    named_symcoeff_ineq & context()               { return ineq; }$/;"	f	struct:code_context_annote
contlab	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    path *contlab;$/;"	m	class:ast_node_for
contlab	/cad2/ece540s/basesuif-1.1.2/include/flow/astloop.h	/^    path *contlab;$/;"	m	class:ast_node_loop
contlab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    label_sym *contlab()		{ return clab; }$/;"	f	class:tree_for
contlab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    label_sym *contlab()		{ return clab; }$/;"	f	class:tree_loop
copy_var_body	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *copy_var_body;$/;"	m	class:SV_dflow
copy_var_body	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *copy_var_body;$/;"	m	class:SV_dflow
count	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int count() {return glist::count();}$/;"	f	class:array_info
count	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int count() {return glist::count();}$/;"	f	class:array_info
count	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int count() {return glist::count();}$/;"	f	class:array_info
count	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	int count;$/;"	m	class:Snode_list
count	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	int count;$/;"	m	class:ty_enum
count	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int count() { return l.count(); }$/;"	f	class:Symbol_list
count	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	/^    int count;$/;"	m	struct:__anon15
count	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	int count;$/;"	m	class:Snode_list
count	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	int count;$/;"	m	class:Snode_list
count	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	int count;$/;"	m	class:ty_enum
count	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int count() { return l.count(); }$/;"	f	class:Symbol_list
covered	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Seqn *covered;$/;"	m	class:Seqn
covered	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Seqn *covered;$/;"	m	class:Seqn
covered	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Seqn *covered;$/;"	m	class:Seqn
cp	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    const char *cp;$/;"	m	class:c_istream
cp	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    const char *cp;$/;"	m	class:c_istream
cp	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    static int cp;$/;"	m	class:named_sc_fm
create_entry	/cad2/ece540s/basesuif-1.1.2/include/suif/ptr_index.h	/^    si_entry *create_entry(void *init_data)$/;"	f	class:ptr_index
create_entry	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^    si_entry *create_entry(void *init_data)$/;"	f	class:string_index
create_table	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    char *unit_table,*create_table,*absorb_table;$/;"	m	class:SV_path
create_table	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    char *unit_table,*create_table,*absorb_table;$/;"	m	class:SV_path
creator	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *creator;$/;"	m	class:SVR_absorb
creator	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *creator;$/;"	m	class:SVR_create
creator	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *creator;$/;"	m	class:SVR_meet
creator	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *creator;$/;"	m	class:SVR_star
creator	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *creator;$/;"	m	class:SVR_unit
creator	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *creator;$/;"	m	class:SVR_absorb
creator	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *creator;$/;"	m	class:SVR_create
creator	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *creator;$/;"	m	class:SVR_meet
creator	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *creator;$/;"	m	class:SVR_star
creator	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *creator;$/;"	m	class:SVR_unit
crnk	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int crnk;$/;"	m	class:sc_fm_constraint
cs_op	/cad2/ece540s/basesuif-1.1.2/include/fmred.h	/^    red_operation cs_op;$/;"	m	struct:column_stat
cs_op	/cad2/ece540s/basesuif-1.1.2/include/math/fmred.h	/^    red_operation cs_op;$/;"	m	struct:column_stat
cs_op	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fmred.h	/^    red_operation cs_op;$/;"	m	struct:column_stat
cs_rank	/cad2/ece540s/basesuif-1.1.2/include/fmred.h	/^    int           cs_rank;$/;"	m	struct:column_stat
cs_rank	/cad2/ece540s/basesuif-1.1.2/include/math/fmred.h	/^    int           cs_rank;$/;"	m	struct:column_stat
cs_rank	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fmred.h	/^    int           cs_rank;$/;"	m	struct:column_stat
cst	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    const_type cst;$/;"	m	struct:block_info
cst_char	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  cst_char, cst_str};$/;"	e	enum:const_type
cst_double	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  cst_double, cst_float, cst_ext_float,$/;"	e	enum:const_type
cst_ext_float	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  cst_double, cst_float, cst_ext_float,$/;"	e	enum:const_type
cst_ext_int	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum const_type { cst_none, cst_int, cst_ext_int,$/;"	e	enum:const_type
cst_float	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  cst_double, cst_float, cst_ext_float,$/;"	e	enum:const_type
cst_int	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum const_type { cst_none, cst_int, cst_ext_int,$/;"	e	enum:const_type
cst_none	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum const_type { cst_none, cst_int, cst_ext_int,$/;"	e	enum:const_type
cst_str	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  cst_char, cst_str};$/;"	e	enum:const_type
csta	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *csta;$/;"	m	struct:__anon45
csta	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *csta;$/;"	m	struct:__anon21
ct	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    code_type ct;$/;"	m	struct:block_info
ct_instruction	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                 ct_instruction, ct_type_node};$/;"	e	enum:code_type
ct_none	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum code_type { ct_none, ct_sym_node,$/;"	e	enum:code_type
ct_struct_access	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                 ct_struct_access,$/;"	e	enum:code_type
ct_sym_node	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum code_type { ct_none, ct_sym_node,$/;"	e	enum:code_type
ct_tree_node	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                 ct_tree_node, ct_tree_node_list,$/;"	e	enum:code_type
ct_tree_node_list	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                 ct_tree_node, ct_tree_node_list,$/;"	e	enum:code_type
ct_type_node	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                 ct_instruction, ct_type_node};$/;"	e	enum:code_type
ctlabels	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int ctlabels[4];	\/* Control labels, defined below *\/$/;"	m	struct:Ctlframe
ctltype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned ctltype:8;$/;"	m	struct:Ctlframe
cunit	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint cunit;$/;"	m	struct:__anon45
cunit	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint cunit;$/;"	m	struct:__anon21
cur	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    clist_e *cur, *nxt;$/;"	m	class:clist_iter
cur	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist_e *cur, *nxt;$/;"	m	class:glist_iter
cur	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base *cur, *nxt;$/;"	m	class:path_base_iter
cur	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_e *cur, *nxt;$/;"	m	class:glist_iter
cur_elem	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *cur_elem()		{ return (alist_e *)glist_iter::cur_elem(); }$/;"	f	class:alist_iter
cur_elem	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_e *cur_elem() const		{ return cur; }$/;"	f	class:glist_iter
curno	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int curno;		\/* current number for this common block,$/;"	m	struct:Extsym
curr	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_e * curr;$/;"	m	class:access_ineq_list_iter
curr	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    unsigned long curr, prev;$/;"	m	class:lin_ineq_negate_iter
curr	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_e * curr;$/;"	m	class:access_ineq_list_iter
curr	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    unsigned long curr, prev;$/;"	m	class:lin_ineq_negate_iter
curr	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_e * curr;$/;"	m	class:access_ineq_list_iter
curr	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    int curr;$/;"	m	class:lin_ineq_difference_iter
curr	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    unsigned long curr, prev;$/;"	m	class:lin_ineq_negate_iter
curr_arg	/cad2/ece540s/basesuif-1.1.2/include/builder/bldtypes.h	/^    int curr_arg;$/;"	m	class:type_template
curr_pos	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    int curr_pos;$/;"	m	class:proc_iter
current	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	String_seg *current() { return (String_seg*)cur; }$/;"	f	struct:String_iter
current	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	String_seg *current() { return (String_seg*)cur; }$/;"	f	struct:String_iter
current_op	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    int current_op;$/;"	m	class:if_istream
custom	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    char * custom[MAX_CUSTOM];$/;"	m	class:code_context
cutoffpt	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int cutoffpt; $/;"	m	class:named_sc_fm
cvarname	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char *cvarname;		\/* name in the resulting C *\/$/;"	m	struct:Nameblock
cvarname	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char *cvarname;$/;"	m	struct:Paramblock
cvt_from_imm_f	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^typedef void* (*cvt_from_imm_f)(char *name, immed_list *il, suif_object *obj);$/;"	t
cvt_to_imm_f	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^typedef immed_list* (*cvt_to_imm_f)(char *name, void *data);$/;"	t
cycle_dep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int cycle_dep;$/;"	m	class:dependency_test
cycle_dep	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int cycle_dep;$/;"	m	class:dependency_test
cycle_dep	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int cycle_dep;$/;"	m	class:dependency_test
cycle_ind	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int cycle_ind;$/;"	m	class:dependency_test
cycle_ind	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int cycle_ind;$/;"	m	class:dependency_test
cycle_ind	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int cycle_ind;$/;"	m	class:dependency_test
cycle_not_ok	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int cycle_not_ok;$/;"	m	class:dependency_test
cycle_not_ok	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int cycle_not_ok;$/;"	m	class:dependency_test
cycle_not_ok	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int cycle_not_ok;$/;"	m	class:dependency_test
cycle_ok	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int cycle_ok;$/;"	m	class:dependency_test
cycle_ok	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int cycle_ok;$/;"	m	class:dependency_test
cycle_ok	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int cycle_ok;$/;"	m	class:dependency_test
d	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    distance d;$/;"	m	struct:distance_vector_e
d	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	distance d;$/;"	m	struct:distance_vector_e
d	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	distance d;$/;"	m	struct:distance_vector_e
d	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    int n, d;$/;"	m	class:fract
d	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	doublereal d;$/;"	m	union:Multitype
d	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	doublereal d;$/;"	m	union:Multitype
d	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    int n, d;$/;"	m	class:fract
d	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    double d;$/;"	m	union:any_type
d_eq	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_eq	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_eq	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_ge	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_ge	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_ge	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_gt	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_gt	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_gt	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_le	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_le	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_le	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_lg	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_lg	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_lg	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_lt	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_lt	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_lt	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_star	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_star	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
d_star	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	e	enum:direction
dabs	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	156;"	d
dabs	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	156;"	d
data	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	dir_array *data;$/;"	m	struct:dir_list
data	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	distance *data;  $/;"	m	struct:dir_array
data	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	dir_array *data;$/;"	m	struct:dir_list
data	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	distance *data;  $/;"	m	struct:dir_array
data	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	dir_array *data;$/;"	m	struct:dir_list
data	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	distance *data;  $/;"	m	struct:dir_array
data	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    void *data;$/;"	m	class:cons_e
data	/cad2/ece540s/basesuif-1.1.2/include/general/xarray.h	/^    void **data;$/;"	m	class:x_array
data	/cad2/ece540s/basesuif-1.1.2/include/general/xarray.h	/^    void **data;$/;"	m	class:x_array2
data	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    void *data;$/;"	m	class:cons_e
data	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^    void **data;$/;"	m	class:X_array0
data	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  TYPE *data;$/;"	m	class:Parameterized_x_array0
data	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    void **data;$/;"	m	class:X_array0
data	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    void **data;$/;"	m	class:X_array1
data	/cad2/ece540s/basesuif-1.1.2/include/suif/annote.h	/^    void *data()			{ return dt; }$/;"	f	class:annote
data	/cad2/ece540s/basesuif-1.1.2/include/suif/cmdparse.h	/^    void *data;$/;"	m	struct:cmd_line_option
data	/cad2/ece540s/basesuif-1.1.2/include/suif/xarray.h	/^    void **data;$/;"	m	class:x_array
data	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    immed data;$/;"	m	class:repeat_init_struct
data	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    immed_list *data;$/;"	m	class:multi_init_struct
data	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    int data;$/;"	m	class:fill_init_struct
data	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    void **data;$/;"	m	class:X_array0
data	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    void **data;$/;"	m	class:X_array1
data_areas	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^    ilist data_areas;$/;"	m	class:proc
data_array	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^    int * data_array() { return R; }$/;"	f	class:integer_row
data_array	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^    int * data_array() { return R; }$/;"	f	class:integer_row
data_array	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    int * data_array() { return R; }$/;"	f	class:integer_row
data_process	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    void data_process(in_data * dt) { dep_node_data_process(dt); } $/;"	f	class:dep_node_proc_iter
data_process	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    void data_process(in_data * dt) { dep_node_data_process(dt); } $/;"	f	class:dep_node_proc_iter
data_process	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^    void data_process(in_data *dt)	{ ast_data_process(dt); } $/;"	f	class:ast_proc_iter
data_process	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    virtual void data_process(in_data *) { }$/;"	f	class:proc_iter
data_value	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^    void *data_value(void)  { return the_data; }$/;"	f	class:si_entry
datalist	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Chain *datalist;$/;"	m	struct:Impldoblock	typeref:struct:Impldoblock::Chain
datap	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char * datap;		\/* Tagged block *\/$/;"	m	struct:Chain
dbl_builtin	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned dbl_builtin:1;	\/* builtin to be declared double *\/$/;"	m	struct:Addrblock
dcon	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^        double  dcon;$/;"	m	union:block_info::__anon2
debug_flags	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    signed char debug_flags;$/;"	m	class:Sproblem
debug_flags	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    char debug_flags;$/;"	m	class:Sproblem
debug_flags	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    char debug_flags;$/;"	m	class:Sproblem
debug_level	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int debug_level;$/;"	m	class:CFG_0
debug_level	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  int debug_level;$/;"	m	class:CFG
debug_level	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  int debug_level;$/;"	m	class:CFG
debug_print	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    void debug_print(FILE * fp = stdout)   { builder::print(this, fp, 1); }$/;"	f	class:block
debug_reduce	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	int debug_reduce;$/;"	m	class:Sprob_tarjan_DEBUG
debug_reduce	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	int debug_reduce;$/;"	m	class:Sprob_tarjan_DEBUG
debug_reduce	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	int debug_reduce;$/;"	m	class:Sprob_tarjan_DEBUG
decimal_buffer	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    char *decimal_buffer;$/;"	m	class:in_stream
def_index	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    ptr_index *def_index;		\/* for fast lookups by var_sym *\/$/;"	m	class:base_symtab
default_lab	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    label_sym *default_lab()		{ return dlab; }$/;"	f	class:in_mbr
defd	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    boolean defd;$/;"	m	class:var_sym
define_copy_var	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    void define_copy_var(C_code *c)$/;"	f	class:SV_dflow
define_copy_var	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    void define_copy_var(C_code *c)$/;"	f	class:SV_dflow
define_meet	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    void define_meet(C_code *c)$/;"	f	class:SV_dflow
define_meet	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    void define_meet(C_code *c)$/;"	f	class:SV_dflow
define_new_var	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    void define_new_var(C_code *c)$/;"	f	class:SV_dflow
define_new_var	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    void define_new_var(C_code *c)$/;"	f	class:SV_dflow
defines	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^struct defines {$/;"	s
defines	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^typedef struct defines defines;$/;"	t	typeref:struct:defines
definition	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    instruction *definition;$/;"	m	struct:label_info
deflab	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_sym *deflab;		\/* label of default target *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon55
deflab	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_sym *deflab;		\/* label of default target *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon32
deflt	/cad2/ece540s/basesuif-1.1.2/include/suif/cmdparse.h	/^    char *deflt;$/;"	m	struct:cmd_line_option
defname	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^	char defname[1];$/;"	m	struct:defines
defs	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    var_def_list *defs;			\/* variable definitions *\/$/;"	m	class:base_symtab
del_col	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^        integer_matrix del_col(int i) { return del_col(i, i); }$/;"	f	class:integer_matrix
del_col	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^    integer_row del_col(int i) { return del_col(i, i); }$/;"	f	class:integer_row
del_col	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq del_col(int i) { lin_ineq * ret = (lin_ineq *) new integer_matrix(integer_matrix::del_col(i));  $/;"	f	class:lin_ineq
del_col	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq del_col(int i, int j) { lin_ineq * ret = (lin_ineq *) new integer_matrix(integer_matrix::del_col(i,j));  $/;"	f	class:lin_ineq
del_col	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^        integer_matrix del_col(int i) { return del_col(i, i); }$/;"	f	class:integer_matrix
del_col	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^    integer_row del_col(int i) { return del_col(i, i); }$/;"	f	class:integer_row
del_col	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq del_col(int i) { lin_ineq * ret = (lin_ineq *) new integer_matrix(integer_matrix::del_col(i));  $/;"	f	class:lin_ineq
del_col	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq del_col(int i, int j) { lin_ineq * ret = (lin_ineq *) new integer_matrix(integer_matrix::del_col(i,j));  $/;"	f	class:lin_ineq
del_col	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    fract_matrix del_col(int i) const   { return del_col(i, i); }$/;"	f	class:fract_matrix
del_col	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^        integer_matrix del_col(int i) const { return del_col(i, i); }$/;"	f	class:integer_matrix
del_col	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    integer_row del_col(int i) const { return del_col(i, i); }$/;"	f	class:integer_row
del_col	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq del_col(int i) const { return integer_matrix::del_col(i); }$/;"	f	class:lin_ineq
del_col	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq del_col(int i, int j) const$/;"	f	class:lin_ineq
del_col	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    matrix del_col(int i)   { return del_col(i, i); }$/;"	f	class:matrix
del_col	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    void del_col(int i)                         { del_col(i, i); }$/;"	f	class:named_lin_ineq
del_col	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    void del_col(int i)                         { del_col(i, i); }$/;"	f	class:named_symcoeff_ineq
del_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    void del_ineq(int i)                        { del_ineq(i, i); }$/;"	f	class:named_symcoeff_ineq
del_pln	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    void del_pln(int i)                         { del_pln(i, i); }$/;"	f	class:named_symcoeff_ineq
del_pos	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    fract_vector del_pos(int i) const    { return del_pos(i, i); }$/;"	f	class:fract_vector
del_row	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^        integer_matrix del_row(int i) { return del_row(i, i); }$/;"	f	class:integer_matrix
del_row	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^        integer_matrix del_row(int i) { return del_row(i, i); }$/;"	f	class:integer_matrix
del_row	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    fract_matrix del_row(int i) const   { return del_row(i, i); }$/;"	f	class:fract_matrix
del_row	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^        integer_matrix del_row(int i) const { return del_row(i, i); }$/;"	f	class:integer_matrix
del_row	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    matrix del_row(int i)   { return del_row(i, i); }$/;"	f	class:matrix
delete_irravalent_variables	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    lin_ineq delete_irravalent_variables(int * dv) { $/;"	f	class:poly_iterator
delete_irravalent_variables	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    lin_ineq delete_irravalent_variables(int * dv) { $/;"	f	class:poly_iterator
delete_irravalent_variables	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    lin_ineq delete_irravalent_variables(int * dv) { $/;"	f	class:poly_iterator
delete_order	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    constraint delete_order;  \/\/ Which to delete$/;"	m	class:poly_iterator
delete_order	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    constraint delete_order;  \/\/ Which to delete$/;"	m	class:poly_iterator
delete_order	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    constraint delete_order;  \/\/ Which to delete$/;"	m	class:poly_iterator
denom	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    int denom() const			{ return d; }$/;"	f	class:fract
denom	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    int denom() const			{ return d; }$/;"	f	class:fract
denominator	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational denominator(void) const  { return the_denominator; }$/;"	f	class:i_rational
dep_for_annote	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    dep_for_annote(tree_for * tf) { my_for = tf;$/;"	f	struct:dep_for_annote
dep_for_annote	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^struct dep_for_annote {$/;"	s
dep_instr_annote	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    dep_instr_annote(instruction * i) { my_instr = i;$/;"	f	struct:dep_instr_annote
dep_instr_annote	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^struct dep_instr_annote {$/;"	s
dep_node_for	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^        dep_node_for(if_istream *is,ast_node_list *l):$/;"	f	struct:dep_node_for
dep_node_for	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^struct dep_node_for: public ast_node_for {$/;"	s
dep_node_for	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^        dep_node_for(if_istream *is,ast_node_list *l):$/;"	f	struct:dep_node_for
dep_node_for	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^struct dep_node_for: public ast_node_for {$/;"	s
dep_node_group	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^struct dep_node_group: public ast_group {$/;"	s
dep_node_group	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^struct dep_node_group: public ast_group {$/;"	s
dep_node_if	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^        dep_node_if(ast_node_list *l,ast_node_list *h,ast_node_list *t,$/;"	f	struct:dep_node_if
dep_node_if	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^        dep_node_if(if_istream *is,ast_node_list *l): ast_node_if(is,l){}$/;"	f	struct:dep_node_if
dep_node_if	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^struct dep_node_if: public ast_node_if {$/;"	s
dep_node_if	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^        dep_node_if(ast_node_list *l,ast_node_list *h,ast_node_list *t,$/;"	f	struct:dep_node_if
dep_node_if	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^        dep_node_if(if_istream *is,ast_node_list *l): ast_node_if(is,l){}$/;"	f	struct:dep_node_if
dep_node_if	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^struct dep_node_if: public ast_node_if {$/;"	s
dep_node_loop	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^        dep_node_loop(ast_node_list *l,ast_node_list *b,ast_node_list *te,$/;"	f	struct:dep_node_loop
dep_node_loop	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^        dep_node_loop(if_istream *is,ast_node_list *l):ast_node_loop(is,l){}$/;"	f	struct:dep_node_loop
dep_node_loop	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^struct dep_node_loop: public ast_node_loop {$/;"	s
dep_node_loop	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^        dep_node_loop(ast_node_list *l,ast_node_list *b,ast_node_list *te,$/;"	f	struct:dep_node_loop
dep_node_loop	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^        dep_node_loop(if_istream *is,ast_node_list *l):ast_node_loop(is,l){}$/;"	f	struct:dep_node_loop
dep_node_loop	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^struct dep_node_loop: public ast_node_loop {$/;"	s
dep_node_pre_process	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    void dep_node_pre_process()$/;"	f	class:dep_node_proc_iter
dep_node_pre_process	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    void dep_node_pre_process()$/;"	f	class:dep_node_proc_iter
dep_node_proc	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^        dep_node_proc(ast_group *ag,int f=0): ast_proc(ag),fancy_access_vectors(f) {}$/;"	f	struct:dep_node_proc
dep_node_proc	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^        dep_node_proc(if_istream *is,ast_group *ag,int f=0): ast_proc(is,ag),fancy_access_vectors(f) {}$/;"	f	struct:dep_node_proc
dep_node_proc	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^struct dep_node_proc: public ast_proc {$/;"	s
dep_node_proc	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^        dep_node_proc(ast_group *ag,int f=0): ast_proc(ag),fancy_access_vectors(f) {}$/;"	f	struct:dep_node_proc
dep_node_proc	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^        dep_node_proc(if_istream *is,ast_group *ag,int f=0): ast_proc(is,ag),fancy_access_vectors(f) {}$/;"	f	struct:dep_node_proc
dep_node_proc	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^struct dep_node_proc: public ast_proc {$/;"	s
dep_node_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    dep_node_proc_iter(char * inf): ast_proc_iter(inf) { fancy = 0; dep_node_pre_process(); }$/;"	f	class:dep_node_proc_iter
dep_node_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    dep_node_proc_iter(char * inf, char * outf): ast_proc_iter(inf, outf) { fancy = 0; dep_node_pre_process(); }$/;"	f	class:dep_node_proc_iter
dep_node_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    dep_node_proc_iter(char * inf, char * outf, stream_type os): ast_proc_iter(inf, outf, os) { fancy = 0; dep_node_pre_process(); }$/;"	f	class:dep_node_proc_iter
dep_node_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^class dep_node_proc_iter:public ast_proc_iter {$/;"	c
dep_node_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    dep_node_proc_iter(char * inf): ast_proc_iter(inf) { fancy = 0; dep_node_pre_process(); }$/;"	f	class:dep_node_proc_iter
dep_node_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    dep_node_proc_iter(char * inf, char * outf): ast_proc_iter(inf, outf) { fancy = 0; dep_node_pre_process(); }$/;"	f	class:dep_node_proc_iter
dep_node_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    dep_node_proc_iter(char * inf, char * outf, stream_type os): ast_proc_iter(inf, outf, os) { fancy = 0; dep_node_pre_process(); }$/;"	f	class:dep_node_proc_iter
dep_node_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^class dep_node_proc_iter:public ast_proc_iter {$/;"	c
dep_node_si	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    dep_node_si(ast_node_list *l, instruction *i): ast_node_suif_instr(l,i),ai(0){}$/;"	f	struct:dep_node_si
dep_node_si	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    dep_node_si(if_istream *is, ast_node_list *l): ast_node_suif_instr(is, l),ai(0) {}$/;"	f	struct:dep_node_si
dep_node_si	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^struct dep_node_si: public ast_node_suif_instr {$/;"	s
dep_node_si	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    dep_node_si(ast_node_list *l, instruction *i): ast_node_suif_instr(l,i),ai(0){}$/;"	f	struct:dep_node_si
dep_node_si	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    dep_node_si(if_istream *is, ast_node_list *l): ast_node_suif_instr(is, l),ai(0) {}$/;"	f	struct:dep_node_si
dep_node_si	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^struct dep_node_si: public ast_node_suif_instr {$/;"	s
dep_proc_annote	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    dep_proc_annote(tree_proc * tp) { my_proc = tp; $/;"	f	struct:dep_proc_annote
dep_proc_annote	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^struct dep_proc_annote {$/;"	s
dependence_test	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^    dependence_test() { dv = NULL;  res = dt_none; }$/;"	f	class:dependence_test
dependence_test	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^class dependence_test {$/;"	c
dependency_test	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^class dependency_test {$/;"	c
dependency_test	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	dependency_test() {}$/;"	f	class:dependency_test
dependency_test	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^class dependency_test {$/;"	c
dependency_test	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	dependency_test() {}$/;"	f	class:dependency_test
dependency_test	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^class dependency_test {$/;"	c
dependent	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^enum answer{independent, dependent, unsure};$/;"	e	enum:answer
dependent	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^enum answer{independent, dependent, unsure};$/;"	e	enum:answer
dependent	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^enum answer{independent, dependent, unsure};$/;"	e	enum:answer
deptest_result	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^enum deptest_result { dt_none, $/;"	g
depth	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  unsigned char depth;$/;"	m	class:CFinfo
depth	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  unsigned char depth;$/;"	m	class:CFinfo
depth	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  unsigned char depth;$/;"	m	class:CFinfo
dest_reg	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    if_reg dest_reg()			{ return instr->dest_reg(); }$/;"	f	class:ast_node_suif_instr
destroy_entry	/cad2/ece540s/basesuif-1.1.2/include/suif/ptr_index.h	/^    void destroy_entry(si_entry *old_entry)  { delete old_entry; }$/;"	f	class:ptr_index
destroy_entry	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^    void destroy_entry(si_entry *old_entry)  { delete old_entry; }$/;"	f	class:string_index
df	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_dflow *df;$/;"	m	class:SV_node
df	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_dflow *df;$/;"	m	class:SV_node
dfill	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		double dfill[2];$/;"	m	struct:Addrblock::__anon9::__anon10
dfn	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int dfn;$/;"	m	class:CFinfo
dfn	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  int dfn;$/;"	m	class:CFinfo
dfn	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  int dfn;$/;"	m	class:CFinfo
dim	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    int dim;$/;"	m	class:poly_iterator
dim	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    int dim;$/;"	m	class:poly_iterator
dim	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    int dim;$/;"	m	class:poly_iterator
dimensionality	/cad2/ece540s/basesuif-1.1.2/include/suifmath/vector_space.h	/^    int dimensionality()       { make_basis(); return basis_vectors->count(); }$/;"	f	class:vector_space
dims	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    int elemsz, dims;$/;"	m	class:in_array
dims	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	Long *dims;$/;"	m	struct:Vardesc
dims	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		} dims[1];	\/* Dimblocks are allocated with enough$/;"	m	struct:Dimblock	typeref:struct:Dimblock::__anon11
dims	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	Long *dims;$/;"	m	struct:Vardesc
dims	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned dims()			{ return dms; }$/;"	f	class:in_array
dimsize	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		expptr dimsize;	\/* constant or register holding the size$/;"	m	struct:Dimblock::__anon11
dir_array	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	dir_array(int s) { size =s; data = new distance[s]; };$/;"	f	struct:dir_array
dir_array	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^struct dir_array $/;"	s
dir_array	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	dir_array(int s) { size =s; data = new distance[s]; };$/;"	f	struct:dir_array
dir_array	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^struct dir_array $/;"	s
dir_array	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	dir_array(int s) { size =s; data = new distance[s]; };$/;"	f	struct:dir_array
dir_array	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^struct dir_array $/;"	s
dir_list	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	dir_list() { data = 0; next = 0; }$/;"	f	struct:dir_list
dir_list	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	dir_list(dir_array *d) { this->data = d; next = 0; };$/;"	f	struct:dir_list
dir_list	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	dir_list(dir_list *dl) { $/;"	f	struct:dir_list
dir_list	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^struct dir_list$/;"	s
dir_list	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	dir_list() { data = 0; next = 0; }$/;"	f	struct:dir_list
dir_list	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	dir_list(dir_array *d) { this->data = d; next = 0; };$/;"	f	struct:dir_list
dir_list	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	dir_list(dir_list *dl) { $/;"	f	struct:dir_list
dir_list	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^struct dir_list$/;"	s
dir_list	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	dir_list() { data = 0; next = 0; }$/;"	f	struct:dir_list
dir_list	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	dir_list(dir_array *d) { this->data = d; next = 0; };$/;"	f	struct:dir_list
dir_list	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	dir_list(dir_list *dl) { $/;"	f	struct:dir_list
dir_list	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^struct dir_list$/;"	s
direction	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	g
direction	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	g
direction	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^enum direction {d_lt=1,d_gt=2,d_eq=4,d_le=5,d_ge=6,d_lg=3,d_star=7};$/;"	g
direction	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    int direction;$/;"	m	class:Sproblem
direction	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    int direction;$/;"	m	class:Sproblem
direction	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    int direction;$/;"	m	class:Sproblem
directions	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	dir_list *directions() { return dl; };$/;"	f	class:exact
directions	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	dir_list *directions() { return dl; };$/;"	f	class:exact
directions	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	dir_list *directions() { return dl; };$/;"	f	class:exact
discriminator	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    icon_discriminators discriminator;$/;"	m	class:icon
dismantle	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    virtual ast_node * dismantle()	{ return fdismantle(TRUE); }$/;"	f	class:ast_node_for
distance	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    distance(){set_star();}$/;"	f	class:distance
distance	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    distance(distance &ds) {val = ds.val;}$/;"	f	class:distance
distance	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    distance(distance *ds){val = ds->val;}$/;"	f	class:distance
distance	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    distance(int dst) {set_distance(dst);}$/;"	f	class:distance
distance	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^class distance {$/;"	c
distance	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    distance(){set_star();}$/;"	f	class:distance
distance	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    distance(distance &ds) {val = ds.val;}$/;"	f	class:distance
distance	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    distance(distance *ds){val = ds->val;}$/;"	f	class:distance
distance	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    distance(int dst) {set_distance(dst);}$/;"	f	class:distance
distance	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^class distance {$/;"	c
distance	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    distance(){set_star();}$/;"	f	class:distance
distance	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    distance(distance &ds) {val = ds.val;}$/;"	f	class:distance
distance	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    distance(distance *ds){val = ds->val;}$/;"	f	class:distance
distance	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    distance(int dst) {set_distance(dst);}$/;"	f	class:distance
distance	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^class distance {$/;"	c
distance_vector	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    distance_vector() { set_dep(); };$/;"	f	struct:distance_vector
distance_vector	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    distance_vector(short in) {ind = in;}$/;"	f	struct:distance_vector
distance_vector	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^struct distance_vector: public glist {$/;"	s
distance_vector	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	distance_vector() { set_dep(); };$/;"	f	struct:distance_vector
distance_vector	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	distance_vector(short in) {ind = in;}$/;"	f	struct:distance_vector
distance_vector	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^struct distance_vector: public glist {$/;"	s
distance_vector	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	distance_vector() { set_dep(); };$/;"	f	struct:distance_vector
distance_vector	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	distance_vector(short in) {ind = in;}$/;"	f	struct:distance_vector
distance_vector	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^struct distance_vector: public glist {$/;"	s
distance_vector_e	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    distance_vector_e(distance dd): glist_e()$/;"	f	struct:distance_vector_e
distance_vector_e	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^struct distance_vector_e: public glist_e {$/;"	s
distance_vector_e	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	distance_vector_e(distance dd): glist_e(0)$/;"	f	struct:distance_vector_e
distance_vector_e	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^struct distance_vector_e: public glist_e {$/;"	s
distance_vector_e	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	distance_vector_e(distance dd): glist_e(0)$/;"	f	struct:distance_vector_e
distance_vector_e	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^struct distance_vector_e: public glist_e {$/;"	s
distance_vector_iter	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^	distance_vector_iter(distance_vector *dv): glist_iter((glist *)dv){}$/;"	f	struct:distance_vector_iter
distance_vector_iter	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^struct distance_vector_iter: public glist_iter {$/;"	s
distance_vector_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	distance_vector_iter(distance_vector *dv): glist_iter((glist *)dv){}$/;"	f	struct:distance_vector_iter
distance_vector_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^struct distance_vector_iter: public glist_iter {$/;"	s
distance_vector_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	distance_vector_iter(distance_vector *dv): glist_iter((glist *)dv){}$/;"	f	struct:distance_vector_iter
distance_vector_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^struct distance_vector_iter: public glist_iter {$/;"	s
dl	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	dir_list *dl;$/;"	m	class:exact
dl	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	dir_list *dl;$/;"	m	class:exact
dl	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	dir_list *dl;$/;"	m	class:exact
dlab	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    path dlab;$/;"	m	class:in_mbr
dlab	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    label_sym *dlab;$/;"	m	class:in_mbr
dlist	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^class dlist : public glist {$/;"	c
dlist_e	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    dlist_e(dlist_e *n, dlist_e *p)	{ next_e = n; prev_e = p; }$/;"	f	class:dlist_e
dlist_e	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^class dlist_e {$/;"	c
dlist_e	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^    dlist_e()				{ prev_e = NULL; }$/;"	f	class:dlist_e
dlist_e	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^class dlist_e : public glist_e {$/;"	c
dlist_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^    dlist_iter()			{ }$/;"	f	class:dlist_iter
dlist_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^    dlist_iter(const dlist *dl) : glist_iter(dl) { }$/;"	f	class:dlist_iter
dlist_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^class dlist_iter : public glist_iter {$/;"	c
dmax	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	160;"	d
dmax	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	160;"	d
dmin	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	159;"	d
dmin	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	159;"	d
dms	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned elemsz, dms;$/;"	m	class:in_array
do_exact	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    void do_exact() { ex = 1; }$/;"	f	class:dependency_test
do_exact	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	void do_exact() { ex = 1; }$/;"	f	class:dependency_test
do_exact	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	void do_exact() { ex = 1; }$/;"	f	class:dependency_test
do_not_delete_proc	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    void do_not_delete_proc()		{ dont_delete = TRUE; }$/;"	f	class:proc_iter
do_write_out	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^enum do_write_out { DO_WRITE_OUT, DO_NOT_WRITE_OUT };$/;"	g
doasignop	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & doasignop(assign_op aop,$/;"	f	class:block
dobinop	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & dobinop(binary_op bop,$/;"	f	class:block
dobodylabel	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	248;"	d
dolabel	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int dolabel;		\/* label marking end of this DO loop *\/$/;"	m	struct:Ctlframe
domax	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr domax;		\/* constant or temp variable holding MAX$/;"	m	struct:Ctlframe
donamep	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	Namep donamep;		\/* DO index variable *\/$/;"	m	struct:Ctlframe
done	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    int done() { return (curr & done_mark); }$/;"	f	class:lin_ineq_negate_iter
done	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    int done() { return (curr & done_mark); }$/;"	f	class:lin_ineq_negate_iter
done	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    int done() const { return (!indep)?(curr==D.n()):(curr>0); }$/;"	f	class:lin_ineq_difference_iter
done	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    int done() const { return (curr & done_mark); }$/;"	f	class:lin_ineq_negate_iter
done_mark	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    unsigned long done_mark;$/;"	m	class:lin_ineq_negate_iter
done_mark	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    unsigned long done_mark;$/;"	m	class:lin_ineq_negate_iter
done_mark	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    unsigned long done_mark;$/;"	m	class:lin_ineq_negate_iter
doneglabel	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	250;"	d
dont_delete	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    boolean dont_delete;$/;"	m	class:proc_iter
doposlabel	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	249;"	d
dostep	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr dostep;		\/* expression *\/$/;"	m	struct:Ctlframe
dostepsign	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned dostepsign:8;	\/* 0 - variable, 1 - pos, 2 - neg *\/$/;"	m	struct:Ctlframe
dot	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int dot;$/;"	m	class:PP_item
dot	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int dot;$/;"	m	class:PP_item
doublecomplex	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef struct { doublereal _r, _i; } doublecomplex;$/;"	t	typeref:struct:__anon41
doublecomplex	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef struct { doublereal _r, _i; } doublecomplex;$/;"	t	typeref:struct:__anon17
doublereal	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef double doublereal;$/;"	t
doublereal	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef double doublereal;$/;"	t
dounion	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    void dounion(alias_set &ps)		{ dounion(&ps); }$/;"	f	class:alias_set
douniop	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & douniop(unary_op uop)       { return op(uop, *this); }$/;"	f	class:block
dref_ptr	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    boolean dref_ptr;$/;"	m	struct:struct_access
dst	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg dst, src1, src2;$/;"	m	class:in_rrr
dst	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg dst, src;$/;"	m	class:in_cvt
dst	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg dst;$/;"	m	class:in_ldc
dst	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_reg *dst;		\/* destination *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon51
dst	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_reg *dst;		\/* destination *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon53
dst	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_reg *dst;		\/* return value destination *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon54
dst	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_reg *dst;		\/* destination *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon28
dst	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_reg *dst;		\/* destination *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon30
dst	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_reg *dst;		\/* return value destination *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon31
dst	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand dst;$/;"	m	class:instruction
dst_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand dst_op()			{ return operand(); }$/;"	f	class:in_bj
dst_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand dst_op()			{ return operand(); }$/;"	f	class:in_lab
dst_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand dst_op()			{ return operand(); }$/;"	f	class:in_mbr
dst_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    virtual operand dst_op()		{ return dst; }$/;"	f	class:instruction
dt	/cad2/ece540s/basesuif-1.1.2/include/suif/annote.h	/^    void *dt;$/;"	m	class:annote
dt_indep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^                      dt_indep, $/;"	e	enum:deptest_result
dt_no_common_nest	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^                      dt_no_common_nest, $/;"	e	enum:deptest_result
dt_none	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^enum deptest_result { dt_none, $/;"	e	enum:deptest_result
dt_ok	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^                      dt_ok, $/;"	e	enum:deptest_result
dt_too_messy	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^                      dt_too_messy };$/;"	e	enum:deptest_result
dv	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^    dvlist * dv;$/;"	m	class:dependence_test
dv	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    distance_vector *dv;$/;"	m	struct:dvlist_e
dv	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	distance_vector *dv;$/;"	m	struct:dvlist_e
dv	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	distance_vector *dv;$/;"	m	struct:dvlist_e
dvlist	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    dvlist(){set_dep();}$/;"	f	class:dvlist
dvlist	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^class dvlist: public glist {$/;"	c
dvlist	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^        dvlist(){set_dep();}$/;"	f	class:dvlist
dvlist	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^class dvlist: public glist {$/;"	c
dvlist	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^        dvlist(){set_dep();}$/;"	f	class:dvlist
dvlist	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^class dvlist: public glist {$/;"	c
dvlist_e	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    dvlist_e(distance_vector *dd): glist_e()$/;"	f	struct:dvlist_e
dvlist_e	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^struct dvlist_e: public glist_e {$/;"	s
dvlist_e	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	dvlist_e(distance_vector *dd): glist_e(0)$/;"	f	struct:dvlist_e
dvlist_e	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^struct dvlist_e: public glist_e {$/;"	s
dvlist_e	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	dvlist_e(distance_vector *dd): glist_e(0)$/;"	f	struct:dvlist_e
dvlist_e	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^struct dvlist_e: public glist_e {$/;"	s
dvlist_iter	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^	dvlist_iter(dvlist *dv): glist_iter((glist *)dv) {}$/;"	f	struct:dvlist_iter
dvlist_iter	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^struct dvlist_iter: public glist_iter {$/;"	s
dvlist_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	dvlist_iter(dvlist *dv): glist_iter((glist *)dv) {}$/;"	f	struct:dvlist_iter
dvlist_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^struct dvlist_iter: public glist_iter {$/;"	s
dvlist_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	dvlist_iter(dvlist *dv): glist_iter((glist *)dv) {}$/;"	f	struct:dvlist_iter
dvlist_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^struct dvlist_iter: public glist_iter {$/;"	s
e	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    int e, w;$/;"	m	class:bit_set_iter
e	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    int e, w;$/;"	m	class:bit_set_iter
e	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    const name_table_entry & e(int i) const     { assert((i>=1)&&(i<sz));$/;"	f	class:name_table
edges	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFGnode_xarray edges;$/;"	m	class:CFG_1
edges_computed	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int edges_computed;$/;"	m	class:CFG_1
elaboration	/cad2/ece540s/basesuif-1.1.2/include/flow/nextinstr.h	/^    char *elaboration;$/;"	m	class:macro_status
elem_size	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned elem_size()		{ return elemsz; }$/;"	f	class:in_array
elem_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node *elem_type()		{ return elemt; }$/;"	f	class:array_type
elems	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    fract_matrix elems;      \/\/ The matrix itself $/;"	m	class:matrix
elemsz	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    int elemsz, dims;$/;"	m	class:in_array
elemsz	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned elemsz, dms;$/;"	m	class:in_array
elemt	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node *elemt;$/;"	m	class:array_type
els	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *els;$/;"	m	class:tree_if
else_part	/cad2/ece540s/basesuif-1.1.2/include/flow/astif.h	/^    ast_node_list *else_part;		\/* cannot be NULL *\/$/;"	m	class:ast_node_if
else_part	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *else_part()		{ return els; }$/;"	f	class:tree_if
elselabel	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	247;"	d
elt	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    fract &elt(int r, int c)$/;"	f	class:fract_matrix
elt	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    fract &elt(int i) { return (*this)[i]; }$/;"	f	class:fract_vector
elt	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    fract &elt(int r, int c)  { return elems.elt(r,c); }$/;"	f	class:matrix
elts	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_list elts;	        \/\/ access vector itself (for induction vars)$/;"	m	class:access_vector
elts	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_list elts;	\/\/ access vector itself (for induction vars)$/;"	m	class:access_vector
elts	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_list elts;	\/\/ access vector itself (for induction vars)$/;"	m	class:access_vector
enamep	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	Namep enamep;			\/* External name *\/$/;"	m	struct:Entrypoint
end	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^    int start, end;$/;"	m	class:Header_info
end	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^    int start, end;$/;"	m	class:Header_info
end	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^    int start, end;$/;"	m	class:Header_info
enda	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    annote_list enda;$/;"	m	class:ast_node_for
endlabel	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	246;"	d
enter	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e * enter(alist_e *e)		{ return (alist_e *)glist::push(e); }$/;"	f	class:alist
enter	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e * enter(alist_e *e)		{ return (alist_e *)glist::push(e); }$/;"	f	class:amtflist
enter	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e * enter(void *x, void *y)	{ return (alist_e *)$/;"	f	class:alist
enter	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e * enter(void *x, void *y)	{ return (alist_e *)$/;"	f	class:amtflist
enter	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    void enter(path_base *c)		{ c->siblings = children;$/;"	f	class:path_base
enter	/cad2/ece540s/basesuif-1.1.2/include/hawg/pblist.h	/^    void enter(path_base *x, path_base *y) { alist::enter((void*)x, (void*)y); }$/;"	f	class:pb_alist
enter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual int enter(CFGnode *)$/;"	f	class:CFG_1_reversed
enter	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *enter(void *k, void *i)	{ return push(new alist_e(k, i)); }$/;"	f	class:alist
enter	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *enter(void *k, void *i)	{ return push(new alist_e(k, i)); }$/;"	f	class:amtflist
entnextp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Entrypoint *entnextp;$/;"	m	struct:Entrypoint	typeref:struct:Entrypoint::Entrypoint
entrylabel	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	long entrylabel;$/;"	m	struct:Entrypoint
entryname	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Extsym *entryname;	\/* Name of this ENTRY *\/$/;"	m	struct:Entrypoint	typeref:struct:Entrypoint::Extsym
enum_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    enum_type()				{ }$/;"	f	class:enum_type
enum_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^class enum_type : public base_type {$/;"	c
eoi	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    boolean eoi;$/;"	m	class:if_istream
eos	/cad2/ece540s/basesuif-1.1.2/include/general/wseq.h	/^    int *eos;$/;"	m	class:flat_seq
equations	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^  n_Seqn *equations;$/;"	m	class:Sprob_switches
equations	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^  n_Seqn *equations;$/;"	m	class:Sprob_switches
equations	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^  n_Seqn *equations;$/;"	m	class:Sprob_switches
equivs	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Eqvchain *equivs;	\/* List (Eqvchain) of primblocks$/;"	m	struct:Equivblock	typeref:struct:Equivblock::Eqvchain
eqvbottom	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	long int eqvbottom;$/;"	m	struct:Equivblock
eqvinit	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	flag eqvinit;$/;"	m	struct:Equivblock
eqvitem	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		} eqvitem;$/;"	m	struct:Eqvchain	typeref:union:Eqvchain::__anon12
eqvleng	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	738;"	d
eqvlhs	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		struct Primblock *eqvlhs;$/;"	m	union:Eqvchain::__anon12	typeref:struct:Eqvchain::__anon12::Primblock
eqvname	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		Namep eqvname;$/;"	m	union:Eqvchain::__anon12
eqvnextp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Eqvchain *eqvnextp;$/;"	m	struct:Eqvchain	typeref:struct:Eqvchain::Eqvchain
eqvoffset	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	long int eqvoffset;$/;"	m	struct:Eqvchain
eqvtop	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	long int eqvtop;$/;"	m	struct:Equivblock
eqvtype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int eqvtype;$/;"	m	struct:Equivblock
error_file	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    static char *      error_file;$/;"	m	class:builder_base
error_level	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    static error_type  error_level;$/;"	m	class:builder_base
error_line	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    static int         error_line;$/;"	m	class:builder_base
error_type	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum error_type { et_none, et_type,$/;"	g
errorblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Errorblock errorblock;$/;"	m	union:Expression	typeref:struct:Expression::Errorblock
et_gen	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  et_suif, et_gen };$/;"	e	enum:error_type
et_grammer	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  et_grammer, et_oper,$/;"	e	enum:error_type
et_none	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum error_type { et_none, et_type,$/;"	e	enum:error_type
et_oper	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  et_grammer, et_oper,$/;"	e	enum:error_type
et_suif	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  et_suif, et_gen };$/;"	e	enum:error_type
et_type	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum error_type { et_none, et_type,$/;"	e	enum:error_type
eval_status	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^  } eval_status;$/;"	t	typeref:enum:__anon38
ex	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int ex;$/;"	m	class:dependency_test
ex	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int ex;$/;"	m	class:dependency_test
ex	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int ex;$/;"	m	class:dependency_test
exact	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    exact() { return ex; }$/;"	f	class:dependency_test
exact	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	exact() { indep = 0; flow=0; write_used=0;}$/;"	f	class:exact
exact	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^class exact {$/;"	c
exact	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	exact() { return ex; }$/;"	f	class:dependency_test
exact	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	exact() { indep = 0; flow=0; write_used=0;}$/;"	f	class:exact
exact	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^class exact {$/;"	c
exact	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	exact() { return ex; }$/;"	f	class:dependency_test
exact	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	exact() { indep = 0; flow=0; write_used=0;}$/;"	f	class:exact
exact	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^class exact {$/;"	c
excess_num	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    int excess_num;                             \/\/ # of not merged (end)$/;"	m	class:named_sc_merge
exchar	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned exchar:1;	\/* True if COMMON block only has char vars *\/$/;"	m	struct:Extsym
exec_program	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    void exec_program()			{ while (read_proc()) proc_process(); }$/;"	f	class:proc_iter
execute	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    void execute()			{ dont_delete = FALSE; exec_program(); }$/;"	f	class:proc_iter
expand	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  void expand(int nsz)$/;"	f	class:Parameterized_x_array0
expptr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^typedef union Expression *expptr, *tagptr;$/;"	t	typeref:union:Expression
expr	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & expr(instruction * asn) { block * bk = bld_expr(asn);$/;"	f	class:block
expr_map	/cad2/ece540s/basesuif-1.1.2/include/expr_map.h	/^class expr_map$/;"	c
expr_map	/cad2/ece540s/basesuif-1.1.2/include/useful/expr_map.h	/^class expr_map$/;"	c
exprblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Exprblock exprblock;$/;"	m	union:Expression	typeref:struct:Expression::Exprblock
ext	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    boolean ext;			\/* are global symbols external? *\/$/;"	m	class:sym_node
extend	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  int extend(TYPE e)$/;"	f	class:Parameterized_x_array0
extern	/cad2/ece540s/basesuif-1.1.2/include/suif/annote.h	186;"	d
extern	/cad2/ece540s/basesuif-1.1.2/include/suif/annote.h	91;"	d
external	/cad2/ece540s/basesuif-1.1.2/include/flow/storinfo.h	/^    boolean external;$/;"	m	class:storage_info
extinit	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	chainp extinit;		\/* List of the identifiers in a Block$/;"	m	struct:Extsym
extleng	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	ftnint extleng;$/;"	m	struct:Extsym
extp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	chainp extp;		\/* List of identifiers in the common$/;"	m	struct:Extsym
extra	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    void *extra;			\/* unused but available if necessary *\/$/;"	m	class:ast_node
extra_classes	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol_list extra_classes;$/;"	m	class:SV_dflow
extra_classes	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol_list extra_classes;$/;"	m	class:SV_dflow
extstg	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field extstg;		\/* STG -- should be COMMON, UNKNOWN or EXT$/;"	m	struct:Extsym
f	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    float f;$/;"	m	union:any_type
f1	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned f1:3;$/;"	m	struct:Intrpacked
f2	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned f2:4;$/;"	m	struct:Intrpacked
f3	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned f3:7;$/;"	m	struct:Intrpacked
f4	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned f4:1;$/;"	m	struct:Intrpacked
f_append	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    void f_append(cons_e *e)		{ glist::append(e); }$/;"	f	class:conslist
f_append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    void f_append(cons_e *e)		{ glist::append(e); }$/;"	f	class:conslist
f_append	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void f_append(cons_e *e) { glist::append(e); }$/;"	f	struct:Seqn_conslist
f_append	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void f_append(cons_e *e) { glist::append(e); }$/;"	f	struct:Seqn_conslist
f_append	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void f_append(cons_e *e) { glist::append(e); }$/;"	f	struct:Seqn_conslist
f_istream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^class f_istream: public istream$/;"	c
f_istream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^class f_istream: public istream$/;"	c
f_ostream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^class f_ostream: public ostream$/;"	c
f_ostream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^class f_ostream: public ostream$/;"	c
f_peek	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode_e *f_peek() { return (Snode_e *)glist_iter::peek(); }$/;"	f	struct:Snode_iter
f_peek	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode_e *f_peek() { return (Snode_e *)glist_iter::peek(); }$/;"	f	struct:Snode_iter
f_peek	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode_e *f_peek() { return (Snode_e *)glist_iter::peek(); }$/;"	f	struct:Snode_iter
f_pop	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    void * f_pop(cons_e **e)		{ *e = (cons_e *)glist::pop();$/;"	f	class:conslist
f_pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    void * f_pop(cons_e **e)		{ *e = (cons_e *)glist::pop();$/;"	f	class:conslist
f_pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode_e *f_pop() { return (Snode_e *) glist::pop(); }$/;"	f	class:Snode_list
f_pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	cons_e *f_pop() { return (cons_e *)glist::pop(); }$/;"	f	struct:Seqn_conslist
f_pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode_e *f_pop() { return (Snode_e *) glist::pop(); }$/;"	f	class:Snode_list
f_pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	cons_e *f_pop() { return (cons_e *)glist::pop(); }$/;"	f	struct:Seqn_conslist
f_pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode_e *f_pop() { return (Snode_e *) glist::pop(); }$/;"	f	class:Snode_list
f_pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	cons_e *f_pop() { return (cons_e *)glist::pop(); }$/;"	f	struct:Seqn_conslist
f_push	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    void f_push(cons_e *e)		{ glist::push(e); }$/;"	f	class:conslist
f_push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    void f_push(cons_e *e)		{ glist::push(e); }$/;"	f	class:conslist
f_push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void f_push(cons_e *e) { glist::push(e); }$/;"	f	struct:Seqn_conslist
f_push	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void f_push(cons_e *e) { glist::push(e); }$/;"	f	struct:Seqn_conslist
f_push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void f_push(cons_e *e) { glist::push(e); }$/;"	f	struct:Seqn_conslist
f_step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode_e *f_step() { return (Snode_e *)glist_iter::step(); }$/;"	f	struct:Snode_iter
f_step	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode_e *f_step() { return (Snode_e *)glist_iter::step(); }$/;"	f	struct:Snode_iter
f_step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode_e *f_step() { return (Snode_e *)glist_iter::step(); }$/;"	f	struct:Snode_iter
factored	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    boolean factored;        \/\/ Is the LU decomp current?$/;"	m	class:matrix
false_branch	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    value_tree * false_branch()                 { return fp; }$/;"	f	class:value_tree
fancy	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    int fancy;$/;"	m	class:dep_node_proc_iter
fancy	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    int fancy;$/;"	m	class:dep_node_proc_iter
fancy_access	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    void fancy_access() { fancy = 1; }$/;"	f	class:dep_node_proc_iter
fancy_access	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    void fancy_access() { fancy = 1; }$/;"	f	class:dep_node_proc_iter
fancy_access_vectors	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    int fancy_access_vectors;$/;"	m	struct:dep_proc_annote
fancy_access_vectors	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	int fancy_access_vectors;$/;"	m	struct:dep_node_proc
fancy_access_vectors	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	int fancy_access_vectors;$/;"	m	struct:dep_node_proc
fc_max	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^enum flow_constr{fc_none, fc_max,fc_minmax};$/;"	e	enum:flow_constr
fc_max	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^enum flow_constr{fc_none, fc_max,fc_minmax};$/;"	e	enum:flow_constr
fc_max	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^enum flow_constr{fc_none, fc_max,fc_minmax};$/;"	e	enum:flow_constr
fc_minmax	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^enum flow_constr{fc_none, fc_max,fc_minmax};$/;"	e	enum:flow_constr
fc_minmax	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^enum flow_constr{fc_none, fc_max,fc_minmax};$/;"	e	enum:flow_constr
fc_minmax	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^enum flow_constr{fc_none, fc_max,fc_minmax};$/;"	e	enum:flow_constr
fc_none	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^enum flow_constr{fc_none, fc_max,fc_minmax};$/;"	e	enum:flow_constr
fc_none	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^enum flow_constr{fc_none, fc_max,fc_minmax};$/;"	e	enum:flow_constr
fc_none	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^enum flow_constr{fc_none, fc_max,fc_minmax};$/;"	e	enum:flow_constr
fcharp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr fcharp;			\/* first-char-index-pointer (in$/;"	m	struct:Primblock
fcntl	/cad2/ece540s/basesuif-1.1.2/include/machine_dependent.h	80;"	d
fcntl	/cad2/ece540s/basesuif-1.1.2/include/suif/machine_dependent.h	80;"	d
fcon	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^        float   fcon;$/;"	m	union:block_info::__anon2
fextname	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char *fextname;		\/* Fortran version of external name *\/$/;"	m	struct:Extsym
field	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	Symbol *field;$/;"	m	struct:sc_select
field	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	/^typedef char field;	\/* actually need only 4 bits *\/$/;"	t
field	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char *field;		\/* field name when dereferencing a struct *\/$/;"	m	struct:Addrblock
field	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	Symbol *field;$/;"	m	struct:sc_select
field_list	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    immed_list field_list;$/;"	m	struct:struct_access
field_name	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    char *field_name(unsigned n)	{ check_range(n); return names[n]; }$/;"	f	class:struct_type
field_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node *field_type(unsigned n)	{ check_range(n); return types[n]; }$/;"	f	class:struct_type
fields	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^	char **fields;$/;"	m	struct:io_setup
fields	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^	char *fields[1];$/;"	m	struct:iob_data
file	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    file_set_entry *file()		{ return fse; }$/;"	f	class:proc_sym
file_id	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    int file_id()			{ return the_id; }$/;"	f	class:file_set_entry
file_list	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    file_set_entry_list *file_list()	{ return files; }$/;"	f	class:file_set
file_pos	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    long file_pos;			\/* position in the file's i\/o stream *\/$/;"	m	class:proc_sym
file_set	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^class file_set {$/;"	c
file_set_entry	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^class file_set_entry : public suif_object {$/;"	c
file_symtab	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^class file_symtab : public global_symtab {$/;"	c
filename	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	const char *filename;$/;"	m	struct:String
filename	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	const char *filename;$/;"	m	struct:String
filep	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    FILE * filep()			{ return inst_fp; }$/;"	f	class:if_istream
filep	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    FILE * filep()			{ return inst_fp; }$/;"	f	class:if_ostream
files	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    file_set_entry_list *files;		\/* list of files *\/$/;"	m	class:file_set
fill_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    fill_init_struct(int init_size, int init_data)$/;"	f	class:fill_init_struct
fill_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    fill_init_struct(void) {}$/;"	f	class:fill_init_struct
fill_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^class fill_init_struct : public base_init_struct$/;"	c
filter_away	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq filter_away(constraint & kernal, int sign) { return filter(kernal, sign, -1); }$/;"	f	class:lin_ineq
filter_away	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq filter_away(constraint & kernal, int sign) { return filter(kernal, sign, -1); }$/;"	f	class:lin_ineq
filter_away	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq filter_away(const constraint & kernal, int sign) const$/;"	f	class:lin_ineq
filter_thru	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq filter_thru(constraint & kernal, int sign) { return filter(kernal, sign,  1); }$/;"	f	class:lin_ineq
filter_thru	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq filter_thru(constraint & kernal, int sign) { return filter(kernal, sign,  1); }$/;"	f	class:lin_ineq
filter_thru	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq filter_thru(const constraint & kernal, int sign) const$/;"	f	class:lin_ineq
finalizer	/cad2/ece540s/basesuif-1.1.2/include/suif/initsuif.h	/^    lib_exit_f finalizer;		\/* function to deallocate storage *\/$/;"	m	struct:suif_library
find	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    int find(const immed & v) const          { return const_names().find(v); }$/;"	f	class:named_lin_ineq
find_col	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    int find_col(immed v)                     { return cols().find(v); }$/;"	f	class:named_symcoeff_ineq
find_pln	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    int find_pln(immed v)                     { return planes().find(v); }$/;"	f	class:named_symcoeff_ineq
first	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_e * first() { return head; }$/;"	f	class:access_ineq_list
first	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_vector *first() {return (access_vector *) glist::head();}$/;"	f	class:array_info
first	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_vector *first() {return (access_vector *) head;}$/;"	f	class:array_info
first	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_vector *first() {return (access_vector *) head;}$/;"	f	class:array_info
first	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^    ast_node * first()			{ return head ?$/;"	f	class:astlist
first	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    ast_node * first()			{ return !is_empty() ?$/;"	f	class:ast_node_list
first	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    seek_proc_e * first()		{ return head; }$/;"	f	class:seek_proc
first	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e * first()			{ return (alist_e *)head; }$/;"	f	class:alist
first	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    int first, last;$/;"	m	class:bit_set
first	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^    int first()				{ return head ?$/;"	f	class:intlist
first	/cad2/ece540s/basesuif-1.1.2/include/hawg/annote.h	/^    icon_list_e *first, *last;$/;"	m	class:annote
first	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	/^    instruction * first()		{ return head ?$/;"	f	class:ilist
first	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_e * first() { return head; }$/;"	f	class:access_ineq_list
first	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn *first() { return (Seqn *)head_e; }$/;"	f	struct:Seqn_list
first	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode *first() { return top(); }$/;"	f	class:Snode_list
first	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^    inline PTR_TYPE **first()$/;"	f	class:Parameterized_x_array1
first	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  TYPE *first()$/;"	f	class:Parameterized_x_array0
first	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn *first() { return (Seqn *)head; }$/;"	f	struct:Seqn_list
first	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode *first() { return top(); }$/;"	f	class:Snode_list
first	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn *first() { return (Seqn *)head; }$/;"	f	struct:Seqn_list
first	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode *first() { return top(); }$/;"	f	class:Snode_list
first	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    inline PTR_TYPE **first()$/;"	f	class:Parameterized_x_array1
first	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    int first, last;$/;"	m	class:bit_set
first	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_e * first() { return head; }$/;"	f	class:access_ineq_list
first	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    inline PTR_TYPE **first()$/;"	f	class:Parameterized_x_array1
first_data_defined	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    unsigned char first_data_defined;$/;"	m	class:so_walker
first_nb	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    annote *first_nb, *last_nb;$/;"	m	class:instruction
first_set	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol_list first_set;$/;"	m	class:SV_path
first_set	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol_list first_set;$/;"	m	class:SV_path
first_values	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type first_values[4];$/;"	m	class:so_walker
fixed	/cad2/ece540s/basesuif-1.1.2/include/hawg/stringtable.h	/^    boolean fixed;$/;"	m	class:string_e
flag	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int flag;$/;"	m	class:av_compare_info
flag	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int flag;$/;"	m	class:av_compare_info
flag	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int flag;$/;"	m	class:av_compare_info
flag	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef int flag;$/;"	t
flag	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef short flag;$/;"	t
flag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	/^typedef int flag;$/;"	t
flag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef int flag;$/;"	t
flag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef short flag;$/;"	t
flags	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	/^    int flags;$/;"	m	struct:__anon15
flags	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    int flags;				\/* userdef, etc. *\/$/;"	m	class:sym_node
flat_seq	/cad2/ece540s/basesuif-1.1.2/include/general/wseq.h	/^    flat_seq(int *s, int sz)		{ eos = &s[sz]; wp = s; }$/;"	f	class:flat_seq
flat_seq	/cad2/ece540s/basesuif-1.1.2/include/general/wseq.h	/^class flat_seq : public wseq {$/;"	c
flow	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	int flow;$/;"	m	class:exact
flow	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int flow;$/;"	m	class:exact
flow	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int flow;$/;"	m	class:exact
flow_constr	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^enum flow_constr{fc_none, fc_max,fc_minmax};$/;"	g
flow_constr	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^enum flow_constr{fc_none, fc_max,fc_minmax};$/;"	g
flow_constr	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^enum flow_constr{fc_none, fc_max,fc_minmax};$/;"	g
flow_function	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *flow_function;$/;"	m	class:SV_node
flow_function	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *flow_function;$/;"	m	class:SV_node
flow_map	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *flow_map;$/;"	m	class:SV_dflow
flow_map	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *flow_map;$/;"	m	class:SV_dflow
flush	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    void flush(void *x)			{ ccache[if_cchash(x)] = NULL; }$/;"	f	class:if_ostream
fmred	/cad2/ece540s/basesuif-1.1.2/include/fmred.h	/^class fmred {$/;"	c
fmred	/cad2/ece540s/basesuif-1.1.2/include/math/fmred.h	/^class fmred {$/;"	c
fmred	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fmred.h	/^class fmred {$/;"	c
fmtlabused	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned fmtlabused:1;$/;"	m	struct:Labelblock
fmtstring	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char *fmtstring;	\/* format string *\/$/;"	m	struct:Labelblock
fmul	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^inline int fmul(int a, int b)$/;"	f
fmul	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^inline int fmul(int a, int b)$/;"	f
for_ctxt	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    void for_ctxt(boolean b)                        { inc_for = b; }$/;"	f	class:code_context
fora	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    annote_list fora;$/;"	m	class:ast_node_for
formals	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	Symbol_list formals;$/;"	m	class:CN_function
formals	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Type_list formals;$/;"	m	class:ty_function
formals	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	Symbol_list formals;$/;"	m	class:CN_function
formals	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Type_list formals;$/;"	m	class:ty_function
format	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	/^    char *\/*short_*\/format;$/;"	m	struct:__anon14
format	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    immed_type format;			\/* format tag *\/$/;"	m	struct:simple_immed_struct
format	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    immed_type format;			\/* format tag *\/$/;"	m	struct:simple_immed_struct
format	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    inst_format format()		{ return which_format(opcode()); }$/;"	f	class:instruction
forward_edge_index	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  Int_xarray forward_edge_index;$/;"	m	class:CFG_1
forward_graph	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFG_0 *forward_graph;$/;"	m	class:CFG_0_reversed
forward_graph	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFG_1 *forward_graph;      \/* the sister graph *\/$/;"	m	class:CFG_1_reversed
forward_jumps	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    instruction_list forward_jumps;$/;"	m	struct:label_info
fourier_dep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int fourier_dep;$/;"	m	class:dependency_test
fourier_dep	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int fourier_dep;$/;"	m	class:dependency_test
fourier_dep	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int fourier_dep;$/;"	m	class:dependency_test
fourier_ind	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int fourier_ind;$/;"	m	class:dependency_test
fourier_ind	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int fourier_ind;$/;"	m	class:dependency_test
fourier_ind	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int fourier_ind;$/;"	m	class:dependency_test
fourier_not_ok	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int fourier_not_ok;$/;"	m	class:dependency_test
fourier_not_ok	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int fourier_not_ok;$/;"	m	class:dependency_test
fourier_not_ok	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int fourier_not_ok;$/;"	m	class:dependency_test
fourier_ok	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int fourier_ok;$/;"	m	class:dependency_test
fourier_ok	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int fourier_ok;$/;"	m	class:dependency_test
fourier_ok	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int fourier_ok;$/;"	m	class:dependency_test
fp	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    FILE *fp;$/;"	m	class:f_istream
fp	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    FILE *fp;$/;"	m	class:f_ostream
fp	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    FILE *fp;$/;"	m	class:f_istream
fp	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    FILE *fp;$/;"	m	class:f_ostream
fp	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    FILE *fp;$/;"	m	class:base_stream
fp	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    value_tree * fp;                            \/\/ Branch when cond is false$/;"	m	class:value_tree
fract	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    fract()				{ n = 0; d = 1; }$/;"	f	class:fract
fract	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    fract(const fract &f)		{ n = f.n; d = f.d; reduce(); }$/;"	f	class:fract
fract	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    fract(int nn)			{ n = nn; d = 1; }$/;"	f	class:fract
fract	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    fract(int nn, int dd)		{ n = nn; d = dd; reduce(); }$/;"	f	class:fract
fract	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^class fract {$/;"	c
fract	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    fract()				{ n = 0; d = 1; }$/;"	f	class:fract
fract	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    fract(const fract &f)		{ n = f.n; d = f.d; }$/;"	f	class:fract
fract	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    fract(int nn)			{ n = nn; d = 1; }$/;"	f	class:fract
fract	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    fract(int nn, int dd)		{ n = nn; d = dd; reduce(); }$/;"	f	class:fract
fract	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^class fract {$/;"	c
fract_list	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    fract *fract_list;$/;"	m	class:fract_vector
fract_matrix	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^class fract_matrix {$/;"	c
fract_vector	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^class fract_vector {$/;"	c
frame	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^    storage_manager *frame;$/;"	m	class:procedure_info
free	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    ann_free_f free()			{ return free_f; }$/;"	f	class:struct_annote_def
free_f	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    ann_free_f free_f;$/;"	m	class:struct_annote_def
freeze	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^    void freeze()$/;"	f	class:X_array0
freeze	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  void freeze()$/;"	f	class:Parameterized_x_array0
freeze	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    void freeze()$/;"	f	class:X_array1
freeze	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    void freeze()$/;"	f	class:X_array1
from	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFGnode *from, *to;$/;"	m	class:CFG_1_edge
from	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  Seqn *from,*to;$/;"	m	class:Sedge
from	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn *from,*to;$/;"	m	struct:Sedge
from	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn *from,*to;$/;"	m	struct:Sedge
from	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    cvt_from_imm_f from()		{ return from_f; }$/;"	f	class:struct_annote_def
from_f	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    cvt_from_imm_f from_f;$/;"	m	class:struct_annote_def
frozen	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^    int frozen;$/;"	m	class:X_array0
frozen	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  int frozen;$/;"	m	class:Parameterized_x_array0
frozen	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    int frozen;$/;"	m	class:X_array1
frozen	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    int frozen;$/;"	m	class:X_array1
fse	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    file_set_entry *fse;		\/* file containing this procedure *\/$/;"	m	class:proc_sym
fse	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    file_set_entry *fse()		{ return fset; }$/;"	f	class:file_symtab
fset	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    file_set_entry *fset;		\/* corresponding file_set_entry *\/$/;"	m	class:file_symtab
ftnint	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef int ftnint;$/;"	t
ftnint	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef short ftnint;$/;"	t
ftnint	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	/^typedef long int ftnint;$/;"	t
ftnint	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef int ftnint;$/;"	t
ftnint	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef short ftnint;$/;"	t
ftnlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef int ftnlen;$/;"	t
ftnlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef short ftnlen;$/;"	t
ftnlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef int ftnlen;$/;"	t
ftnlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef short ftnlen;$/;"	t
full	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	boolean full;$/;"	m	class:UD_hash_entry
full	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	boolean full;$/;"	m	class:X_hash_entry
full	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	boolean full;$/;"	m	class:full_hash_entry
full	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	boolean full;$/;"	m	class:UD_hash_entry
full	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	boolean full;$/;"	m	class:X_hash_entry
full	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	boolean full;$/;"	m	class:full_hash_entry
full	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	boolean full;$/;"	m	class:UD_hash_entry
full	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	boolean full;$/;"	m	class:X_hash_entry
full	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	boolean full;$/;"	m	class:full_hash_entry
full_col_rank	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    boolean full_col_rank()      { return (n() == rank()); }$/;"	f	class:matrix
full_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	full_hash_entry() { full = FALSE; next=0;}$/;"	f	class:full_hash_entry
full_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^class full_hash_entry {$/;"	c
full_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	full_hash_entry() { full = FALSE; next=0;}$/;"	f	class:full_hash_entry
full_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^class full_hash_entry {$/;"	c
full_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	full_hash_entry() { full = FALSE; next=0;}$/;"	f	class:full_hash_entry
full_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^class full_hash_entry {$/;"	c
full_hash_table	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^class full_hash_table {$/;"	c
full_hash_table	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^class full_hash_table {$/;"	c
full_hash_table	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^class full_hash_table {$/;"	c
full_row_rank	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    boolean full_row_rank()      { return (m() == rank()); }$/;"	f	class:matrix
func_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    func_type()				{ }$/;"	f	class:func_type
func_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^class func_type : public type_node {$/;"	c
function_collector	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^    annote_eater function_collector;$/;"	m	class:Flow_hooks
fval	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	double fval;			\/* floating-point value *\/$/;"	m	union:simple_immed_struct::__anon48
fval	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	double fval;			\/* floating-point value *\/$/;"	m	union:simple_immed_struct::__anon25
fval	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^	double fval;$/;"	m	union:immed_dataonly::__anon34
fvarname	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char *fvarname;		\/* name in the Fortran source *\/$/;"	m	struct:Nameblock
fvarname	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char *fvarname;$/;"	m	struct:Paramblock
g	/cad2/ece540s/basesuif-1.1.2/include/flow/astproc.h	/^    ast_graph *g;$/;"	m	class:ast_proc
gen	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^    } gen;$/;"	m	struct:gen_tree	typeref:union:gen_tree::__anon3
gen_tree	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^    gen_tree() { par = NULL; gtt = gtt_none; }$/;"	f	struct:gen_tree
gen_tree	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^    gen_tree(gen_tree * p) { par = p; gtt = gtt_none; }$/;"	f	struct:gen_tree
gen_tree	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^struct gen_tree : public builder_base {$/;"	s
gen_tree_type	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^enum gen_tree_type { gtt_none, gtt_sym, gtt_trn, gtt_tnl, gtt_ins};$/;"	g
generator	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^    generator() { }$/;"	f	class:generator
generator	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^class generator : private builder_base {$/;"	c
get_back_pointer	/cad2/ece540s/basesuif-1.1.2/include/suif/ptr_index.h	/^    void *get_back_pointer(si_entry *the_entry)$/;"	f	class:ptr_index
get_back_pointer	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^    void *get_back_pointer(si_entry *the_entry)$/;"	f	class:string_index
get_data	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	dir_array *get_data() { return data; }$/;"	f	struct:dir_list
get_data	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	dir_array *get_data() { return data; }$/;"	f	struct:dir_list
get_data	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	dir_array *get_data() { return data; }$/;"	f	struct:dir_list
get_dv	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^    dvlist * get_dv() { return dv; }$/;"	f	class:dependence_test
get_exclusive_lower	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq get_exclusive_lower(lin_ineq & LEQ, int nloc) { return get_exclusive(LEQ, nloc,  1); }$/;"	f	class:lin_ineq_op
get_exclusive_lower	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq get_exclusive_lower(lin_ineq & LEQ, int nloc) { return get_exclusive(LEQ, nloc,  1); }$/;"	f	class:lin_ineq_op
get_exclusive_lower	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq get_exclusive_lower(const lin_ineq & LEQ, int nloc) const$/;"	f	class:lin_ineq_op
get_exclusive_upper	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq get_exclusive_upper(lin_ineq & LEQ, int nloc) { return get_exclusive(LEQ, nloc, -1); }$/;"	f	class:lin_ineq_op
get_exclusive_upper	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq get_exclusive_upper(lin_ineq & LEQ, int nloc) { return get_exclusive(LEQ, nloc, -1); }$/;"	f	class:lin_ineq_op
get_exclusive_upper	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq get_exclusive_upper(const lin_ineq & LEQ, int nloc) const$/;"	f	class:lin_ineq_op
get_lower	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq get_lower(lin_ineq & LEQ, int nloc) { return get(LEQ, nloc,  1); }$/;"	f	class:lin_ineq_op
get_lower	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq get_lower(lin_ineq & LEQ, int nloc) { return get(LEQ, nloc,  1); }$/;"	f	class:lin_ineq_op
get_lower	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq get_lower(const lin_ineq & LEQ, int nloc) const$/;"	f	class:lin_ineq_op
get_matrix	/cad2/ece540s/basesuif-1.1.2/include/suifmath/vector_space.h	/^    matrix *get_matrix()       { make_matrix(); return col_matrix; }$/;"	f	class:vector_space
get_max_open_files	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    long get_max_open_files(void)	{ return open_max; }$/;"	f	class:file_set
get_node	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual CFGnode *get_node(Node_index i)$/;"	f	class:CFG_1_reversed
get_op	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    static char * get_op(any_oper & ao) { return ao.get(); }$/;"	f	class:builder
get_proc	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    static tree_proc * get_proc()       { return proc; }$/;"	f	class:block
get_proc	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    static tree_proc * get_proc()                         { assert(proc);$/;"	f	class:builder_base
get_stride	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    lin_ineq & get_stride() { return strides; }$/;"	f	class:poly_iterator
get_stride	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    lin_ineq & get_stride() { return strides; }$/;"	f	class:poly_iterator
get_stride	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    lin_ineq & get_stride() { return strides; }$/;"	f	class:poly_iterator
get_subgraph	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual CFG_0 *get_subgraph(CFGnode *)    { assert(0); return NULL; }$/;"	f	class:CFG_1_reversed
get_subgraph	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual CFG_0 *get_subgraph(CFGnode *)  { assert(0); return NULL; }$/;"	f	class:CFG_1
get_upper	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq get_upper(lin_ineq & LEQ, int nloc) { return get(LEQ, nloc, -1); }$/;"	f	class:lin_ineq_op
get_upper	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq get_upper(lin_ineq & LEQ, int nloc) { return get(LEQ, nloc, -1); }$/;"	f	class:lin_ineq_op
get_upper	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq get_upper(const lin_ineq & LEQ, int nloc) const$/;"	f	class:lin_ineq_op
get_y	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    sym_addr get_y() const		{ return *((sym_addr*)&v.yval);}$/;"	f	class:immed
glist	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist()				{ head = tail = NULL; }$/;"	f	class:glist
glist	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^class glist {$/;"	c
glist	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist()				{ head_e = tail_e = NULL; }$/;"	f	class:glist
glist	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^class glist {$/;"	c
glist_e	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist_e()				{ next = NULL; }$/;"	f	class:glist_e
glist_e	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist_e(glist_e *n)			{ next = n; }$/;"	f	class:glist_e
glist_e	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^class glist_e {$/;"	c
glist_e	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_e()				{ next_e = NULL; }$/;"	f	class:glist_e
glist_e	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^class glist_e {$/;"	c
glist_iter	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist_iter()			{ cur = nxt = NULL; }$/;"	f	class:glist_iter
glist_iter	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist_iter(const glist *gl)		{ reset(gl); }$/;"	f	class:glist_iter
glist_iter	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^class glist_iter {$/;"	c
glist_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_iter()			{ cur = nxt = NULL; }$/;"	f	class:glist_iter
glist_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_iter(const glist *gl)		{ reset(gl); }$/;"	f	class:glist_iter
glist_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^class glist_iter {$/;"	c
glob_type	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^typedef enum glob_type { INTRA_FILE, INTER_FILE};$/;"	g
global_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    sym_node_list_iter *global_proc_iter;$/;"	m	class:file_set_entry
global_sym	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^    global_sym,$/;"	e	enum:sym_kinds
global_symtab	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^class global_symtab : public base_symtab {$/;"	c
globals	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    global_symtab *globals()		{ return globs; }$/;"	f	class:file_set
globs	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    global_symtab *globs;		\/* global symbol table *\/$/;"	m	class:file_set
grab_from	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void grab_from(Snode_list *l) { count=l->count;$/;"	f	class:Snode_list
grab_from	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void grab_from(Snode_list *l) { count=l->count;$/;"	f	class:Snode_list
grab_from	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void grab_from(Snode_list *l) { count=l->count;$/;"	f	class:Snode_list
graph	/cad2/ece540s/basesuif-1.1.2/include/flow/astproc.h	/^    i_storage * graph()			{ return g; }$/;"	f	class:ast_proc
graph	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    CFG_0 *graph;$/;"	m	class:Sproblem
graph	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    CFG *graph;$/;"	m	class:Sproblem
graph	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    CFG *graph;$/;"	m	class:Sproblem
group	/cad2/ece540s/basesuif-1.1.2/include/flow/astproc.h	/^    ast_group *group;$/;"	m	class:ast_proc
grow	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  void grow(int nsz)$/;"	f	class:Parameterized_x_array0
gtt	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^    gen_tree_type gtt;$/;"	m	struct:gen_tree
gtt_ins	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^enum gen_tree_type { gtt_none, gtt_sym, gtt_trn, gtt_tnl, gtt_ins};$/;"	e	enum:gen_tree_type
gtt_none	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^enum gen_tree_type { gtt_none, gtt_sym, gtt_trn, gtt_tnl, gtt_ins};$/;"	e	enum:gen_tree_type
gtt_sym	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^enum gen_tree_type { gtt_none, gtt_sym, gtt_trn, gtt_tnl, gtt_ins};$/;"	e	enum:gen_tree_type
gtt_tnl	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^enum gen_tree_type { gtt_none, gtt_sym, gtt_trn, gtt_tnl, gtt_ins};$/;"	e	enum:gen_tree_type
gtt_trn	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^enum gen_tree_type { gtt_none, gtt_sym, gtt_trn, gtt_tnl, gtt_ins};$/;"	e	enum:gen_tree_type
h	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	shortint h;$/;"	m	union:Multitype
h	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	shortint h;$/;"	m	union:Multitype
h_info	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  Header_info *h_info;$/;"	m	class:CFinfo
h_info	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  Header_info *h_info;$/;"	m	class:CFinfo
h_info	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  Header_info *h_info;$/;"	m	class:CFinfo
hard_reg	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^inline if_reg hard_reg(int rg)		{ return if_reg(rk_hard, rg); }$/;"	f
has_eq	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    int has_eq() { return (val == d_eq) || (val == d_le) || $/;"	f	class:distance
has_eq	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    int has_eq() { return (val == d_eq) || (val == d_le) || $/;"	f	class:distance
has_eq	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    int has_eq() { return (val == d_eq) || (val == d_le) || $/;"	f	class:distance
has_paths	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    boolean has_paths()			{ return (phead != NULL); }$/;"	f	class:alias_set
has_registers	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    boolean has_registers()		{ return (ihead != NULL); }$/;"	f	class:alias_set
has_rules	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int has_rules() { return !rules.is_empty(); }$/;"	f	class:SV_dflow
has_rules	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int has_rules() { return !rules.is_empty(); }$/;"	f	class:SV_dflow
has_varargs	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean has_varargs()		{ return vargs; }$/;"	f	class:func_type
hash	/cad2/ece540s/basesuif-1.1.2/include/simple/regmap.h	/^    int hash(int rnum)			{ return rnum % size; }$/;"	f	class:reg_map
hash_chain	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	/^class hash_chain : public mtflist {$/;"	c
hash_chain	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^class hash_chain : public mtflist {$/;"	c
hash_compare	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	/^typedef int (*hash_compare)(hash_e *, hash_e *);$/;"	t
hash_compare	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^typedef boolean (*hash_compare)(hash_e *, hash_e *);$/;"	t
hash_e	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	/^    hash_e() : glist_e(NULL)		{ }$/;"	f	class:hash_e
hash_e	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	/^    hash_e(int s) : glist_e(NULL)	{ signature = s; }$/;"	f	class:hash_e
hash_e	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	/^class hash_e : public glist_e {$/;"	c
hash_e	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^    hash_e() 				{ }$/;"	f	class:hash_e
hash_e	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^    hash_e(unsigned s) 			{ signature = s; }$/;"	f	class:hash_e
hash_e	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^class hash_e : public glist_e {$/;"	c
hash_table	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	/^class hash_table {$/;"	c
hash_table	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^class hash_table {$/;"	c
hash_table_size	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^const int hash_table_size=1024;$/;"	v
hashkey	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    int hashkey() { return integer_row::hashkey(); }$/;"	f	class:constraint
hashkey	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    int hashkey() { return integer_row::hashkey(); }$/;"	f	class:constraint
hashkey	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    int hashkey() const { return integer_row::hashkey(); }$/;"	f	class:constraint
hashval	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int hashval;$/;"	m	struct:Hashentry
hd	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    clist *hd;$/;"	m	class:clist_iter
hdr	/cad2/ece540s/basesuif-1.1.2/include/flow/astif.h	/^    ast_node_list *hdr;$/;"	m	class:ast_node_if
hdr	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *hdr;$/;"	m	class:tree_if
hdr	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    level_elem * hdr;                           \/\/ root of the loop structure$/;"	m	class:named_sc_merge
head	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_e * head;$/;"	m	class:access_ineq_list
head	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    seek_proc_e *head;$/;"	m	class:seek_proc
head	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist_e *head, *tail;$/;"	m	class:glist
head	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_e * head;$/;"	m	class:access_ineq_list
head	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *head()			{ return (alist_e*)mtflist::head(); }$/;"	f	class:amtflist
head	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *head() const		{ return (alist_e *)glist::head(); }$/;"	f	class:alist
head	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^    dlist_e *head() const		{ return (dlist_e*)glist::head(); }$/;"	f	class:dlist
head	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_e *head() const		{ return head_e; }$/;"	f	class:glist
head	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_e * head;$/;"	m	class:access_ineq_list
head_e	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_e *head_e, *tail_e;$/;"	m	class:glist
headblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Headblock headblock;$/;"	m	union:Expression	typeref:struct:Expression::Headblock
header	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *header()		{ return hdr; }$/;"	f	class:tree_if
header_info	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  Header_info *header_info;$/;"	m	class:CFG_0
header_info	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  Header_info *header_info;$/;"	m	class:CFG
header_info	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  Header_info *header_info;$/;"	m	class:CFG
hextoi	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	833;"	d
hi	/cad2/ece540s/basesuif-1.1.2/include/general/xarray.h	/^    int hi;$/;"	m	class:x_array
hi	/cad2/ece540s/basesuif-1.1.2/include/general/xarray.h	/^    int hi;$/;"	m	class:x_array2
hi	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^    int hi;$/;"	m	class:X_array0
hi	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  int hi;$/;"	m	class:Parameterized_x_array0
hi	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    int hi;$/;"	m	class:X_array0
hi	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    int hi;$/;"	m	class:X_array1
hi	/cad2/ece540s/basesuif-1.1.2/include/suif/xarray.h	/^    int hi;$/;"	m	class:x_array
hi	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    int hi;$/;"	m	class:X_array0
hi	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    int hi;$/;"	m	class:X_array1
hi_type	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^    void *hi_type;$/;"	m	class:procedure_info
hi_type	/cad2/ece540s/basesuif-1.1.2/include/flow/reginfo.h	/^    void *hi_type;			\/* hi-level type *\/$/;"	m	class:register_info
hi_type	/cad2/ece540s/basesuif-1.1.2/include/flow/storinfo.h	/^    void *hi_type;$/;"	m	class:storage_info
highpt	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFinfo *highpt;$/;"	m	class:CFinfo
highpt	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Snode *highpt;$/;"	m	class:Seqn
highpt	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Snode *highpt;$/;"	m	class:Seqn
highpt	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Snode *highpt;$/;"	m	class:Seqn
highpt	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  CFinfo *highpt;$/;"	m	class:CFinfo
highpt	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  CFinfo *highpt;$/;"	m	class:CFinfo
hval	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^	type_node *hval;$/;"	m	union:immed_dataonly::__anon34
i	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^    int i;$/;"	m	class:intlist_e
i	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	/^    instruction *i;$/;"	m	class:ilist_e
i	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	integer i;$/;"	m	union:Multitype
i	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	integer i;$/;"	m	union:Multitype
i	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^	instruction *i;$/;"	m	union:operand_dataonly::__anon35
iL	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Strans *iL;$/;"	m	class:Seqn
iL	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Strans *iL;$/;"	m	class:Seqn
iL	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Strans *iL;$/;"	m	class:Seqn
i_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer(const i_integer &initial_value)$/;"	f	class:i_integer
i_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer(int initial_value)$/;"	f	class:i_integer
i_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer(long initial_value)$/;"	f	class:i_integer
i_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer(short initial_value)$/;"	f	class:i_integer
i_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer(signed char initial_value)$/;"	f	class:i_integer
i_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer(string_integer *initial_value)$/;"	f	class:i_integer
i_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer(unsigned char initial_value)$/;"	f	class:i_integer
i_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer(unsigned int initial_value)$/;"	f	class:i_integer
i_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer(unsigned long initial_value)$/;"	f	class:i_integer
i_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer(unsigned short initial_value)$/;"	f	class:i_integer
i_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer(void)  { the_tag = IIT_UNDETERMINED; }$/;"	f	class:i_integer
i_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^class i_integer$/;"	c
i_integer_tag	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^enum i_integer_tag$/;"	g
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(const char *initial_string, int base = 10)$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(const i_integer &initial_numerator,$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(const i_integer &initial_value)  { set_integer(initial_value); }$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(const i_rational &initial_value)$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(int initial_value)  { set_integer(initial_value); }$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(long initial_value)  { set_integer(initial_value); }$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(short initial_value)  { set_integer(initial_value); }$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(signed char initial_value)  { set_integer(initial_value); }$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(unsigned char initial_value)  { set_integer(initial_value); }$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(unsigned int initial_value)  { set_integer(initial_value); }$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(unsigned long initial_value)  { set_integer(initial_value); }$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(unsigned short initial_value)  { set_integer(initial_value); }$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational(void) : the_denominator(1) { }$/;"	f	class:i_rational
i_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^class i_rational$/;"	c
i_storage	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^class i_storage {$/;"	c
ic_bottom	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    ic_bottom = 'b'$/;"	e	enum:icon_discriminators
ic_int	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    ic_int = 'i',$/;"	e	enum:icon_discriminators
ic_path	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    ic_path = 'p',$/;"	e	enum:icon_discriminators
ic_register	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    ic_register = 'r',$/;"	e	enum:icon_discriminators
ic_string	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    ic_string = 's',$/;"	e	enum:icon_discriminators
ic_type	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    ic_type = 't',$/;"	e	enum:icon_discriminators
iciend	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	flag iciend;$/;"	m	struct:__anon43
iciend	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	flag iciend;$/;"	m	struct:__anon19
icierr	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^{	flag icierr;$/;"	m	struct:__anon43
icierr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^{	flag icierr;$/;"	m	struct:__anon19
icifmt	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *icifmt;$/;"	m	struct:__anon43
icifmt	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *icifmt;$/;"	m	struct:__anon19
icilist	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^} icilist;$/;"	t	typeref:struct:__anon43
icilist	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^} icilist;$/;"	t	typeref:struct:__anon19
icirlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint icirlen;$/;"	m	struct:__anon43
icirlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint icirlen;$/;"	m	struct:__anon19
icirnum	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint icirnum;$/;"	m	struct:__anon43
icirnum	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint icirnum;$/;"	m	struct:__anon19
iciunit	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *iciunit;$/;"	m	struct:__anon43
iciunit	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *iciunit;$/;"	m	struct:__anon19
icon	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^        int     icon;$/;"	m	union:block_info::__anon2
icon	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    icon()				{ discriminator = ic_bottom; }$/;"	f	class:icon
icon	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    icon(if_istream *is)		{ is->read(this); }$/;"	f	class:icon
icon	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^class icon {$/;"	c
icon_discriminators	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^enum icon_discriminators {$/;"	g
icon_list_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    icon_list_e(icon i)			{ next = NULL; *(icon *)this = i; }$/;"	f	class:icon_list_e
icon_list_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    icon_list_e(icon i, icon_list_e *n)	{ next = n; *(icon *)this = i; }$/;"	f	class:icon_list_e
icon_list_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^class icon_list_e : public icon {$/;"	c
icon_rseq	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon_seq.h	/^    icon_rseq(annote *ap)		{ a = ap; }$/;"	f	class:icon_rseq
icon_rseq	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon_seq.h	/^class icon_rseq : public wseq {$/;"	c
icon_wseq	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon_seq.h	/^    icon_wseq(annote *ap)		{ a = ap; }$/;"	f	class:icon_wseq
icon_wseq	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon_seq.h	/^class icon_wseq : public wseq {$/;"	c
id	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	Symbol *id;$/;"	m	struct:sc_id
id	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	Symbol *id;$/;"	m	struct:sc_id
id	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    unsigned id;			\/* identifier used for i\/o *\/$/;"	m	class:sym_node
id	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    unsigned id;			\/* identifier used for i\/o *\/$/;"	m	class:type_node
ident	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^        void ident() { assert(mm == nn); ident(mm); }$/;"	f	class:integer_matrix
ident	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^        void ident() { assert(mm == nn); ident(mm); }$/;"	f	class:integer_matrix
ident	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	    char ident[IDENT_LEN + 1];	\/* C string form of identifier *\/$/;"	m	union:Addrblock::__anon9
ident	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    void ident()                 { assert(rows == cols); ident(rows); }$/;"	f	class:fract_matrix
ident	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^        void ident() { assert(mm == nn); ident(mm); }$/;"	f	class:integer_matrix
ident	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    void ident()               { assert(m() == n()); ident(m()); }   $/;"	f	class:matrix
identical	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int identical() {return (flag&31) == 31;}$/;"	f	class:av_compare_info
identical	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int identical() {return (flag&31) == 31;}$/;"	f	class:av_compare_info
identical	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int identical() {return (flag&31) == 31;}$/;"	f	class:av_compare_info
identical_excluding_const	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int identical_excluding_const() {return (flag&15) == 15;}$/;"	f	class:av_compare_info
identical_excluding_const	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int identical_excluding_const() {return (flag&15) == 15;}$/;"	f	class:av_compare_info
identical_excluding_const	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int identical_excluding_const() {return (flag&15) == 15;}$/;"	f	class:av_compare_info
identity_function	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *identity_function;$/;"	m	class:SV_dflow
identity_function	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *identity_function;$/;"	m	class:SV_dflow
if_cchash	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^inline int if_cchash(void *x)$/;"	f
if_ctxt	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    void if_ctxt(boolean  b)                        { inc_if = b; }$/;"	f	class:code_context
if_istream	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    if_istream()			{ }$/;"	f	class:if_istream
if_istream	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    if_istream(if_istream &)		{ assert(FALSE); }$/;"	f	class:if_istream
if_istream	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^class if_istream {$/;"	c
if_ops	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^enum if_ops {$/;"	g
if_ops	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^enum if_ops {$/;"	g
if_ostream	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    if_ostream()			{ }$/;"	f	class:if_ostream
if_ostream	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    if_ostream(if_ostream &)		{ assert(FALSE); }$/;"	f	class:if_ostream
if_ostream	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^class if_ostream {$/;"	c
if_reg	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    if_reg()				{ }$/;"	f	class:if_reg
if_reg	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    if_reg(int k, int r)		{ reg_no = r + reg_bases[k]; }$/;"	f	class:if_reg
if_reg	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    if_reg(int r)			{ reg_no = r; }$/;"	f	class:if_reg
if_reg	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^class if_reg {$/;"	c
if_ristream	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^class if_ristream : public if_istream {$/;"	c
if_rostream	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^class if_rostream : public if_ostream {$/;"	c
if_type	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^class if_type {$/;"	c
ihead	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    int_e *ihead;$/;"	m	class:alias_set
ilist	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	/^    ilist()				{ }$/;"	f	class:ilist
ilist	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	/^class ilist : public glist {$/;"	c
ilist_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	/^    ilist_e(instruction *ip) : glist_e(NULL)	{ i = ip; }$/;"	f	class:ilist_e
ilist_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	/^class ilist_e : public glist_e {$/;"	c
ilist_iter	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	/^    ilist_iter(ilist *il)		{ reset(il); }$/;"	f	class:ilist_iter
ilist_iter	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	/^class ilist_iter : public glist_iter {$/;"	c
im_extended_float	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    im_extended_float = 'g',		\/* extended precision float *\/$/;"	e	enum:immed_kinds
im_extended_int	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    im_extended_int = 'l',		\/* extended precision integer *\/$/;"	e	enum:immed_kinds
im_float	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    im_float = 'f',			\/* float *\/$/;"	e	enum:immed_kinds
im_instr	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    im_instr = 'I',			\/* instruction *\/$/;"	e	enum:immed_kinds
im_int	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    im_int = 'i',			\/* integer *\/$/;"	e	enum:immed_kinds
im_op	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    im_op = 'o',			\/* operand *\/$/;"	e	enum:immed_kinds
im_string	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    im_string = 's',			\/* string *\/$/;"	e	enum:immed_kinds
im_symbol	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    im_symbol = 'p',			\/* symbolic address *\/$/;"	e	enum:immed_kinds
im_type	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    im_type = 'h',			\/* high-level type *\/$/;"	e	enum:immed_kinds
im_undef	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    im_undef = 'u'			\/* undefined *\/$/;"	e	enum:immed_kinds
immed	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed()				{ knd = im_undef; }$/;"	f	class:immed
immed	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed(char *s)			{ knd = im_string;$/;"	f	class:immed
immed	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed(const immed_dataonly &ic)	{ knd = ic.knd; v = ic.v; }$/;"	f	class:immed
immed	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed(double f)			{ knd = im_float; v.fval = f; }$/;"	f	class:immed
immed	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed(immed_kinds this_kind, char *value)$/;"	f	class:immed
immed	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed(instruction *instr)		{ knd = im_instr; v.instrval = instr; }$/;"	f	class:immed
immed	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed(int i)			{ knd = im_int; v.ival = i; }$/;"	f	class:immed
immed	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed(operand op)			{ knd = im_op; v.opval = op; }$/;"	f	class:immed
immed	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed(sym_addr sa)			{ knd = im_symbol; set_y(sa); }$/;"	f	class:immed
immed	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed(type_node *h)			{ knd = im_type; v.hval = h; }$/;"	f	class:immed
immed	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^class immed : public immed_dataonly {$/;"	c
immed_dataonly	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^class immed_dataonly {$/;"	c
immed_kinds	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^enum immed_kinds {$/;"	g
immed_list	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed_list()  { }$/;"	f	class:immed_list
immed_list	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed_list(immed i) : immed_list_base(i)  { }$/;"	f	class:immed_list
immed_list	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed_list(immed i1, immed i2) : immed_list_base(i1, i2)  { }$/;"	f	class:immed_list
immed_list	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed_list(immed i1, immed i2, immed i3) : immed_list_base(i1, i2, i3)  { }$/;"	f	class:immed_list
immed_list	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^class immed_list : public immed_list_base {$/;"	c
immed_type	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^} immed_type;$/;"	t	typeref:enum:immed_type_enum
immed_type	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^} immed_type;$/;"	t	typeref:enum:immed_type_enum
immed_type_enum	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^typedef enum immed_type_enum {$/;"	g
immed_type_enum	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^typedef enum immed_type_enum {$/;"	g
impdiff	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	ftnint impdiff;$/;"	m	struct:Impldoblock
impdospec	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	chainp impdospec;$/;"	m	struct:Impldoblock
implb	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr implb;$/;"	m	struct:Impldoblock
impldoblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Impldoblock impldoblock;$/;"	m	union:Expression	typeref:struct:Expression::Impldoblock
implim	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	ftnint implim;$/;"	m	struct:Impldoblock
impstep	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr impstep;$/;"	m	struct:Impldoblock
impub	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr impub;$/;"	m	struct:Impldoblock
in_array	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_array()				{ opcode = io_array; }$/;"	f	class:in_array
in_array	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_array(if_istream *is)		{ is->read(this); }$/;"	f	class:in_array
in_array	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^class in_array : public instruction {$/;"	c
in_array	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^class in_array : public instruction {$/;"	c
in_bb	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    signed char in_bb;$/;"	m	class:Sproblem
in_bb	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    char in_bb;$/;"	m	class:Sproblem
in_bb	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    char in_bb;$/;"	m	class:Sproblem
in_bj	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_bj()$/;"	f	class:in_bj
in_bj	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_bj(if_istream *is)		{ is->read(this); }$/;"	f	class:in_bj
in_bj	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_bj(if_ops o, if_type t, if_reg s, if_reg l) : instruction(o, t)$/;"	f	class:in_bj
in_bj	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_bj(in_bj *oi) : instruction(oi)$/;"	f	class:in_bj
in_bj	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^class in_bj : public instruction {$/;"	c
in_bj	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^class in_bj : public instruction {$/;"	c
in_cal	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_cal()				{ opcode = io_cal; }$/;"	f	class:in_cal
in_cal	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_cal(if_istream *is)		{ is->read(this); }$/;"	f	class:in_cal
in_cal	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_cal(if_reg lab, if_type t, if_reg res, int n, if_reg *a)$/;"	f	class:in_cal
in_cal	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^class in_cal : public instruction {$/;"	c
in_cal	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^class in_cal : public instruction {$/;"	c
in_cvt	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_cvt()				{ opcode = io_cvt; }$/;"	f	class:in_cvt
in_cvt	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_cvt(if_istream *is)		{ is->read(this); }$/;"	f	class:in_cvt
in_cvt	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_cvt(if_type dt, if_type st, if_reg d, if_reg s) : instruction(io_cvt, dt)$/;"	f	class:in_cvt
in_cvt	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_cvt(in_cvt *oi) : instruction(oi)$/;"	f	class:in_cvt
in_cvt	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^class in_cvt : public instruction {$/;"	c
in_data	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_data()				{ opcode = io_data; }$/;"	f	class:in_data
in_data	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_data(if_istream *is)		{ is->read(this); }$/;"	f	class:in_data
in_data	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_data(in_data *oi) : instruction(oi)$/;"	f	class:in_data
in_data	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_data(path l, int s, int a) : instruction(io_data, if_type(itc_void, 0))$/;"	f	class:in_data
in_data	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^class in_data : public instruction {$/;"	c
in_gen	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    in_gen(char *o, type_node *t, operand d, operand s0) :$/;"	f	class:in_gen
in_gen	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    in_gen(char *o, type_node *t, operand d, operand s0, operand s1) :$/;"	f	class:in_gen
in_gen	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    in_gen(char *o, type_node *t, operand d, operand s0, operand s1,$/;"	f	class:in_gen
in_gen	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    in_gen(char *o, type_node *t, operand d, unsigned n, operand s0,$/;"	f	class:in_gen
in_gen	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^class in_gen : public instruction {$/;"	c
in_lab	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_lab()				{ opcode = io_lab; }$/;"	f	class:in_lab
in_lab	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_lab(if_istream *is)		{ is->read(this); }$/;"	f	class:in_lab
in_lab	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_lab(in_lab *oi) : instruction(oi) { lab = oi->lab; }$/;"	f	class:in_lab
in_lab	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_lab(path p) : instruction(io_lab, if_type(itc_void, 0)) { lab = p; }$/;"	f	class:in_lab
in_lab	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^class in_lab : public instruction {$/;"	c
in_lab	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^class in_lab : public instruction {$/;"	c
in_ldc	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_ldc()				{ opcode = io_ldc; }$/;"	f	class:in_ldc
in_ldc	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_ldc(if_istream *is)		{ is->read(this); }$/;"	f	class:in_ldc
in_ldc	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_ldc(if_type t, if_reg d, const icon &v) : instruction(io_ldc, t)$/;"	f	class:in_ldc
in_ldc	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_ldc(in_ldc *oi) : instruction(oi)$/;"	f	class:in_ldc
in_ldc	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^class in_ldc : public instruction {$/;"	c
in_ldc	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^class in_ldc : public instruction {$/;"	c
in_mbr	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_mbr()				{ opcode = io_mbr; }$/;"	f	class:in_mbr
in_mbr	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_mbr(if_istream *is)		{ is->read(this); }$/;"	f	class:in_mbr
in_mbr	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^class in_mbr : public instruction {$/;"	c
in_mbr	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^class in_mbr : public instruction {$/;"	c
in_mrk	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_mrk()				{ opcode = io_mrk; }$/;"	f	class:in_mrk
in_mrk	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_mrk(if_istream *is)		{ is->read(this); }$/;"	f	class:in_mrk
in_mrk	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_mrk(in_mrk *oi) : instruction(oi) { mtype = oi->mtype; }$/;"	f	class:in_mrk
in_mrk	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_mrk(int m) : instruction(io_mrk, if_type(itc_void, 0)) { mtype = m; }$/;"	f	class:in_mrk
in_mrk	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^class in_mrk : public instruction {$/;"	c
in_name	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    char *in_name()			{ return (is ? is->name() : NULL); }$/;"	f	class:file_set_entry
in_rrr	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_rrr() : instruction(io_nop, if_type(itc_void, 0))$/;"	f	class:in_rrr
in_rrr	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_rrr(if_istream *is)		{ is->read(this); }$/;"	f	class:in_rrr
in_rrr	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_rrr(if_ops o, if_type t, if_reg d, if_reg s) : instruction(o, t)$/;"	f	class:in_rrr
in_rrr	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_rrr(if_ops o, if_type t, if_reg d, if_reg s1, if_reg s2)$/;"	f	class:in_rrr
in_rrr	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_rrr(if_type t, if_reg s) : instruction(io_ret, t)$/;"	f	class:in_rrr
in_rrr	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    in_rrr(in_rrr *oi) : instruction(oi)$/;"	f	class:in_rrr
in_rrr	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^class in_rrr : public instruction {$/;"	c
in_rrr	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^class in_rrr : public instruction {$/;"	c
in_stream	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    in_stream(char *n) : base_stream(n)$/;"	f	class:in_stream
in_stream	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^class in_stream : public base_stream {$/;"	c
inacc	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char	*inacc;$/;"	m	struct:__anon47
inacc	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char	*inacc;$/;"	m	struct:__anon23
inacclen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnlen	inacclen;$/;"	m	struct:__anon47
inacclen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnlen	inacclen;$/;"	m	struct:__anon23
inblank	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char	*inblank;$/;"	m	struct:__anon47
inblank	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char	*inblank;$/;"	m	struct:__anon23
inblanklen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnlen	inblanklen;$/;"	m	struct:__anon47
inblanklen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnlen	inblanklen;$/;"	m	struct:__anon23
inc_all_custom	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    boolean inc_all_custom;$/;"	m	class:code_context
inc_for	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    boolean inc_for;$/;"	m	class:code_context
inc_if	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    boolean inc_if;$/;"	m	class:code_context
ind	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    short ind;	\/\/ is there no dependency$/;"	m	struct:distance_vector
ind	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    short ind;$/;"	m	class:dvlist
ind	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	short ind;	\/\/ is there no dependency$/;"	m	struct:distance_vector
ind	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    short ind;$/;"	m	class:dvlist
ind	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	short ind;	\/\/ is there no dependency$/;"	m	struct:distance_vector
ind	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    short ind;$/;"	m	class:dvlist
ind	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    var_sym *ind;$/;"	m	class:tree_for
ind	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    name_table_entry ind;                       \/\/ loop index$/;"	m	class:level_elem
indent_level	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^  int indent_level;$/;"	m	struct:ostream
indent_level	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^  int indent_level;$/;"	m	struct:ostream
indent_suppress	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^  int indent_suppress;$/;"	m	struct:ostream
indent_suppress	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^  int indent_suppress;$/;"	m	struct:ostream
indent_width	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^  int indent_width;$/;"	m	struct:ostream
indent_width	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^  int indent_width;$/;"	m	struct:ostream
indep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    indep() { return ind; }$/;"	f	struct:distance_vector
indep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    int indep() { return ind; }$/;"	f	class:dvlist
indep	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	boolean indep;$/;"	m	class:X_hash_entry
indep	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	boolean indep;$/;"	m	class:full_hash_entry
indep	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	int indep;$/;"	m	class:exact
indep	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	indep() { return ind; }$/;"	f	struct:distance_vector
indep	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	int indep() { return ind; }$/;"	f	class:dvlist
indep	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	boolean indep;$/;"	m	class:X_hash_entry
indep	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	boolean indep;$/;"	m	class:full_hash_entry
indep	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int indep;$/;"	m	class:exact
indep	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	indep() { return ind; }$/;"	f	struct:distance_vector
indep	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	int indep() { return ind; }$/;"	f	class:dvlist
indep	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	boolean indep;$/;"	m	class:X_hash_entry
indep	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	boolean indep;$/;"	m	class:full_hash_entry
indep	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int indep;$/;"	m	class:exact
indep	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    int indep;$/;"	m	class:lin_ineq_difference_iter
independent	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^enum answer{independent, dependent, unsure};$/;"	e	enum:answer
independent	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^enum answer{independent, dependent, unsure};$/;"	e	enum:answer
independent	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^enum answer{independent, dependent, unsure};$/;"	e	enum:answer
index	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    icon index;				\/* pseudo reg or path *\/$/;"	m	class:ast_node_for
index	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    long index()			{ return pos; }$/;"	f	class:seek_proc_e
index	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int index;$/;"	m	class:SV_node
index	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int index;$/;"	m	class:SV_node
index	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand index(unsigned n)		{ check_range(n); return indxs[n]; }$/;"	f	class:in_array
index	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    var_sym *index()			{ return ind; }$/;"	f	class:tree_for
index	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    name_table_entry & index()                  { return ind; }$/;"	f	class:level_elem
index_well_behaved	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    boolean index_well_behaved;$/;"	m	class:ast_node_for
indir	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char 	*indir;$/;"	m	struct:__anon47
indir	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char 	*indir;$/;"	m	struct:__anon23
indirlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnlen	indirlen;$/;"	m	struct:__anon47
indirlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnlen	indirlen;$/;"	m	struct:__anon23
indxs	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg *indxs, *uppers;$/;"	m	class:in_array
indxs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand *indxs, *uppers;$/;"	m	class:in_array
ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    named_symcoeff_ineq ineq;$/;"	m	struct:code_context_annote
ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    named_symcoeff_ineq ineq;                   \/\/ bounds of the current loop$/;"	m	class:level_elem
ineqs	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_list ineqs;$/;"	m	class:priv_access
ineqs	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_list ineqs;$/;"	m	class:priv_access
ineqs	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_list ineqs;$/;"	m	class:priv_access
ineqs	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    lin_ineq   & ineqs()                        { return lq; }$/;"	f	class:named_lin_ineq
inerr	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^{	flag inerr;$/;"	m	struct:__anon47
inerr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^{	flag inerr;$/;"	m	struct:__anon23
inex	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint	*inex;	\/*parameters in standard's order*\/$/;"	m	struct:__anon47
inex	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint	*inex;	\/*parameters in standard's order*\/$/;"	m	struct:__anon23
inf_2r	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_2r,$/;"	e	enum:inst_format
inf_3r	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_3r,$/;"	e	enum:inst_format
inf_array	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_array,$/;"	e	enum:inst_format
inf_array	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    inf_array,$/;"	e	enum:inst_format
inf_bj	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_bj,$/;"	e	enum:inst_format
inf_bj	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    inf_bj,$/;"	e	enum:inst_format
inf_cal	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_cal,$/;"	e	enum:inst_format
inf_cal	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    inf_cal,$/;"	e	enum:inst_format
inf_cvt	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_cvt,$/;"	e	enum:inst_format
inf_data	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_data,$/;"	e	enum:inst_format
inf_gen	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    inf_gen$/;"	e	enum:inst_format
inf_lab	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_lab,$/;"	e	enum:inst_format
inf_lab	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    inf_lab,$/;"	e	enum:inst_format
inf_ldc	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_ldc,$/;"	e	enum:inst_format
inf_ldc	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    inf_ldc,$/;"	e	enum:inst_format
inf_mbr	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_mbr$/;"	e	enum:inst_format
inf_mbr	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    inf_mbr,$/;"	e	enum:inst_format
inf_mrk	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_mrk,$/;"	e	enum:inst_format
inf_none	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_none,$/;"	e	enum:inst_format
inf_none	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    inf_none,$/;"	e	enum:inst_format
inf_nop	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_nop,$/;"	e	enum:inst_format
inf_ret	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_ret,$/;"	e	enum:inst_format
inf_rrr	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    inf_rrr,$/;"	e	enum:inst_format
inf_str	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    inf_str,$/;"	e	enum:inst_format
infile	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *infile;$/;"	m	struct:__anon47
infile	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *infile;$/;"	m	struct:__anon23
infilen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnlen infilen;$/;"	m	struct:__anon47
infilen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnlen infilen;$/;"	m	struct:__anon23
infmt	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char	*infmt;$/;"	m	struct:__anon47
infmt	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char	*infmt;$/;"	m	struct:__anon23
infmtlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnlen	infmtlen;$/;"	m	struct:__anon47
infmtlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnlen	infmtlen;$/;"	m	struct:__anon23
info	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    block_info info;                    \/\/ information for each block$/;"	m	class:builder
info	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    void *key, *info;$/;"	m	class:alist_e
info	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_info *info;$/;"	m	class:path_base
info	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    void *key, *info;$/;"	m	class:alist_e
info_collector	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^    mark_eater info_collector;$/;"	m	class:Flow_hooks
info_writer	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^    Info_writer info_writer;$/;"	m	class:Flow_hooks
inform	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char	*inform;$/;"	m	struct:__anon47
inform	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char	*inform;$/;"	m	struct:__anon23
informlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint	informlen;$/;"	m	struct:__anon47
informlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint	informlen;$/;"	m	struct:__anon23
iniS	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    lin_ineq iniS() { return S; }$/;"	f	class:poly_iterator
iniS	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    lin_ineq iniS() { return S; }$/;"	f	class:poly_iterator
iniS	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    lin_ineq iniS() { return S; }$/;"	f	class:poly_iterator
init	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    void init(lin_ineq * in) { S.init(in); $/;"	f	class:poly_iterator
init	/cad2/ece540s/basesuif-1.1.2/include/expr_map.h	/^    void init(expr_map *other_map) { init(*other_map); }$/;"	f	class:expr_map
init	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^	void init(integer_matrix * m) { init(*m); }$/;"	f	class:integer_matrix
init	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^	void init(integer_matrix * m, int rows) { init(*m, rows); }$/;"	f	class:integer_matrix
init	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^    void init() { R=0; sz=0; }$/;"	f	class:integer_row
init	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^    void init(integer_row * rw) { init(*rw); }$/;"	f	class:integer_row
init	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void init(){ integer_row::init(); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void init(FILE * fp) { integer_matrix::init(fp); } $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void init(FILE * fp, int r, int c) { integer_matrix::init(fp, r, c); } $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void init(const lin_ineq & m) { integer_matrix::init((integer_matrix &)m); } $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void init(constraint & rw) { integer_row::init((integer_row &)rw); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void init(constraint * rw) { integer_row::init((integer_row *)rw); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void init(int * ilist, int s) { integer_row::init(ilist, s); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void init(int rows,int cols) { integer_matrix::init(rows, cols); } $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void init(int s) { integer_row::init(s); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void init(lin_ineq & m, int rows) {integer_matrix::init((integer_matrix &)m, rows);} $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void init(lin_ineq * m) { integer_matrix::init((integer_matrix *)m); } $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void init(lin_ineq * m, int rows) {integer_matrix::init((integer_matrix *)m, rows);} $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    void init(lin_ineq * in) { S.init(in); $/;"	f	class:poly_iterator
init	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^	void init(integer_matrix * m) { init(*m); }$/;"	f	class:integer_matrix
init	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^	void init(integer_matrix * m, int rows) { init(*m, rows); }$/;"	f	class:integer_matrix
init	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^    void init() { R=0; sz=0; }$/;"	f	class:integer_row
init	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^    void init(integer_row * rw) { init(*rw); }$/;"	f	class:integer_row
init	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void init(){ integer_row::init(); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void init(FILE * fp) { integer_matrix::init(fp); } $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void init(FILE * fp, int r, int c) { integer_matrix::init(fp, r, c); } $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void init(const lin_ineq & m) { integer_matrix::init((integer_matrix &)m); } $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void init(constraint & rw) { integer_row::init((integer_row &)rw); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void init(constraint * rw) { integer_row::init((integer_row *)rw); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void init(int * ilist, int s) { integer_row::init(ilist, s); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void init(int rows,int cols) { integer_matrix::init(rows, cols); } $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void init(int s) { integer_row::init(s); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void init(lin_ineq & m, int rows) {integer_matrix::init((integer_matrix &)m, rows);} $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void init(lin_ineq * m) { integer_matrix::init((integer_matrix *)m); } $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void init(lin_ineq * m, int rows) {integer_matrix::init((integer_matrix *)m, rows);} $/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    void init(Svar *v,Strans *l)$/;"	f	class:Seqn
init	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    void init(Symbol *s,C_code *ldef,C_code *a,C_code *fl=0, C_code *pr=0)$/;"	f	class:SV_node
init	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    void init(Svar *v,Strans *l)$/;"	f	class:Seqn
init	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    void init(Svar *v,Strans *l)$/;"	f	class:Seqn
init	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    void init(Symbol *s,C_code *ldef,C_code *a,C_code *fl=0, C_code *pr=0)$/;"	f	class:SV_node
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    void init(lin_ineq * in) { S.init(in); $/;"	f	class:poly_iterator
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^	void init(const integer_matrix * m) { init(*m); }$/;"	f	class:integer_matrix
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^	void init(const integer_matrix * m, int rows) { init(*m, rows); }$/;"	f	class:integer_matrix
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    void init() { R=0; sz=0; }$/;"	f	class:integer_row
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    void init(const integer_row * rw) { init(*rw); }$/;"	f	class:integer_row
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void init(){ integer_row::init(); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void init(FILE * fp) { integer_matrix::init(fp); }$/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void init(FILE * fp, int r, int c) { integer_matrix::init(fp, r, c); }$/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void init(const constraint & rw) { integer_row::init(rw); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void init(const constraint * rw) { integer_row::init(rw); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void init(const int * ilist, int s) { integer_row::init(ilist, s); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void init(const lin_ineq & m) { integer_matrix::init(m); }$/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void init(const lin_ineq & m, int rows) {integer_matrix::init(m, rows);}$/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void init(const lin_ineq * m) { integer_matrix::init(m); }$/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void init(const lin_ineq * m, int rows) {integer_matrix::init(m, rows);}$/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void init(int rows,int cols) { integer_matrix::init(rows, cols); }$/;"	f	class:lin_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void init(int s) { integer_row::init(s); }$/;"	f	class:constraint
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    void init()                                 { knd = nte_none;$/;"	f	class:name_table_entry
init	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    void init(const named_symcoeff_ineq * c)             { init(*c); }$/;"	f	class:named_symcoeff_ineq
init	/cad2/ece540s/basesuif-1.1.2/include/useful/expr_map.h	/^    void init(expr_map *other_map) { init(*other_map); }$/;"	f	class:expr_map
initializer	/cad2/ece540s/basesuif-1.1.2/include/suif/initsuif.h	/^    lib_init_f initializer;		\/* function to initialize it *\/$/;"	m	struct:suif_library
inlist	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^} inlist;$/;"	t	typeref:struct:__anon47
inlist	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^} inlist;$/;"	t	typeref:struct:__anon23
inname	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char	*inname;$/;"	m	struct:__anon47
inname	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char	*inname;$/;"	m	struct:__anon23
innamed	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint	*innamed;$/;"	m	struct:__anon47
innamed	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint	*innamed;$/;"	m	struct:__anon23
innamlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnlen	innamlen;$/;"	m	struct:__anon47
innamlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnlen	innamlen;$/;"	m	struct:__anon23
innrec	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint	*innrec;$/;"	m	struct:__anon47
innrec	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint	*innrec;$/;"	m	struct:__anon23
innum	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint	*innum;$/;"	m	struct:__anon47
innum	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint	*innum;$/;"	m	struct:__anon23
inopen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint	*inopen;$/;"	m	struct:__anon47
inopen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint	*inopen;$/;"	m	struct:__anon23
inrecl	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint	*inrecl;$/;"	m	struct:__anon47
inrecl	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint	*inrecl;$/;"	m	struct:__anon23
ins	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^        instruction    * ins;$/;"	m	union:block_info::__anon1
ins	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^        instruction    * ins;$/;"	m	union:gen_tree::__anon3
ins	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    instruction *ins;$/;"	m	class:tree_instr
inseq	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char	*inseq;$/;"	m	struct:__anon47
inseq	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char	*inseq;$/;"	m	struct:__anon23
inseqlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnlen	inseqlen;$/;"	m	struct:__anon47
inseqlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnlen	inseqlen;$/;"	m	struct:__anon23
insert	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    void insert(ast_node *e)		{ dlist_e::insert((dlist_e *)e);$/;"	f	class:ast_node
insert	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    void insert(ast_node *)$/;"	f	class:ast_node_list
insert	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    void insert(ast_node_list *)$/;"	f	class:ast_node_list
inst_format	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^enum inst_format {$/;"	g
inst_format	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^enum inst_format {$/;"	g
inst_fp	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    FILE *inst_fp;$/;"	m	class:if_istream
inst_fp	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    FILE *inst_fp;$/;"	m	class:if_ostream
instr	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    instruction *instr;$/;"	m	class:ast_node_suif_instr
instr	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    instruction *instr()		{ return ins; }$/;"	f	class:tree_instr
instr_map_f	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^typedef void (*instr_map_f)(instruction *i, void *x);$/;"	t
instr_num	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    unsigned instr_num()		{ return next_inum; }$/;"	f	class:proc_symtab
instruction	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    instruction()			{ first_nb = last_nb = NULL;$/;"	f	class:instruction
instruction	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    instruction(if_ops o, if_type t)	{ opcode = o; type = t;$/;"	f	class:instruction
instruction	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^class instruction {$/;"	c
instruction	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^class instruction : public suif_object {$/;"	c
instructions	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^    ilist instructions;$/;"	m	class:simple_graph
instrval	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^	instruction *instrval;$/;"	m	union:immed_dataonly::__anon34
int_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    int_e(int i, int_e *n)		{ ival = i; next = n; }$/;"	f	class:int_e
int_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^class int_e {$/;"	c
int_indef	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^    int_indef() {is_indef = TRUE;}$/;"	f	class:int_indef
int_indef	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^    int_indef(int i) {is_indef = FALSE ; val=i;}$/;"	f	class:int_indef
int_indef	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^class int_indef {  $/;"	c
int_indef	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int_indef() {is_indef = TRUE;}$/;"	f	class:int_indef
int_indef	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int_indef(int i) {is_indef = FALSE ; val=i;}$/;"	f	class:int_indef
int_indef	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^class int_indef {  $/;"	c
int_indef	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int_indef() {is_indef = TRUE;}$/;"	f	class:int_indef
int_indef	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int_indef(int i) {is_indef = FALSE ; val=i;}$/;"	f	class:int_indef
int_indef	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^class int_indef {  $/;"	c
int_read_buffer	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    char *int_read_buffer;$/;"	m	class:in_stream
integer	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    int integer()			{ return reg_no; }$/;"	f	class:if_reg
integer	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef int integer;$/;"	t
integer	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef int integer;$/;"	t
integer	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    int integer() const                 { assert(is_int());$/;"	f	class:fract
integer_matrix	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^class integer_matrix {$/;"	c
integer_matrix	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^class integer_matrix {$/;"	c
integer_matrix	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^class integer_matrix {$/;"	c
integer_row	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^class integer_row {$/;"	c
integer_row	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^class integer_row {$/;"	c
integer_row	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^class integer_row {$/;"	c
integer_solver_hook_f	/cad2/ece540s/basesuif-1.1.2/include/suifmath/solver_hook.h	/^typedef integer_matrix (*integer_solver_hook_f)(const integer_matrix &, integer_row *);$/;"	t
interchanges	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    int *interchanges;       \/\/ Interchanged columns of the LU decomp$/;"	m	class:matrix
intersects	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    boolean intersects(alias_set &ps)	{ return intersects(&ps); }$/;"	f	class:alias_set
interval_order	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFinfo **interval_order;$/;"	m	class:CFG_0
interval_order	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  CFinfo **interval_order;$/;"	m	class:CFG
interval_order	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  CFinfo **interval_order;$/;"	m	class:CFG
intlist	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^    intlist()				{ }$/;"	f	class:intlist
intlist	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^class intlist : public glist {$/;"	c
intlist_e	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^    intlist_e(int num) : glist_e(NULL)	{ i = num; }$/;"	f	class:intlist_e
intlist_e	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^class intlist_e : public glist_e {$/;"	c
intlist_iter	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^    intlist_iter(intlist *il)		{ reset(il); }$/;"	f	class:intlist_iter
intlist_iter	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^class intlist_iter : public glist_iter {$/;"	c
intrdesc	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		struct Intrpacked intrdesc;	\/* bits for intrinsic function*\/$/;"	m	union:Nameblock::__anon6	typeref:struct:Nameblock::__anon6::Intrpacked
inum	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned inum;$/;"	m	class:instruction
inunf	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char	*inunf;$/;"	m	struct:__anon47
inunf	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char	*inunf;$/;"	m	struct:__anon23
inunflen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnlen	inunflen;$/;"	m	struct:__anon47
inunflen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnlen	inunflen;$/;"	m	struct:__anon23
inunit	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint inunit;$/;"	m	struct:__anon47
inunit	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint inunit;$/;"	m	struct:__anon23
inverse_map	/cad2/ece540s/basesuif-1.1.2/include/expr_map.h	/^    operand inverse_map(var_sym *source_var)$/;"	f	class:expr_map
inverse_map	/cad2/ece540s/basesuif-1.1.2/include/useful/expr_map.h	/^    operand inverse_map(var_sym *source_var)$/;"	f	class:expr_map
io_abs	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_abs,$/;"	e	enum:if_ops
io_abs	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_abs,				\/* absolute value *\/$/;"	e	enum:if_ops
io_add	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_add,$/;"	e	enum:if_ops
io_add	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_add,				\/* add *\/$/;"	e	enum:if_ops
io_and	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_and,$/;"	e	enum:if_ops
io_and	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_and,				\/* bitwise and *\/$/;"	e	enum:if_ops
io_array	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_array,$/;"	e	enum:if_ops
io_array	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_array,				\/* array reference *\/$/;"	e	enum:if_ops
io_asr	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_asr,$/;"	e	enum:if_ops
io_asr	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_asr,				\/* arithmetic shift right *\/$/;"	e	enum:if_ops
io_bfalse	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_bfalse,$/;"	e	enum:if_ops
io_bfalse	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_bfalse,				\/* branch if false *\/$/;"	e	enum:if_ops
io_btrue	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_btrue,$/;"	e	enum:if_ops
io_btrue	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_btrue,				\/* branch if true *\/$/;"	e	enum:if_ops
io_cal	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_cal,$/;"	e	enum:if_ops
io_cal	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_cal,				\/* call *\/$/;"	e	enum:if_ops
io_cpy	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_cpy,$/;"	e	enum:if_ops
io_cpy	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_cpy,				\/* copy *\/$/;"	e	enum:if_ops
io_cvt	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_cvt,$/;"	e	enum:if_ops
io_cvt	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_cvt,				\/* convert *\/$/;"	e	enum:if_ops
io_data	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_data,$/;"	e	enum:if_ops
io_data	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_data,				\/* -- no longer used -- *\/$/;"	e	enum:if_ops
io_div	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_div,$/;"	e	enum:if_ops
io_div	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_div,				\/* divide *\/$/;"	e	enum:if_ops
io_divceil	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_divceil,$/;"	e	enum:if_ops
io_divceil	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_divceil,				\/* divide with ceiling *\/$/;"	e	enum:if_ops
io_divfloor	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_divfloor,$/;"	e	enum:if_ops
io_divfloor	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_divfloor,			\/* divide with floor *\/$/;"	e	enum:if_ops
io_eos	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_eos,$/;"	e	enum:if_ops
io_eos	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_eos,				\/* end-of-stream; internal use only *\/$/;"	e	enum:if_ops
io_gen	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_gen,				\/* generic instruction *\/$/;"	e	enum:if_ops
io_ior	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_ior,$/;"	e	enum:if_ops
io_ior	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_ior,				\/* bitwise inclusive or *\/$/;"	e	enum:if_ops
io_jmp	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_jmp,$/;"	e	enum:if_ops
io_jmp	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_jmp,				\/* unconditional jump *\/$/;"	e	enum:if_ops
io_lab	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_lab,$/;"	e	enum:if_ops
io_lab	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_lab,				\/* label *\/$/;"	e	enum:if_ops
io_last	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_last$/;"	e	enum:if_ops
io_last	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_last$/;"	e	enum:if_ops
io_ldc	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_ldc,$/;"	e	enum:if_ops
io_ldc	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_ldc,				\/* load constant *\/$/;"	e	enum:if_ops
io_lod	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_lod,$/;"	e	enum:if_ops
io_lod	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_lod,				\/* load *\/$/;"	e	enum:if_ops
io_lsl	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_lsl,$/;"	e	enum:if_ops
io_lsl	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_lsl,				\/* logical shift left *\/$/;"	e	enum:if_ops
io_lsr	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_lsr,$/;"	e	enum:if_ops
io_lsr	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_lsr,				\/* logical shift right *\/$/;"	e	enum:if_ops
io_max	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_max,$/;"	e	enum:if_ops
io_max	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_max,				\/* maximum *\/$/;"	e	enum:if_ops
io_mbr	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_mbr,$/;"	e	enum:if_ops
io_mbr	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_mbr,				\/* multi-way branch *\/$/;"	e	enum:if_ops
io_memcpy	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_memcpy,				\/* memory-to-memory copy *\/$/;"	e	enum:if_ops
io_min	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_min,$/;"	e	enum:if_ops
io_min	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_min,				\/* minimum *\/$/;"	e	enum:if_ops
io_mod	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_mod,$/;"	e	enum:if_ops
io_mod	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_mod,				\/* modulus *\/$/;"	e	enum:if_ops
io_mrk	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_mrk,$/;"	e	enum:if_ops
io_mrk	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_mrk,				\/* mark *\/$/;"	e	enum:if_ops
io_mul	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_mul,$/;"	e	enum:if_ops
io_mul	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_mul,				\/* multiply *\/$/;"	e	enum:if_ops
io_neg	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_neg,$/;"	e	enum:if_ops
io_neg	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_neg,				\/* negate *\/$/;"	e	enum:if_ops
io_nop	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_nop,$/;"	e	enum:if_ops
io_nop	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_nop,				\/* no op *\/$/;"	e	enum:if_ops
io_not	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_not,$/;"	e	enum:if_ops
io_not	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_not,				\/* bitwise not *\/$/;"	e	enum:if_ops
io_rem	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_rem,$/;"	e	enum:if_ops
io_rem	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_rem,				\/* remainder *\/$/;"	e	enum:if_ops
io_ret	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_ret,$/;"	e	enum:if_ops
io_ret	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_ret,				\/* return *\/$/;"	e	enum:if_ops
io_rot	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_rot,$/;"	e	enum:if_ops
io_rot	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_rot,				\/* rotate *\/$/;"	e	enum:if_ops
io_seq	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_seq,$/;"	e	enum:if_ops
io_seq	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_seq,				\/* set equal *\/$/;"	e	enum:if_ops
io_setup	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^struct io_setup {$/;"	s
io_setup	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^typedef struct io_setup io_setup;$/;"	t	typeref:struct:io_setup
io_sl	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_sl,$/;"	e	enum:if_ops
io_sl	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_sl,				\/* set less than *\/$/;"	e	enum:if_ops
io_sle	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_sle,$/;"	e	enum:if_ops
io_sle	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_sle,				\/* set less than or equal *\/$/;"	e	enum:if_ops
io_sne	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_sne,$/;"	e	enum:if_ops
io_sne	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_sne,				\/* set not equal *\/$/;"	e	enum:if_ops
io_str	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_str,$/;"	e	enum:if_ops
io_str	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_str,				\/* store *\/$/;"	e	enum:if_ops
io_sub	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_sub,$/;"	e	enum:if_ops
io_sub	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_sub,				\/* subtract *\/$/;"	e	enum:if_ops
io_xor	/cad2/ece540s/basesuif-1.1.2/include/hawg/opcodes.h	/^    io_xor,$/;"	e	enum:if_ops
io_xor	/cad2/ece540s/basesuif-1.1.2/include/suif/opcodes.h	/^    io_xor,				\/* bitwise exclusive or *\/$/;"	e	enum:if_ops
iob_data	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^struct iob_data {$/;"	s
iob_data	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^typedef struct iob_data iob_data;$/;"	t	typeref:struct:iob_data
irred_cnt	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    int irred_cnt;$/;"	m	class:Sproblem
irred_cnt	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    int irred_cnt;$/;"	m	class:Sproblem
irred_cnt	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    int irred_cnt;$/;"	m	class:Sproblem
is	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    if_istream *is;$/;"	m	class:proc_iter
is	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_info * is(int k)		{ return (k == kind) ? this : NULL; }$/;"	f	class:path_info
is	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    Strans *is(int k) { return this && k==kind ? this : 0; }$/;"	f	class:Strans
is	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_rule *is(int t)$/;"	f	class:SV_rule
is	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Sym_val *is(int a)$/;"	f	class:Symbol
is	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Sym_val *is(int k) { return (this!=0 && kind==k) ? this : 0 ; }$/;"	f	class:Sym_val
is	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int is(int k) { return this!=0 && k==kind; }$/;"	f	struct:SV_type
is	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    Strans *is(int k) { return this && k==kind ? this : 0; }$/;"	f	class:Strans
is	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    Strans *is(int k) { return this && k==kind ? this : 0; }$/;"	f	class:Strans
is	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_rule *is(int t)$/;"	f	class:SV_rule
is	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Sym_val *is(int a)$/;"	f	class:Symbol
is	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Sym_val *is(int k) { return (this!=0 && kind==k) ? this : 0 ; }$/;"	f	class:Sym_val
is	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int is(int k) { return this!=0 && k==kind; }$/;"	f	struct:SV_type
is	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    in_stream *is;			\/* input stream *\/$/;"	m	class:file_set_entry
is_arg	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	int is_arg;$/;"	m	class:SV_cell
is_arg	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	int is_arg;$/;"	m	class:SV_cell
is_array	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean is_array()			{ return (op() == TYPE_ARRAY); }$/;"	f	class:type_node
is_base	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean is_base()			{ return ((op() == TYPE_INT) ||$/;"	f	class:type_node
is_big_endian	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    boolean is_big_endian;$/;"	m	struct:machine_params
is_binary_op	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	23;"	d
is_block	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^    boolean is_block()			{ return kind() == block_sym; }$/;"	f	class:sym_node
is_block	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    boolean is_block()			{ return ((kind() == SYMTAB_BLOCK) ||$/;"	f	class:base_symtab
is_block	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    boolean is_block()			{ return kind() == TREE_BLOCK; }$/;"	f	class:tree_node
is_c_char	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_c_char(void) const$/;"	f	class:i_rational
is_c_int	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_c_int(void) const$/;"	f	class:i_rational
is_c_long	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_c_long(void) const$/;"	f	class:i_rational
is_c_short	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_c_short(void) const$/;"	f	class:i_rational
is_c_signed_char	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_c_signed_char(void) const$/;"	f	class:i_rational
is_c_unsigned_char	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_c_unsigned_char(void) const$/;"	f	class:i_rational
is_c_unsigned_int	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_c_unsigned_int(void) const$/;"	f	class:i_rational
is_c_unsigned_long	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_c_unsigned_long(void) const$/;"	f	class:i_rational
is_c_unsigned_short	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_c_unsigned_short(void) const$/;"	f	class:i_rational
is_call_by_ref	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual boolean is_call_by_ref()	{ return FALSE; }$/;"	f	class:type_node
is_cnst	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean is_cnst;$/;"	m	class:array_bound
is_common_blk_var	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    boolean is_common_blk_var()		{ return FALSE; }$/;"	f	class:var_sym
is_const	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int is_const() { return (!too_messy && elts.is_empty() && $/;"	f	class:access_vector
is_const	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int is_const() { return (!too_messy && elts.is_empty() && $/;"	f	class:access_vector
is_const	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int is_const() { return (!too_messy && elts.is_empty() && $/;"	f	class:access_vector
is_const	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual boolean is_const()		{ return FALSE; }$/;"	f	class:type_node
is_constant	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean is_constant() const		{ return is_cnst; }$/;"	f	class:array_bound
is_control_macro	/cad2/ece540s/basesuif-1.1.2/include/flow/nextinstr.h	/^    boolean is_control_macro()		{ return ((macro_type == k_for) ||$/;"	f	class:macro_status
is_def_obj	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    boolean is_def_obj()		{ return (object_kind() == DEF_OBJ); }$/;"	f	class:suif_object
is_empty	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    int is_empty() { return curr==0; }$/;"	f	class:access_ineq_list_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int is_empty() {return alist_iter::is_empty();}$/;"	f	struct:access_list_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int is_empty() {return glist::is_empty();}$/;"	f	class:array_info
is_empty	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int is_empty() {return glist_iter::is_empty();}$/;"	f	class:array_info_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^	int is_empty() {return glist_iter::is_empty();}$/;"	f	struct:distance_vector_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^	int is_empty() {return glist_iter::is_empty();}$/;"	f	struct:dvlist_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    is_empty()$/;"	f	struct:distance_vector
is_empty	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int is_empty() {return alist_iter::is_empty();}$/;"	f	struct:access_list_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int is_empty() {return glist::is_empty();}$/;"	f	class:array_info
is_empty	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int is_empty() {return glist_iter::is_empty();}$/;"	f	class:array_info_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	int is_empty() {return glist_iter::is_empty();}$/;"	f	struct:distance_vector_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	int is_empty() {return glist_iter::is_empty();}$/;"	f	struct:dvlist_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	is_empty()$/;"	f	struct:distance_vector
is_empty	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int is_empty() {return alist_iter::is_empty();}$/;"	f	struct:access_list_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int is_empty() {return glist::is_empty();}$/;"	f	class:array_info
is_empty	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int is_empty() {return glist_iter::is_empty();}$/;"	f	class:array_info_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	int is_empty() {return glist_iter::is_empty();}$/;"	f	struct:distance_vector_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	int is_empty() {return glist_iter::is_empty();}$/;"	f	struct:dvlist_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	is_empty()$/;"	f	struct:distance_vector
is_empty	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    boolean is_empty()			{ return (next_e == this); }$/;"	f	class:clist_e
is_empty	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    boolean is_empty()			{ return nxt == hd; }$/;"	f	class:clist_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    boolean is_empty()			{ return head == NULL; }$/;"	f	class:glist
is_empty	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    boolean is_empty()			{ return nxt == NULL; }$/;"	f	class:glist_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    boolean is_empty()			{ return (!phead && !ihead); }$/;"	f	class:alias_set
is_empty	/cad2/ece540s/basesuif-1.1.2/include/hawg/annote.h	/^    boolean is_empty()			{ return nvals == 0; }$/;"	f	class:annote
is_empty	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    boolean is_empty()			{ return nxt == NULL; }$/;"	f	class:path_base_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    int is_empty() { return m() == 0; }$/;"	f	class:lin_ineq
is_empty	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    int is_empty() { return curr==0; }$/;"	f	class:access_ineq_list_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    int is_empty() { return m() == 0; }$/;"	f	class:lin_ineq
is_empty	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	int is_empty() { return consiter::is_empty(); }$/;"	f	struct:Svar_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	int is_empty() { return conslist::is_empty(); }$/;"	f	struct:Svar_list
is_empty	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	int is_empty() { return glist_iter::is_empty(); }$/;"	f	struct:Seqn_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	int is_empty()$/;"	f	struct:String_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int is_empty() { return l.is_empty(); }$/;"	f	class:Symbol_list
is_empty	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	int is_empty() { return consiter::is_empty(); }$/;"	f	struct:Svar_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	int is_empty() { return conslist::is_empty(); }$/;"	f	struct:Svar_list
is_empty	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	int is_empty() { return glist_iter::is_empty(); }$/;"	f	struct:Seqn_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	int is_empty() { return consiter::is_empty(); }$/;"	f	struct:Svar_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	int is_empty() { return conslist::is_empty(); }$/;"	f	struct:Svar_list
is_empty	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	int is_empty() { return glist_iter::is_empty(); }$/;"	f	struct:Seqn_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	int is_empty()$/;"	f	struct:String_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int is_empty() { return l.is_empty(); }$/;"	f	class:Symbol_list
is_empty	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    boolean is_empty() const		{ return head_e == NULL; }$/;"	f	class:glist
is_empty	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    boolean is_empty() const		{ return nxt == NULL; }$/;"	f	class:glist_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    int is_empty() { return curr==0; }$/;"	f	class:access_ineq_list_iter
is_empty	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    int is_empty() const { return m() == 0; }$/;"	f	class:lin_ineq
is_enum	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean is_enum()			{ return (op() == TYPE_ENUM); }$/;"	f	class:type_node
is_error	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean is_error() const		{ return knd == im_undef; }$/;"	f	class:immed
is_ext_flt	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean is_ext_flt() const		{ return knd == im_extended_float; }$/;"	f	class:immed
is_ext_integer	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean is_ext_integer() const	{ return knd == im_extended_int; }$/;"	f	class:immed
is_extern	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    virtual boolean is_extern()		{ return ext; }$/;"	f	class:sym_node
is_factored	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    boolean is_factored()        { return factored; }$/;"	f	class:matrix
is_file	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    boolean is_file()			{ return (kind() == SYMTAB_FILE); }$/;"	f	class:base_symtab
is_file_obj	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    boolean is_file_obj()		{ return (object_kind() == FILE_OBJ); }$/;"	f	class:suif_object
is_finite	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_finite(void) const  { return the_numerator.is_finite(); }$/;"	f	class:i_rational
is_finite	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_finite(void) const$/;"	f	class:i_integer
is_float_const	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean is_float_const() const$/;"	f	class:immed
is_flt	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean is_flt() const		{ return knd == im_float; }$/;"	f	class:immed
is_for	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    boolean is_for()			{ return kind() == TREE_FOR; }$/;"	f	class:tree_node
is_fork	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  Flag is_join, is_fork, begins_bb, needs_var;$/;"	m	class:CFinfo
is_fork	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  Flag is_join, is_fork, begins_bb, needs_var;$/;"	m	class:CFinfo
is_fork	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  Flag is_join, is_fork, begins_bb, needs_var;$/;"	m	class:CFinfo
is_func	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean is_func()			{ return (op() == TYPE_FUNC); }$/;"	f	class:type_node
is_global	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^    boolean is_global()			{ return kind() == global_sym; }$/;"	f	class:sym_node
is_global	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    boolean is_global()			{ return ((kind() == SYMTAB_GLOBAL) ||$/;"	f	class:base_symtab
is_greater_than	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_greater_than(const i_integer &other) const$/;"	f	class:i_integer
is_greater_than_or_equal_to	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_greater_than_or_equal_to(const i_integer &other) const$/;"	f	class:i_integer
is_hard	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    boolean is_hard()			{ return kind() == rk_hard; }$/;"	f	class:if_reg
is_identity	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int is_identity;$/;"	m	class:SV_node
is_identity	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int is_identity;$/;"	m	class:SV_node
is_if	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    boolean is_if()			{ return kind() == TREE_IF; }$/;"	f	class:tree_node
is_in_memory	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    boolean is_in_memory()		{ return (block() != NULL); }$/;"	f	class:proc_sym
is_indef	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^    boolean is_indef;$/;"	m	class:int_indef
is_indef	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	boolean is_indef;$/;"	m	class:int_indef
is_indef	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	boolean is_indef;$/;"	m	class:int_indef
is_indep	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	int is_indep() { return indep; };$/;"	f	class:exact
is_indep	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int is_indep() { return indep; };$/;"	f	class:exact
is_indep	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int is_indep() { return indep; };$/;"	f	class:exact
is_instr	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean is_instr() const		{ return knd == im_instr; }$/;"	f	class:immed
is_instr	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    boolean is_instr() const		{ return (k == OPER_INSTR); }$/;"	f	class:operand_dataonly
is_instr	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    boolean is_instr()			{ return kind() == TREE_INSTR; }$/;"	f	class:tree_node
is_instr_obj	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    boolean is_instr_obj()		{ return (object_kind() == INSTR_OBJ);}$/;"	f	class:suif_object
is_int	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    boolean is_int() const		{ return ((d == 1) || (d == -1)); }$/;"	f	class:fract
is_int	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    boolean is_int() const		{ return ((d == 1) || (d == -1)); }$/;"	f	class:fract
is_int_const	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean is_int_const() const$/;"	f	class:immed
is_integer	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean is_integer() const		{ return knd == im_int; }$/;"	f	class:immed
is_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_integer(void) const  { return (the_denominator == 1); }$/;"	f	class:i_rational
is_join	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  Flag is_join, is_fork, begins_bb, needs_var;$/;"	m	class:CFinfo
is_join	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  Flag is_join, is_fork, begins_bb, needs_var;$/;"	m	class:CFinfo
is_join	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  Flag is_join, is_fork, begins_bb, needs_var;$/;"	m	class:CFinfo
is_label	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^    boolean is_label()			{ return kind() == label_sym; }$/;"	f	class:sym_node
is_label	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    boolean is_label()			{ return kind() == SYM_LABEL; }$/;"	f	class:sym_node
is_left_assoc	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	34;"	d
is_less_than_or_equal_to	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_less_than_or_equal_to(const i_integer &other) const$/;"	f	class:i_integer
is_loop	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    boolean is_loop()			{ return kind() == TREE_LOOP; }$/;"	f	class:tree_node
is_macro	/cad2/ece540s/basesuif-1.1.2/include/flow/nextinstr.h	/^    boolean is_macro()			{ return macro_type != NULL; }$/;"	f	class:macro_status
is_modifier	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean is_modifier()		{ return ((op() == TYPE_CONST) ||$/;"	f	class:type_node
is_negative	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_negative(void) const  { return the_numerator.is_negative(); }$/;"	f	class:i_rational
is_nil	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    boolean is_nil()			{ return reg_no == no_register; }$/;"	f	class:if_reg
is_node	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    boolean is_node()			{ return kind() == rk_node; }$/;"	f	class:if_reg
is_not_equal_to	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_not_equal_to(const i_integer &other) const$/;"	f	class:i_integer
is_null	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    boolean is_null() const		{ return (k == OPER_NULL); }$/;"	f	class:operand_dataonly
is_op	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean is_op() const		{ return knd == im_op; }$/;"	f	class:immed
is_open	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    boolean is_open()			{ return (fp != NULL); }$/;"	f	class:base_stream
is_param	/cad2/ece540s/basesuif-1.1.2/include/flow/reginfo.h	/^    boolean is_param;$/;"	m	class:register_info
is_param	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    boolean is_param()			{ return flags & VARSYM_ISPARAM; }$/;"	f	class:var_sym
is_preg	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^    boolean is_preg()			{ return kind() == preg_sym; }$/;"	f	class:sym_node
is_proc	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    boolean is_proc()			{ return kind() == SYM_PROC; }$/;"	f	class:sym_node
is_proc	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    boolean is_proc()			{ return kind() == SYMTAB_PROC; }$/;"	f	class:base_symtab
is_proc	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    boolean is_proc()			{ return TRUE; }$/;"	f	class:tree_proc
is_proc	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    virtual boolean is_proc()		{ return FALSE; }$/;"	f	class:tree_node
is_pseudo	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    boolean is_pseudo()			{ return kind() == rk_pseudo; }$/;"	f	class:if_reg
is_ptr	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean is_ptr()			{ return (op() == TYPE_PTR); }$/;"	f	class:type_node
is_readable	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    boolean is_readable()		{ return !written && (file_pos != -1);}$/;"	f	class:proc_sym
is_right_assoc	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	33;"	d
is_signed	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean is_signed()			{ return sgn; }$/;"	f	class:base_type
is_signless_infinity	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_signless_infinity(void) const$/;"	f	class:i_integer
is_signless_infinity	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_signless_infinity(void) const$/;"	f	class:i_rational
is_special	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    int is_special() { return kind<Sk_identity; }$/;"	f	class:Strans
is_special	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    int is_special() { return kind<Sk_identity; }$/;"	f	class:Strans
is_special	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    int is_special() { return kind<Sk_identity; }$/;"	f	class:Strans
is_storage	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^    boolean is_storage()		{ return kind() == storage_sym; }$/;"	f	class:sym_node
is_string	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean is_string() const		{ return knd == im_string; }$/;"	f	class:immed
is_struct	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean is_struct()			{ return ((op() == TYPE_GROUP) ||$/;"	f	class:type_node
is_structured	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    boolean is_structured()		{ return TRUE; }$/;"	f	class:struct_annote_def
is_structured	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    virtual boolean is_structured()	{ return FALSE; }$/;"	f	class:annote_def
is_subgraph	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual int is_subgraph(CFGnode *)        { assert(0); return 0; }$/;"	f	class:CFG_1_reversed
is_subgraph	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual int is_subgraph(CFGnode *)      { assert(0); return 0; }$/;"	f	class:CFG_1
is_sym_obj	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    boolean is_sym_obj()		{ return (object_kind() == SYM_OBJ); }$/;"	f	class:suif_object
is_symbol	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean is_symbol() const		{ return knd == im_symbol; }$/;"	f	class:immed
is_symbol	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    boolean is_symbol() const		{ return (k == OPER_SYM); }$/;"	f	class:operand_dataonly
is_symtab_obj	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    boolean is_symtab_obj()		{ return (object_kind() ==SYMTAB_OBJ);}$/;"	f	class:suif_object
is_tree_obj	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    boolean is_tree_obj()		{ return (object_kind() == TREE_OBJ); }$/;"	f	class:suif_object
is_treelist	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    boolean is_treelist()		{ return istreelist; }$/;"	f	class:ast_node_list
is_type	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean is_type() const		{ return knd == im_type; }$/;"	f	class:immed
is_type_obj	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    boolean is_type_obj()		{ return (object_kind() == TYPE_OBJ); }$/;"	f	class:suif_object
is_unary_op	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	22;"	d
is_undetermined	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_undetermined(void) const$/;"	f	class:i_integer
is_undetermined	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean is_undetermined(void) const$/;"	f	class:i_rational
is_uninit	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^    boolean is_uninit()			{ return registers == NULL; }$/;"	f	class:procedure_info
is_unknown	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean is_unknown() const		{ return (!is_cnst && !u.var); }$/;"	f	class:array_bound
is_userdef	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    boolean is_userdef()		{ return flags & SYM_USERDEF; }$/;"	f	class:sym_node
is_var	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    boolean is_var()			{ return kind() == SYM_VAR; }$/;"	f	class:sym_node
is_var	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    boolean is_var;$/;"	m	class:name_table_entry
is_variable	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean is_variable() const		{ return (!is_cnst && u.var); }$/;"	f	class:array_bound
is_visible	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    boolean is_visible(sym_node *the_sym)$/;"	f	class:base_symtab
is_visible	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    boolean is_visible(type_node *the_type)$/;"	f	class:base_symtab
is_volatile	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual boolean is_volatile()	{ return FALSE; }$/;"	f	class:type_node
is_written	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    boolean is_written()		{ return written; }$/;"	f	class:proc_sym
is_zero	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    int is_zero() {return d.is_zero();}$/;"	f	struct:distance_vector_e
is_zero	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	int is_zero() {return d.is_zero();}$/;"	f	struct:distance_vector_e
is_zero	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	int is_zero() {return d.is_zero();}$/;"	f	struct:distance_vector_e
is_zero	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    boolean is_zero() const             { return (n == 0); }$/;"	f	class:fract
is_zero	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    boolean is_zero()                           { return (rank()==-1); }$/;"	f	class:sc_fm_constraint
isaconst	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field isaconst; $/;"	m	struct:Addrblock
isactive	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned isactive:1;$/;"	m	struct:Impldoblock
isarray	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned isarray:1;	\/* used to show that memoffset is$/;"	m	struct:Addrblock
isbusy	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned isbusy:1;$/;"	m	struct:Impldoblock
ist	/cad2/ece540s/basesuif-1.1.2/include/ist.h	/^class ist$/;"	c
ist	/cad2/ece540s/basesuif-1.1.2/include/ist/ist.h	/^class ist$/;"	c
istemp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned istemp:1;	\/* used in stack management of temporary$/;"	m	struct:Addrblock
istream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    istream(istream *nxt=0)$/;"	f	class:istream
istream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^class istream$/;"	c
istream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    istream(istream *nxt=0)$/;"	f	class:istream
istream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^class istream$/;"	c
istreelist	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    boolean istreelist;$/;"	m	class:ast_node_list
it_basecomp	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^enum it_basecomp {$/;"	g
itc_address	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    itc_address,$/;"	e	enum:it_basecomp
itc_error	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    itc_error,$/;"	e	enum:it_basecomp
itc_float	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    itc_float,$/;"	e	enum:it_basecomp
itc_record	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    itc_record$/;"	e	enum:it_basecomp
itc_signed	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    itc_signed,$/;"	e	enum:it_basecomp
itc_unsigned	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    itc_unsigned,$/;"	e	enum:it_basecomp
itc_void	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    itc_void,$/;"	e	enum:it_basecomp
items	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    PP_iset items;$/;"	m	class:PP_state
items	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    PP_iset items;$/;"	m	class:PP_state
iter	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    file_set_entry_list_iter *iter;	\/* file iterator *\/$/;"	m	class:file_set
iteration	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    int iteration;$/;"	m	class:Sproblem
iteration	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    int iteration;$/;"	m	class:Sproblem
iteration	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    int iteration;$/;"	m	class:Sproblem
ival	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    int ival;$/;"	m	class:int_e
ival	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^	int ival;$/;"	m	union:icon::__anon4
ival	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	int ival;			\/* integer value *\/$/;"	m	union:simple_immed_struct::__anon48
ival	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	int ival;			\/* integer value *\/$/;"	m	union:simple_immed_struct::__anon25
ival	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^	int ival;$/;"	m	union:immed_dataonly::__anon34
jammed	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    boolean jammed()			{ return inst_fp == NULL; };$/;"	f	class:if_istream
jammed	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    boolean jammed()			{ return inst_fp == NULL; };$/;"	f	class:if_ostream
jmp	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    label_sym *jmp;$/;"	m	class:tree_if
jumpto	/cad2/ece540s/basesuif-1.1.2/include/flow/astif.h	/^    path *jumpto;$/;"	m	class:ast_node_if
jumpto	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    label_sym *jumpto()			{ return jmp; }$/;"	f	class:tree_if
k	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    operand_kinds k;$/;"	m	class:operand_dataonly
k_annote	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    static char * k_annote;$/;"	m	struct:code_context_annote
keep	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    boolean keep;                                       \/\/ keep all ineqs or$/;"	m	class:named_sc_fm
key	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    void *key, *info;$/;"	m	class:alist_e
key	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    void *key, *info;$/;"	m	class:alist_e
kind	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    ast_node_type kind()		{ return knd; }$/;"	f	class:ast_node
kind	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    int kind;				\/* should be path_kind instead of int *\/$/;"	m	class:path_info
kind	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint kind;$/;"	m	class:lin_ineq_op
kind	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint kind;$/;"	m	class:lin_ineq_op
kind	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFGnode_kinds kind()$/;"	f	class:CFinfo
kind	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    int kind;$/;"	m	class:Strans
kind	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    signed char kind;$/;"	m	class:Seqn
kind	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    const SV_tags kind;$/;"	m	class:Sym_val
kind	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    const int kind;$/;"	m	struct:SV_type
kind	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    char kind;$/;"	m	class:Seqn
kind	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    int kind;$/;"	m	class:Strans
kind	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    char kind;$/;"	m	class:Seqn
kind	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    int kind;$/;"	m	class:Strans
kind	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  CFGnode_kinds kind()$/;"	f	class:CFinfo
kind	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    const SV_tags kind;$/;"	m	class:Sym_val
kind	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    const int kind;$/;"	m	struct:SV_type
kind	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  CFGnode_kinds kind()$/;"	f	class:CFinfo
kind	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    reg_kind kind;			\/* kind of register *\/$/;"	m	struct:simple_reg_struct
kind	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    sym_kind kind;			\/* symbol kind *\/$/;"	m	struct:simple_sym_struct
kind	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    reg_kind kind;			\/* kind of register *\/$/;"	m	struct:simple_reg_struct
kind	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    sym_kind kind;			\/* symbol kind *\/$/;"	m	struct:simple_sym_struct
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed_kinds kind() const		{ return knd; }$/;"	f	class:immed
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    operand_kinds kind() const		{ return k; }$/;"	f	class:operand_dataonly
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    sym_kinds kind()			{ return SYM_LABEL; }$/;"	f	class:label_sym
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    sym_kinds kind()			{ return SYM_PROC; }$/;"	f	class:proc_sym
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    sym_kinds kind()			{ return SYM_VAR; }$/;"	f	class:var_sym
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    symtab_kinds kind()			{ return SYMTAB_BLOCK; }$/;"	f	class:block_symtab
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    symtab_kinds kind()			{ return SYMTAB_FILE; }$/;"	f	class:file_symtab
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    symtab_kinds kind()			{ return SYMTAB_GLOBAL; }$/;"	f	class:global_symtab
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    symtab_kinds kind()			{ return SYMTAB_PROC; }$/;"	f	class:proc_symtab
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_kinds kind()			{ return TREE_BLOCK; }$/;"	f	class:tree_block
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_kinds kind()			{ return TREE_FOR; }$/;"	f	class:tree_for
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_kinds kind()			{ return TREE_IF; }$/;"	f	class:tree_if
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_kinds kind()			{ return TREE_INSTR; }$/;"	f	class:tree_instr
kind	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_kinds kind()			{ return TREE_LOOP; }$/;"	f	class:tree_loop
kind	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint kind;$/;"	m	class:lin_ineq_op
kind	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table_entry_kind kind() const         { return knd; }$/;"	f	class:name_table_entry
kinds	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_enum *kinds;$/;"	m	class:SV_dflow
kinds	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_enum *kinds;$/;"	m	class:SV_dflow
kludge	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		} kludge;	\/* so we can distinguish string vs binary$/;"	m	union:Addrblock::__anon9	typeref:struct:Addrblock::__anon9::__anon10
kludgeci	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	ftnint kludgeci; \/* kludge to allow non-param arrays to have$/;"	m	struct:Addrblock
knd	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    ast_node_type knd;$/;"	m	class:ast_node
knd	/cad2/ece540s/basesuif-1.1.2/include/suif/cmdparse.h	/^    cmd_line_option_kind knd;$/;"	m	struct:cmd_line_option
knd	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    immed_kinds knd;$/;"	m	class:immed_dataonly
knd	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table_entry_kind knd;$/;"	m	class:name_table_entry
l	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    int u, l;$/;"	m	class:access_ineq_list_iter
l	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    int u, l;$/;"	m	class:access_ineq_list_iter
l	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    conslist l;$/;"	m	class:Symbol_list
l	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    conslist l;$/;"	m	class:Symbol_list
l	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    int u, l;$/;"	m	class:access_ineq_list_iter
lab	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    path lab;$/;"	m	class:in_data
lab	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    path lab;$/;"	m	class:in_lab
lab	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_sym *lab;		\/* the symbol for this label *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon56
lab	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_sym *lab;		\/* the symbol for this label *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon33
lab	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    label_sym *lab;$/;"	m	class:in_lab
labdefined	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned labdefined:1;	\/* YES or NO *\/$/;"	m	struct:Labelblock
label	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	} label;$/;"	m	union:simple_instr_struct::__anon50	typeref:struct:simple_instr_struct::__anon50::__anon56
label	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	} label;$/;"	m	union:simple_instr_struct::__anon27	typeref:struct:simple_instr_struct::__anon27::__anon33
label	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    label_sym *label()			{ return lab; }$/;"	f	class:in_lab
label	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    label_sym *label(unsigned n)	{ check_range(n); return labs[n]; }$/;"	f	class:in_mbr
label_collector	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^    label_eater label_collector;$/;"	m	class:Flow_hooks
label_counter	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    unsigned label_counter;		\/* for creating unique label_syms *\/$/;"	m	class:block_symtab
label_eater	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^typedef void (*label_eater)(proc *, in_lab *);$/;"	t
label_info	/cad2/ece540s/basesuif-1.1.2/include/flow/labelinfo.h	/^    label_info(char *n, path_base *b) : path_info(PK_label_info, n, b) { }$/;"	f	class:label_info
label_info	/cad2/ece540s/basesuif-1.1.2/include/flow/labelinfo.h	/^class label_info : public path_info {$/;"	c
label_info	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^struct label_info$/;"	s
label_manager	/cad2/ece540s/basesuif-1.1.2/include/flow/labelinfo.h	/^    label_manager(char *n, path_base *b, int m)$/;"	f	class:label_manager
label_manager	/cad2/ece540s/basesuif-1.1.2/include/flow/labelinfo.h	/^class label_manager : public path_info {$/;"	c
label_node	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^class label_node : public sym_node {$/;"	c
label_sym	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^    label_sym,$/;"	e	enum:sym_kinds
label_sym	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    label_sym()				{ }$/;"	f	class:label_sym
label_sym	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^class label_sym : public sym_node {$/;"	c
labelno	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int labelno;		\/* Internal label *\/$/;"	m	struct:Labelblock
labels	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^    label_manager *labels;$/;"	m	class:procedure_info
labels	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_elist labels;$/;"	m	struct:sc_case
labels	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_elist labels;$/;"	m	struct:sc_case
labinacc	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned labinacc:1;	\/* inaccessible? (i.e. has its scope$/;"	m	struct:Labelblock
labs	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    path *labs;$/;"	m	class:in_mbr
labs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    label_sym **labs;$/;"	m	class:in_mbr
labtype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned labtype:2;	\/* LAB{FORMAT,EXEC,etc} *\/$/;"	m	struct:Labelblock
labused	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned labused:1;$/;"	m	struct:Labelblock
landing_pad	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *landing_pad()	{ return lpad; }$/;"	f	class:tree_for
landing_pad_part	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    ast_node_list *landing_pad_part;$/;"	m	class:ast_node_for
last	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_vector *last() {return (access_vector *) glist::tail();}$/;"	f	class:array_info
last	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_vector *last() {return (access_vector *) tail;}$/;"	f	class:array_info
last	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_vector *last() {return (access_vector *) tail;}$/;"	f	class:array_info
last	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^    ast_node * last()			{ return tail ?$/;"	f	class:astlist
last	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    ast_node * last()			{ return !is_empty() ?$/;"	f	class:ast_node_list
last	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    int first, last;$/;"	m	class:bit_set
last	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    void * last()			{ return ((cons_e *)tail)->data; }$/;"	f	class:conslist
last	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    clist_e * last()			{ return (clist_e *)prev_e; }$/;"	f	class:clist_e
last	/cad2/ece540s/basesuif-1.1.2/include/hawg/annote.h	/^    icon_list_e *first, *last;$/;"	m	class:annote
last	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    void * last()			{ return ((cons_e *)tail_e)->data; }$/;"	f	class:conslist
last	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode *last() { return (Snode *)conslist::last(); }$/;"	f	class:Snode_list
last	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	String_seg *last() { return (String_seg*)tail_e; }$/;"	f	struct:String
last	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record *last() { return (ty_record *)conslist::last(); }$/;"	f	class:ty_record_list
last	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode *last() { return (Snode *)conslist::last(); }$/;"	f	class:Snode_list
last	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode *last() { return (Snode *)conslist::last(); }$/;"	f	class:Snode_list
last	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	String_seg *last() { return (String_seg*)tail; }$/;"	f	struct:String
last	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record *last() { return (ty_record *)conslist::last(); }$/;"	f	class:ty_record_list
last	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    int first, last;$/;"	m	class:bit_set
last_nb	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    annote *first_nb, *last_nb;$/;"	m	class:instruction
lb	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    array_info *lb,*ub;$/;"	m	struct:dep_for_annote
lb	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	array_info *lb,*ub;$/;"	m	struct:dep_node_for
lb	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	array_info *lb,*ub;$/;"	m	struct:dep_node_for
lb	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    int lb()				{ return first; }$/;"	f	class:bit_set
lb	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    int lb()				{ return first; }$/;"	f	class:bit_set
lb_list	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *lb_list()		{ return lower; }$/;"	f	class:tree_for
lb_op	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    operand lb_op()			{ return lower->op(); }$/;"	f	class:tree_for
lb_part	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    ast_node_list *lb_part;$/;"	m	class:ast_node_for
lb_valid	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	boolean *lb_valid;$/;"	m	class:full_hash_entry
lb_valid	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int *lb_valid;$/;"	m	class:full_hash_entry
lb_valid	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int *lb_valid;$/;"	m	class:full_hash_entry
lbexpr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		expptr lbexpr;	\/* expression to calculate lower bound *\/$/;"	m	struct:Dimblock::__anon11
lbvar	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		expptr lbvar;	\/* lower bound var *\/$/;"	m	struct:Dimblock::__anon11
lcharp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr lcharp;			\/* last-char-index-pointer (in$/;"	m	struct:Primblock
ld	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    long double ld;$/;"	m	union:any_type
ldc	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	} ldc;$/;"	m	union:simple_instr_struct::__anon50	typeref:struct:simple_instr_struct::__anon50::__anon53
ldc	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	} ldc;$/;"	m	union:simple_instr_struct::__anon27	typeref:struct:simple_instr_struct::__anon27::__anon30
le	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list_e *le;		\/* list element containing this node *\/$/;"	m	class:tree_node
le_counter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    static int le_counter;$/;"	m	class:level_elem
leaf_basic_sym_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    basic_sym_walkee *leaf_basic_sym_walkee;$/;"	m	class:so_walker
leaf_basic_type_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    basic_type_walkee *leaf_basic_type_walkee;$/;"	m	class:so_walker
leaf_simple_sym_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    simple_sym_walkee *leaf_simple_sym_walkee;$/;"	m	class:so_walker
leaf_simple_type_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    simple_type_walkee *leaf_simple_type_walkee;$/;"	m	class:so_walker
left	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    dep_node_si *left() {return (dep_node_si *)ast_node_suif_instr::left();}$/;"	f	struct:dep_node_si
left	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    dep_node_si *left() {return (dep_node_si *)ast_node_suif_instr::left();}$/;"	f	struct:dep_node_si
left	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    ast_node_suif_instr * left()	{ return lp; }$/;"	f	class:ast_node_suif_instr
left_cache	/cad2/ece540s/basesuif-1.1.2/include/expr_map.h	/^    operand_dlist_e *left_cache;$/;"	m	class:expr_map
left_cache	/cad2/ece540s/basesuif-1.1.2/include/useful/expr_map.h	/^    operand_dlist_e *left_cache;$/;"	m	class:expr_map
left_list	/cad2/ece540s/basesuif-1.1.2/include/expr_map.h	/^    operand_dlist left_list;$/;"	m	class:expr_map
left_list	/cad2/ece540s/basesuif-1.1.2/include/useful/expr_map.h	/^    operand_dlist left_list;$/;"	m	class:expr_map
leftp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr leftp;$/;"	m	struct:Exprblock
len	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    int len;$/;"	m	class:if_type
len	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    int len;				\/* number of bits *\/$/;"	m	struct:simple_type_struct
len	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    int len;				\/* number of bits *\/$/;"	m	struct:simple_type_struct
length	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	int length;$/;"	m	struct:String_seg
length	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	int length;$/;"	m	struct:String_seg
level	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    int level;$/;"	m	class:access_ineq_e
level	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    int level;$/;"	m	class:access_ineq_e
level	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    int level;$/;"	m	class:access_ineq_e
level_elem	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^class level_elem {$/;"	c
lhs	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *lhs;$/;"	m	class:SVR_meet
lhs	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *lhs;$/;"	m	class:SVR_meet
lhs_binder	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Q_binder *lhs_binder;$/;"	m	class:SVR_meet
lhs_binder	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Q_binder *lhs_binder;$/;"	m	class:SVR_meet
lhs_node	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_node *lhs_node;$/;"	m	class:SVR_meet
lhs_node	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_node *lhs_node;$/;"	m	class:SVR_meet
lib_exit_f	/cad2/ece540s/basesuif-1.1.2/include/suif/initsuif.h	/^typedef void (*lib_exit_f)();$/;"	t
lib_init_f	/cad2/ece540s/basesuif-1.1.2/include/suif/initsuif.h	/^typedef void (*lib_init_f)(int& argc, char *argv[]);$/;"	t
limit	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^    inline PTR_TYPE **limit()$/;"	f	class:Parameterized_x_array1
limit	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  TYPE *limit()$/;"	f	class:Parameterized_x_array0
limit	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    inline PTR_TYPE **limit()$/;"	f	class:Parameterized_x_array1
limit	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    inline PTR_TYPE **limit()$/;"	f	class:Parameterized_x_array1
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq() {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq(coeff & c):integer_matrix(&c) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq(coeff * c):integer_matrix(c) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq(int rows,int cols):integer_matrix(rows, cols) {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq(integer_matrix & m):integer_matrix(m) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq(integer_matrix * m):integer_matrix(m) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq(lin_ineq & m):integer_matrix((integer_matrix &)m) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq(lin_ineq & m, int rows):integer_matrix((integer_matrix &)m, rows) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq(lin_ineq * m):integer_matrix((integer_matrix *)m) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq(lin_ineq * m, int rows):integer_matrix((integer_matrix *)m, rows) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^class lin_ineq:public integer_matrix {$/;"	c
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq() {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq(coeff & c):integer_matrix(&c) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq(coeff * c):integer_matrix(c) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq(int rows,int cols):integer_matrix(rows, cols) {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq(integer_matrix & m):integer_matrix(m) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq(integer_matrix * m):integer_matrix(m) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq(lin_ineq & m):integer_matrix((integer_matrix &)m) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq(lin_ineq & m, int rows):integer_matrix((integer_matrix &)m, rows) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq(lin_ineq * m):integer_matrix((integer_matrix *)m) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq(lin_ineq * m, int rows):integer_matrix((integer_matrix *)m, rows) {  } $/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^class lin_ineq:public integer_matrix {$/;"	c
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq() {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq(const coeff & c):integer_matrix(&c) {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq(const coeff * c):integer_matrix(c) {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq(const integer_matrix & m):integer_matrix(m) {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq(const integer_matrix * m):integer_matrix(m) {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq(const lin_ineq & m):integer_matrix(m) {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq(const lin_ineq & m, int rows):integer_matrix(m, rows) {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq(const lin_ineq * m):integer_matrix(m) {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq(const lin_ineq * m, int rows):integer_matrix(m, rows) {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq(int rows,int cols):integer_matrix(rows, cols) {  }$/;"	f	class:lin_ineq
lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^class lin_ineq:public integer_matrix {$/;"	c
lin_ineq_difference_iter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq_difference_iter(const lin_ineq & A, const lin_ineq & B)$/;"	f	class:lin_ineq_difference_iter
lin_ineq_difference_iter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq_difference_iter(const lin_ineq * A, const lin_ineq * B)$/;"	f	class:lin_ineq_difference_iter
lin_ineq_difference_iter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^class lin_ineq_difference_iter {$/;"	c
lin_ineq_negate_iter	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq_negate_iter(lin_ineq & leq) { init(leq); }$/;"	f	class:lin_ineq_negate_iter
lin_ineq_negate_iter	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq_negate_iter(lin_ineq * leq) { init(*leq); }$/;"	f	class:lin_ineq_negate_iter
lin_ineq_negate_iter	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^class lin_ineq_negate_iter {$/;"	c
lin_ineq_negate_iter	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq_negate_iter(lin_ineq & leq) { init(leq); }$/;"	f	class:lin_ineq_negate_iter
lin_ineq_negate_iter	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq_negate_iter(lin_ineq * leq) { init(*leq); }$/;"	f	class:lin_ineq_negate_iter
lin_ineq_negate_iter	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^class lin_ineq_negate_iter {$/;"	c
lin_ineq_negate_iter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq_negate_iter(const lin_ineq & leq) { init(leq); }$/;"	f	class:lin_ineq_negate_iter
lin_ineq_negate_iter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq_negate_iter(const lin_ineq * leq) { init(*leq); }$/;"	f	class:lin_ineq_negate_iter
lin_ineq_negate_iter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^class lin_ineq_negate_iter {$/;"	c
lin_ineq_op	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq_op(constraint & k) { kind = k; }$/;"	f	class:lin_ineq_op
lin_ineq_op	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^class lin_ineq_op {$/;"	c
lin_ineq_op	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq_op(constraint & k) { kind = k; }$/;"	f	class:lin_ineq_op
lin_ineq_op	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^class lin_ineq_op {$/;"	c
lin_ineq_op	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq_op(const constraint & k) { kind = k; }$/;"	f	class:lin_ineq_op
lin_ineq_op	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^class lin_ineq_op {$/;"	c
line_no	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	int line_no;$/;"	m	struct:String
line_no	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	int line_no;$/;"	m	struct:String
link	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    seek_proc_e * link()		{ return next; }$/;"	f	class:seek_proc_e
link	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e * link()			{ return (alist_e *)next; }$/;"	f	class:alist_e
link	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual void link(Node_index,Node_index)  { assert(0); }$/;"	f	class:CFG_1_reversed
list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_list2 list;$/;"	m	struct:sc_list
list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_list2 list;$/;"	m	struct:sc_list
list	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    suif_object_list *list(void)  { return &marked_list; }$/;"	f	class:temp_marker
list_e	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list_e *list_e()		{ return le; }$/;"	f	class:tree_node
listblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Listblock listblock;$/;"	m	union:Expression	typeref:struct:Expression::Listblock
listp	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    ast_node_suif_instr **listp;$/;"	m	class:ast_node_suif_instr
listp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	chainp listp;$/;"	m	struct:Listblock
litdval	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		double litdval[2];$/;"	m	union:Literal::__anon13
litival	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		ftnint litival;$/;"	m	union:Literal::__anon13
litnum	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	short litnum;			\/* numeric part of the assembler$/;"	m	struct:Literal
littype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	short littype;$/;"	m	struct:Literal
lituse	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int lituse;		\/* usage count *\/$/;"	m	struct:Literal
litval	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		} litval;$/;"	m	struct:Literal	typeref:union:Literal::__anon13
local_def	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *local_def;$/;"	m	class:SV_node
local_def	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *local_def;$/;"	m	class:SV_node
logical	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef int logical;$/;"	t
logical	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef int logical;$/;"	t
long_val	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^        long long_val;$/;"	m	union:i_integer::__anon39
lookup	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    void * lookup(void *k)		{ return search(k)->info; }$/;"	f	class:cached_alist
lookup	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	/^    hash_e *lookup(hash_compare check, hash_e *k)$/;"	f	class:hash_chain
lookup	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	/^    hash_e *lookup(hash_e *e)$/;"	f	class:hash_table
lookup	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^    hash_e *lookup(hash_compare check, hash_e *k)$/;"	f	class:hash_chain
lookup	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^    hash_e *lookup(hash_e *e)$/;"	f	class:hash_table
lookup_label	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    label_sym *lookup_label(char *s, boolean up=TRUE)$/;"	f	class:block_symtab
lookup_proc	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    proc_sym *lookup_proc(char *s, boolean up=TRUE)$/;"	f	class:global_symtab
lookup_var	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    var_sym *lookup_var(char *name, boolean up=TRUE)$/;"	f	class:base_symtab
loose	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    void loose() { loose_symbols=1; }$/;"	f	class:istream
loose	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    inline int loose()$/;"	f	class:Symbol
loose	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    void loose() { loose_symbols=1; }$/;"	f	class:istream
loose	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    inline int loose()$/;"	f	class:Symbol
loose_symbols	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    int loose_symbols;$/;"	m	class:istream
loose_symbols	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    int loose_symbols;$/;"	m	class:istream
low	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	int_indef low[LOWUPSIZE];\/\/ lower and upper bounds on t variables$/;"	m	class:exact
low	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int_indef low[lowupsize];\/\/ lower and upper bounds on t variables$/;"	m	class:exact
low	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int_indef low[lowupsize];\/\/ lower and upper bounds on t variables$/;"	m	class:exact
low	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    int low;$/;"	m	class:in_mbr
low	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    array_bound low;$/;"	m	class:array_type
lower	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    if_reg lower;			\/* pseudo reg *\/$/;"	m	class:ast_node_for
lower	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    int lower, range;$/;"	m	class:in_mbr
lower	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    int lower()				{ return low; }$/;"	f	class:in_mbr
lower	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *bod, *lpad, *lower, *upper, *step;$/;"	m	class:tree_for
lower_bound	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    array_bound lower_bound()		{ return low; }$/;"	f	class:array_type
lowupsize	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^const int lowupsize=20;$/;"	v
lowupsize	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^const int lowupsize=20;$/;"	v
lp	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    ast_node_suif_instr *lp;$/;"	m	class:ast_node_suif_instr
lpa	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    annote_list lpa;$/;"	m	class:ast_node_for
lpad	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *bod, *lpad, *lower, *upper, *step;$/;"	m	class:tree_for
lq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    lin_ineq   lq;$/;"	m	class:named_lin_ineq
lr_dep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int lr_dep;$/;"	m	class:dependency_test
lr_dep	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int lr_dep;$/;"	m	class:dependency_test
lr_dep	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int lr_dep;$/;"	m	class:dependency_test
lr_ind	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int lr_ind;$/;"	m	class:dependency_test
lr_ind	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int lr_ind;$/;"	m	class:dependency_test
lr_ind	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int lr_ind;$/;"	m	class:dependency_test
lr_not_ok	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int lr_not_ok;$/;"	m	class:dependency_test
lr_not_ok	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int lr_not_ok;$/;"	m	class:dependency_test
lr_not_ok	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int lr_not_ok;$/;"	m	class:dependency_test
lr_ok	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int lr_ok;$/;"	m	class:dependency_test
lr_ok	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int lr_ok;$/;"	m	class:dependency_test
lr_ok	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int lr_ok;$/;"	m	class:dependency_test
lu_decomp	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    fract_matrix lu_decomp;  \/\/ LU decomp of the matrix$/;"	m	class:matrix
m	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    int m,n;$/;"	m	class:coeff
m	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    int m,n;$/;"	m	class:coeff
m	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^	int m() { return mm; }$/;"	f	class:integer_matrix
m	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^	int m() { return mm; }$/;"	f	class:integer_matrix
m	/cad2/ece540s/basesuif-1.1.2/include/suifmath/coeff.h	/^    int m,n;$/;"	m	class:coeff
m	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    int m() const { return rows; }$/;"	f	class:fract_matrix
m	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^	int m() const { return mm; }$/;"	f	class:integer_matrix
m	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    integer_matrix * m;$/;"	m	class:nim_op
m	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    int m() { return elems.m(); } $/;"	f	class:matrix
m	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    int m() const                               { return lq.m(); }$/;"	f	class:named_lin_ineq
m	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int m()                                     { return xm; }$/;"	f	class:named_sc_fm
m	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int m()                             { return mm; }$/;"	f	class:sc_fm_results
m	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    int m()                                     { return L[0].m(); }$/;"	f	class:named_symcoeff_ineq
machine_params	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^struct machine_params {$/;"	s
macro_status	/cad2/ece540s/basesuif-1.1.2/include/flow/nextinstr.h	/^    macro_status()			{ macro_type = NULL;$/;"	f	class:macro_status
macro_status	/cad2/ece540s/basesuif-1.1.2/include/flow/nextinstr.h	/^    macro_status(char *mt, char *e)	{ macro_type = mt; elaboration = e;$/;"	f	class:macro_status
macro_status	/cad2/ece540s/basesuif-1.1.2/include/flow/nextinstr.h	/^class macro_status {$/;"	c
macro_type	/cad2/ece540s/basesuif-1.1.2/include/flow/nextinstr.h	/^    char *macro_type;$/;"	m	class:macro_status
magic_list	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    static unsigned * magic_list;$/;"	m	class:named_sc_fm
magic_num	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    unsigned magic_num; \/\/ if two constraints are equal => magic #'s are equal$/;"	m	class:sc_fm_constraint
make_filter	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint make_filter(int type) { return make_filter(type, 0, 1000); }$/;"	f	class:constraint
make_filter	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint make_filter(int type, int pos) { return make_filter(type, pos, pos); }$/;"	f	class:constraint
make_filter	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint make_filter(int type) { return make_filter(type, 0, 1000); }$/;"	f	class:constraint
make_filter	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint make_filter(int type, int pos) { return make_filter(type, pos, pos); }$/;"	f	class:constraint
make_filter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint make_filter(int type) const$/;"	f	class:constraint
make_filter	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint make_filter(int type, int pos) const$/;"	f	class:constraint
map	/cad2/ece540s/basesuif-1.1.2/include/expr_map.h	/^    operand map(var_sym *source_var) { return map(operand(source_var)); }$/;"	f	class:expr_map
map	/cad2/ece540s/basesuif-1.1.2/include/useful/expr_map.h	/^    operand map(var_sym *source_var) { return map(operand(source_var)); }$/;"	f	class:expr_map
mark	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    int mark;$/;"	m	struct:marked_nsi
mark_cond	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    void mark_cond(int i)                       { cond_num = i; }$/;"	f	class:named_sc_merge
mark_eater	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^typedef void (*mark_eater)(proc *, in_mrk *);$/;"	t
mark_excess	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    void mark_excess(int i)                     { excess_num = i; }$/;"	f	class:named_sc_merge
marked_list	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    suif_object_list marked_list;$/;"	m	class:temp_marker
marked_nsi	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    marked_nsi(int m) : mark(m)                                         { }$/;"	f	struct:marked_nsi
marked_nsi	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    marked_nsi(marked_nsi & mn) : nsi(mn.nsi), mark(mn.mark)            { }$/;"	f	struct:marked_nsi
marked_nsi	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    marked_nsi(marked_nsi * mn) : nsi(mn->nsi), mark(mn->mark)          { }$/;"	f	struct:marked_nsi
marked_nsi	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    marked_nsi(named_symcoeff_ineq & i, int m) : nsi(i), mark(m)        { }$/;"	f	struct:marked_nsi
marked_nsi	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^struct marked_nsi {$/;"	s
marks	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^    ilist marks;$/;"	m	class:proc
marktype	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^enum marktype {$/;"	g
matrix	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^class matrix {$/;"	c
max	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & max(block &a,$/;"	f	class:block
max	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int *min, *max;		\/\/ min and max values for this dimension$/;"	m	class:access_vector
max	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int *min, *max;		\/\/ min and max values for this dimension$/;"	m	class:access_vector
max	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int *min, *max;		\/\/ min and max values for this dimension$/;"	m	class:access_vector
max	/cad2/ece540s/basesuif-1.1.2/include/flow/reginfo.h	/^    if_reg max[rk_node + 1];$/;"	m	class:register_manager
max	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	158;"	d
max	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	158;"	d
max_bb_lev	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int max_bb_lev;$/;"	m	class:dependency_test
max_in_ineqs	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int max_in_ineqs;$/;"	m	class:dependency_test
max_lab	/cad2/ece540s/basesuif-1.1.2/include/flow/labelinfo.h	/^    int max_lab;$/;"	m	class:label_manager
maxleng	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	ftnint maxleng;$/;"	m	struct:Extsym
maxno	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int maxno;		\/* highest curno value for this common block *\/$/;"	m	struct:Extsym
mbr	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	} mbr;$/;"	m	union:simple_instr_struct::__anon50	typeref:struct:simple_instr_struct::__anon50::__anon55
mbr	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	} mbr;$/;"	m	union:simple_instr_struct::__anon27	typeref:struct:simple_instr_struct::__anon27::__anon32
meet_body	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *meet_body;$/;"	m	class:SV_dflow
meet_body	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *meet_body;$/;"	m	class:SV_dflow
member	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    char *member(unsigned n)		{ check_range(n); return names[n]; }$/;"	f	class:enum_type
member_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	Symbol_list member_list;$/;"	m	class:ty_enum
member_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol_list member_list;$/;"	m	class:ty_record
member_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	Symbol_list member_list;$/;"	m	class:ty_enum
member_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol_list member_list;$/;"	m	class:ty_record
members	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Hashed_scope members;$/;"	m	class:ty_record
members	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Hashed_scope members;$/;"	m	class:ty_record
memno	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	long memno;		\/* when vstg == STGCONST, this is the$/;"	m	struct:Addrblock
memoffset	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr memoffset;	\/* used in subscript computations, usually *\/$/;"	m	struct:Addrblock
memregs	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_list memregs;	\/\/ access vector for indirections thru regs$/;"	m	class:access_vector
memregs	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_list memregs;	\/\/ access vector for indirections thru regs$/;"	m	class:access_vector
memregs	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_list memregs;	\/\/ access vector for indirections thru regs$/;"	m	class:access_vector
min	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & min(block &a,$/;"	f	class:block
min	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int *min, *max;		\/\/ min and max values for this dimension$/;"	m	class:access_vector
min	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int *min, *max;		\/\/ min and max values for this dimension$/;"	m	class:access_vector
min	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int *min, *max;		\/\/ min and max values for this dimension$/;"	m	class:access_vector
min	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	157;"	d
min	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	157;"	d
mips	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	164;"	d
mips	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	164;"	d
mknew	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^    void mknew(int s) {  if(n() != s) { delete R;  sz = s; R = new int[n()]; } }$/;"	f	class:integer_row
mknew	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^    void mknew(int s) {  if(n() != s) { delete R;  sz = s; R = new int[n()]; } }$/;"	f	class:integer_row
mm	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^	int mm;  \/\/ number of rows$/;"	m	class:integer_matrix
mm	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^	int mm;  \/\/ number of rows$/;"	m	class:integer_matrix
mm	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^	int mm;  \/\/ number of rows$/;"	m	class:integer_matrix
mm	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int mm;$/;"	m	class:sc_fm_results
mn_list	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    marked_nsi_list mn_list;                    \/\/ input list$/;"	m	class:named_sc_merge
mod	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & mod(block &a,$/;"	f	class:block
mod_this	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    tree_for *mod_this;	        \/\/ innermost for which defines a variable in $/;"	m	class:access_vector
mod_this	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    ast_node_for *mod_this;	\/\/ innermost for which defines a variable in $/;"	m	class:access_vector
mod_this	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    ast_node_for *mod_this;	\/\/ innermost for which defines a variable in $/;"	m	class:access_vector
modified_order	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFinfo **modified_order;$/;"	m	class:CFG_0
modified_order	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  CFinfo **modified_order;$/;"	m	class:CFG
modified_order	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  CFinfo **modified_order;$/;"	m	class:CFG
modifier_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    modifier_type()			{ }$/;"	f	class:modifier_type
modifier_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^class modifier_type : public type_node {$/;"	c
mt_bbend	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    mt_bbend,$/;"	e	enum:marktype
mt_bbstart	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    mt_bbstart,$/;"	e	enum:marktype
mt_loop	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    mt_loop,$/;"	e	enum:marktype
mt_macro	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    mt_macro$/;"	e	enum:marktype
mt_nomark	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    mt_nomark,$/;"	e	enum:marktype
mt_procbegin	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    mt_procbegin,$/;"	e	enum:marktype
mt_procend	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    mt_procend,$/;"	e	enum:marktype
mt_syminfo	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    mt_syminfo,$/;"	e	enum:marktype
mtflist	/cad2/ece540s/basesuif-1.1.2/include/general/mtflist.h	/^class mtflist : public glist {$/;"	c
mtflist	/cad2/ece540s/basesuif-1.1.2/include/suif/mtflist.h	/^class mtflist : public glist {$/;"	c
mtflist_test	/cad2/ece540s/basesuif-1.1.2/include/general/mtflist.h	/^typedef boolean (*mtflist_test)(glist_e *e, void *k);$/;"	t
mtflist_test_f	/cad2/ece540s/basesuif-1.1.2/include/suif/mtflist.h	/^typedef boolean (*mtflist_test_f)(glist_e *e, void *k);$/;"	t
mtype	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    int mtype;$/;"	m	class:in_mrk
multi_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    multi_init_struct(int init_size, immed_list *init_data)$/;"	f	class:multi_init_struct
multi_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    multi_init_struct(void) { size = 0; data = NULL; }$/;"	f	class:multi_init_struct
multi_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^class multi_init_struct : public base_init_struct$/;"	c
my_for	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    tree_for * my_for;$/;"	m	struct:dep_for_annote
my_instr	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    instruction * my_instr;$/;"	m	struct:dep_instr_annote
my_name	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    char *my_name;			\/\/ of structs, enums, unions$/;"	m	class:type_node
my_name	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    char *my_name;$/;"	m	class:enum_type
my_name	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    char *my_name;$/;"	m	class:struct_type
my_proc	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    tree_proc * my_proc;$/;"	m	struct:dep_proc_annote
n	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    int m,n;$/;"	m	class:coeff
n	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    int m,n;$/;"	m	class:coeff
n	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    int n, d;$/;"	m	class:fract
n	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^	int n() { return nn; }$/;"	f	class:integer_matrix
n	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^    int n() { return sz; }$/;"	f	class:integer_row
n	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^	int n() { return nn; }$/;"	f	class:integer_matrix
n	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^    int n() { return sz; }$/;"	f	class:integer_row
n	/cad2/ece540s/basesuif-1.1.2/include/suifmath/coeff.h	/^    int m,n;$/;"	m	class:coeff
n	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    int n, d;$/;"	m	class:fract
n	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    int n() const { return cols; }$/;"	f	class:fract_matrix
n	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    int n() const   { return size; }$/;"	f	class:fract_vector
n	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^	int n() const { return nn; }$/;"	f	class:integer_matrix
n	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    int n() const { return sz; }$/;"	f	class:integer_row
n	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    int n() { return elems.n(); } $/;"	f	class:matrix
n	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    int n() const                               { assert(nt.n() == lq.n());$/;"	f	class:named_lin_ineq
n	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    int n() const                               { return sz; }$/;"	f	class:name_table
n	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int n()                                     { return nm_c.n(); }$/;"	f	class:named_sc_fm
n	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int n()                                     { return nn; }$/;"	f	class:sc_fm_constraint
n	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    int n()                                     { return nt_c.n(); }$/;"	f	class:named_symcoeff_ineq
n_Seqn	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^class n_Seqn {$/;"	c
n_Seqn	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^class n_Seqn {$/;"	c
n_Seqn	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^class n_Seqn {$/;"	c
n_annotations	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    int n_annotations()			{ return n_annotes; }$/;"	f	class:instruction
n_annotes	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    int n_annotes;$/;"	m	class:instruction
n_backward_edges	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int *n_forward_edges, *n_backward_edges;$/;"	m	class:CFG_1
n_edges	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int n_edges;$/;"	m	class:PP_state
n_edges	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int n_edges;$/;"	m	class:PP_state
n_elems	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    int n_elems()			{ return ntypes; }$/;"	f	class:type_node
n_forward_edges	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int *n_forward_edges, *n_backward_edges;$/;"	m	class:CFG_1
n_headers	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int n_nodes, n_headers, n_unreachables;$/;"	m	class:CFG_0
n_headers	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  int n_nodes, n_headers, n_unreachables;$/;"	m	class:CFG
n_headers	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  int n_nodes, n_headers, n_unreachables;$/;"	m	class:CFG
n_irred	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int n_irred;$/;"	m	class:CFG_0
n_irred	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  int n_irred;$/;"	m	class:CFG
n_irred	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  int n_irred;$/;"	m	class:CFG
n_nodes	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int n_nodes, n_headers, n_unreachables;$/;"	m	class:CFG_0
n_nodes	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int n_nodes;$/;"	m	class:PP_mach
n_nodes	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int n_nodes;$/;"	m	class:SV_dflow
n_nodes	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  int n_nodes, n_headers, n_unreachables;$/;"	m	class:CFG
n_nodes	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int n_nodes;$/;"	m	class:PP_mach
n_nodes	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int n_nodes;$/;"	m	class:SV_dflow
n_nodes	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  int n_nodes, n_headers, n_unreachables;$/;"	m	class:CFG
n_states	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^  int n_states;$/;"	m	class:Sprob_switches
n_states	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int n_states;$/;"	m	class:PP_mach
n_states	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^  int n_states;$/;"	m	class:Sprob_switches
n_states	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int n_states;$/;"	m	class:PP_mach
n_states	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^  int n_states;$/;"	m	class:Sprob_switches
n_unreachables	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int n_nodes, n_headers, n_unreachables;$/;"	m	class:CFG_0
n_unreachables	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  int n_nodes, n_headers, n_unreachables;$/;"	m	class:CFG
n_unreachables	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  int n_nodes, n_headers, n_unreachables;$/;"	m	class:CFG
n_values	/cad2/ece540s/basesuif-1.1.2/include/hawg/annote.h	/^    int n_values()			{ return nvals; }$/;"	f	class:annote
name	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^    path *name;$/;"	m	class:proc
name	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    char * name()			{ return proc_name; }$/;"	f	class:seek_proc_e
name	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    char *name()			{ return my_name; }$/;"	f	class:type_node
name	/cad2/ece540s/basesuif-1.1.2/include/hawg/annote.h	/^    char *name;$/;"	m	class:annote
name	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    char *name;				\/* always points to heap *\/$/;"	m	class:if_istream
name	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    char *name;				\/* always points to heap *\/$/;"	m	class:if_ostream
name	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    char * name()			{ return cname; }$/;"	f	class:path_base
name	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    char *name;				\/* hi-level name; always in heap *\/$/;"	m	class:path_info
name	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    const char *name;$/;"	m	class:istream
name	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^  const char *name;$/;"	m	struct:ostream
name	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *const name;$/;"	m	class:SV_dflow
name	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    const char *name;$/;"	m	class:Symbol
name	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *name;$/;"	m	struct:Namelist
name	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *name;$/;"	m	struct:Vardesc
name	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	    Namep name;		\/* contains a pointer into the hash table *\/$/;"	m	union:Addrblock::__anon9
name	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char *name, *tyid;$/;"	m	struct:Comvar
name	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^	char *name;$/;"	m	struct:iob_data
name	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *name;$/;"	m	struct:Namelist
name	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *name;$/;"	m	struct:Vardesc
name	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    const char *name;$/;"	m	class:istream
name	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^  const char *name;$/;"	m	struct:ostream
name	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *const name;$/;"	m	class:SV_dflow
name	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    const char *name;$/;"	m	class:Symbol
name	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    char *name;				\/* printable string *\/$/;"	m	struct:simple_sym_struct
name	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    char *name;				\/* printable string *\/$/;"	m	struct:simple_sym_struct
name	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    char *name()			{ return nm; }$/;"	f	class:annote_def
name	/cad2/ece540s/basesuif-1.1.2/include/suif/annote.h	/^    char *name()			{ return nm; }$/;"	f	class:annote
name	/cad2/ece540s/basesuif-1.1.2/include/suif/cmdparse.h	/^    char *name;$/;"	m	struct:cmd_line_option
name	/cad2/ece540s/basesuif-1.1.2/include/suif/initsuif.h	/^    char *name;				\/* name of the library (e.g. "suif") *\/$/;"	m	struct:suif_library
name	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    char *name()			{ return opnm; }$/;"	f	class:in_gen
name	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    char *name()			{ return nm; }$/;"	f	class:base_stream
name	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    char *name()			{ return nm; }$/;"	f	class:sym_node
name	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    char *name()			{ return nm; }$/;"	f	class:base_symtab
name	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    char *name()			{ return my_name; }$/;"	f	class:enum_type
name	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    char *name()			{ return my_name; }$/;"	f	class:struct_type
name	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    char * name()                                 { return nm; }$/;"	f	struct:code_context_annote
name_store	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^	name_store() { num_vars = num_params = aux = 0; }$/;"	f	class:name_store
name_store	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^	name_store(name_store & nm) { init(nm); }$/;"	f	class:name_store
name_store	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^class name_store$/;"	c
name_store	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^	name_store() { num_vars = num_params = aux = 0; }$/;"	f	class:name_store
name_store	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^	name_store(name_store & nm) { init(nm); }$/;"	f	class:name_store
name_store	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^class name_store$/;"	c
name_store	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	/^	name_store() { num_vars = num_params = aux = 0; }$/;"	f	class:name_store
name_store	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	/^	name_store(name_store & nm) { init(nm); }$/;"	f	class:name_store
name_store	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	/^class name_store$/;"	c
name_table	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table()                                { L = NULL; sz = 1; }$/;"	f	class:name_table
name_table	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table(const name_table & nt)           { L = NULL; sz = 1; init(nt); }$/;"	f	class:name_table
name_table	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table(const name_table * nt)           { L = NULL; sz = 1; init(*nt); }$/;"	f	class:name_table
name_table	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table(int s)                           { L = NULL; sz = 1; init(s); }$/;"	f	class:name_table
name_table	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^class name_table {$/;"	c
name_table_entry	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table_entry()                          { init(); }$/;"	f	class:name_table_entry
name_table_entry	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table_entry(const immed & im)          { init(im); }$/;"	f	class:name_table_entry
name_table_entry	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table_entry(name_table_entry_kind k,$/;"	f	class:name_table_entry
name_table_entry	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^class name_table_entry {$/;"	c
name_table_entry_kind	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^enum name_table_entry_kind { nte_none,$/;"	g
nameblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Nameblock nameblock;$/;"	m	union:Expression	typeref:struct:Expression::Nameblock
named_lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    named_lin_ineq() : lq(0, 1)                 { init(); }$/;"	f	class:named_lin_ineq
named_lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    named_lin_ineq(const immed_list & il)       { init(); init(il); }$/;"	f	class:named_lin_ineq
named_lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    named_lin_ineq(const name_table &n,$/;"	f	class:named_lin_ineq
named_lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    named_lin_ineq(const named_lin_ineq & c)    { init(); init(c);  }$/;"	f	class:named_lin_ineq
named_lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    named_lin_ineq(const named_lin_ineq * c)    { init(); init(*c); }$/;"	f	class:named_lin_ineq
named_lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    named_lin_ineq(int m, int n) : nt(n),lq(m, n) { init();  }$/;"	f	class:named_lin_ineq
named_lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^class named_lin_ineq {$/;"	c
named_sc_fm	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    named_sc_fm(named_symcoeff_ineq& x, boolean keep=TRUE) { init(x, keep); }$/;"	f	class:named_sc_fm
named_sc_fm	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    named_sc_fm(named_symcoeff_ineq* x, boolean keep=TRUE) { init(*x,keep); }$/;"	f	class:named_sc_fm
named_sc_fm	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^class named_sc_fm {$/;"	c
named_sc_merge	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^class named_sc_merge {$/;"	c
named_symcoeff_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^class named_symcoeff_ineq {$/;"	c
namelist	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		chainp namelist;	\/* points to chain of names in$/;"	m	union:Nameblock::__anon7
namep	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	Namep namep;			\/* Pointer to structure Nameblock *\/$/;"	m	struct:Primblock
names	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    char **names;$/;"	m	class:enum_type
names	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    char **names;$/;"	m	class:struct_type
names	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table & names()                        { return nt; }$/;"	f	class:named_lin_ineq
names	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    static name_table & names()                 { return *cnt; }$/;"	f	class:named_sc_merge
nargs	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    unsigned nargs;		\/* number of arguments *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon54
nargs	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    unsigned nargs;		\/* number of arguments *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon31
nargs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned nargs;$/;"	m	class:in_cal
nargs	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    unsigned nargs;$/;"	m	class:func_type
ncpy	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    num_copies * ncpy;          \/\/ for tree_nodes and tree_node_lists$/;"	m	struct:block_info
ncustom	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    int ncustom;$/;"	m	class:code_context
ndim	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int ndim;$/;"	m	struct:Dimblock
needs_var	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  Flag is_join, is_fork, begins_bb, needs_var;$/;"	m	class:CFinfo
needs_var	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    signed char needs_var;$/;"	m	class:Seqn
needs_var	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    char needs_var;$/;"	m	class:Seqn
needs_var	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    char needs_var;$/;"	m	class:Seqn
needs_var	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  Flag is_join, is_fork, begins_bb, needs_var;$/;"	m	class:CFinfo
needs_var	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  Flag is_join, is_fork, begins_bb, needs_var;$/;"	m	class:CFinfo
nelt	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr nelt;		\/* This is NULL if the array is unbounded *\/$/;"	m	struct:Dimblock
nelt	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	ftnint offset, nelt;$/;"	m	struct:Comvar
nelt	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^	int nelt, type;$/;"	m	struct:io_setup
new_label	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & new_label(char *nm)  { return mk_label(nm); }$/;"	f	class:block
new_label	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & new_label(label_sym *ls) { return mk_label(ls); }$/;"	f	class:block
new_peer	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    virtual base_symtab *new_peer(char *n) { return new block_symtab(n); }$/;"	f	class:block_symtab
new_peer	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    virtual base_symtab *new_peer(char *n) { return new global_symtab(n); }$/;"	f	class:global_symtab
new_peer	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    virtual base_symtab *new_peer(char *n) { return new proc_symtab(n); }$/;"	f	class:proc_symtab
new_peer	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    virtual base_symtab *new_peer(char *n)$/;"	f	class:file_symtab
new_sym	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & new_sym(char * parse_tp,$/;"	f	class:block
new_sym	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & new_sym(const_type tp)    { return mk_nr(get_typ(tp)); }$/;"	f	class:block
new_sym	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & new_sym(const_type tp,$/;"	f	class:block
new_sym	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & new_sym(type_node * tp,$/;"	f	class:block
new_sym	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    static block & new_sym(char * parse_tp,$/;"	f	class:block
new_sym	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    static block & new_sym(type_node * tp)    { return mk_nr(tp); }$/;"	f	class:block
new_sym	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    static block & new_sym(type_node * tp,$/;"	f	class:block
new_var_body	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *new_var_body;$/;"	m	class:SV_dflow
new_var_body	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *new_var_body;$/;"	m	class:SV_dflow
new_version	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int new_version;$/;"	m	class:SV_dflow
new_version	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int new_version;$/;"	m	class:SV_dflow
newdefs	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    var_def_list newdefs;$/;"	m	struct:replacements
newinstrs	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    instruction_list newinstrs;$/;"	m	struct:replacements
newsyms	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    sym_node_list newsyms;$/;"	m	struct:replacements
newtabs	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    base_symtab_list newtabs;$/;"	m	struct:replacements
newtypes	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    type_node_list newtypes;$/;"	m	struct:replacements
next	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_e * next;$/;"	m	class:access_ineq_e
next	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_vector *next()$/;"	f	class:array_info_iter
next	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^	distance_vector_e *next() { return((distance_vector_e*)nxt); }$/;"	f	struct:distance_vector_iter
next	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^	dvlist_e *next() { return((dvlist_e*)nxt); }$/;"	f	struct:dvlist_iter
next	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	UD_hash_entry *next;$/;"	m	class:UD_hash_entry
next	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	X_hash_entry *next;$/;"	m	class:X_hash_entry
next	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	full_hash_entry *next;$/;"	m	class:full_hash_entry
next	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	dir_list *next;$/;"	m	struct:dir_list
next	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_vector *next()$/;"	f	class:array_info_iter
next	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	distance_vector_e *next() { return((distance_vector_e*)nxt); }$/;"	f	struct:distance_vector_iter
next	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	dvlist_e *next() { return((dvlist_e*)nxt); }$/;"	f	struct:dvlist_iter
next	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	UD_hash_entry *next;$/;"	m	class:UD_hash_entry
next	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	X_hash_entry *next;$/;"	m	class:X_hash_entry
next	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	full_hash_entry *next;$/;"	m	class:full_hash_entry
next	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	dir_list *next;$/;"	m	struct:dir_list
next	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_vector *next()$/;"	f	class:array_info_iter
next	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	distance_vector_e *next() { return((distance_vector_e*)nxt); }$/;"	f	struct:distance_vector_iter
next	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	dvlist_e *next() { return((dvlist_e*)nxt); }$/;"	f	struct:dvlist_iter
next	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	UD_hash_entry *next;$/;"	m	class:UD_hash_entry
next	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	X_hash_entry *next;$/;"	m	class:X_hash_entry
next	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	full_hash_entry *next;$/;"	m	class:full_hash_entry
next	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	dir_list *next;$/;"	m	struct:dir_list
next	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^    ast_node * next()			{ return ((astlist_e *)nxt)->a; }$/;"	f	class:astlist_iter
next	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    ast_node * next()			{ return (ast_node *)dlist_e::next_e; }$/;"	f	class:ast_node
next	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    seek_proc_e *next;$/;"	m	class:seek_proc_e
next	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist_e *next;$/;"	m	class:glist_e
next	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^    int next()				{ return ((intlist_e *)nxt)->i; }$/;"	f	class:intlist_iter
next	/cad2/ece540s/basesuif-1.1.2/include/general/xarray.h	/^    x_array *next;$/;"	m	class:x_array
next	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    int_e *next;$/;"	m	class:int_e
next	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    path_e *next;$/;"	m	class:path_e
next	/cad2/ece540s/basesuif-1.1.2/include/hawg/annote.h	/^    annote * next()			{ return nxt; }$/;"	f	class:annote
next	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    icon_list_e *next;$/;"	m	class:icon_list_e
next	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    if_ostream *next;$/;"	m	class:if_ostream
next	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	/^    instruction * next()		{ return ((ilist_e *)nxt)->i; }$/;"	f	class:ilist_iter
next	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base * next()			{ return siblings; }$/;"	f	class:path_base
next	/cad2/ece540s/basesuif-1.1.2/include/hawg/stringtable.h	/^    string_e *next;$/;"	m	class:string_e
next	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_e * next;$/;"	m	class:access_ineq_e
next	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    f_ostream *next;$/;"	m	class:f_ostream
next	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    istream *next;$/;"	m	class:istream
next	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Comvar *next;$/;"	m	struct:Comvar	typeref:struct:Comvar::Comvar
next	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^	struct defines *next;$/;"	m	struct:defines	typeref:struct:defines::defines
next	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^	struct iob_data *next;$/;"	m	struct:iob_data	typeref:struct:iob_data::iob_data
next	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    f_ostream *next;$/;"	m	class:f_ostream
next	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    istream *next;$/;"	m	class:istream
next	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    X_array0 *next;$/;"	m	class:X_array0
next	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    struct simple_instr_struct *next;	\/* ptr to next instruction *\/$/;"	m	struct:simple_instr_struct	typeref:struct:simple_instr_struct::simple_instr_struct
next	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    struct simple_instr_struct *next;	\/* ptr to next instruction *\/$/;"	m	struct:simple_instr_struct	typeref:struct:simple_instr_struct::simple_instr_struct
next	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *next()			{ return (alist_e *)glist_e::next(); }$/;"	f	class:alist_e
next	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^    dlist_e *next() const		{ return (dlist_e *)glist_e::next(); }$/;"	f	class:dlist_e
next	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_e *next() const		{ return next_e; }$/;"	f	class:glist_e
next	/cad2/ece540s/basesuif-1.1.2/include/suif/stringtable.h	/^    string_e *next;$/;"	m	class:string_e
next	/cad2/ece540s/basesuif-1.1.2/include/suif/xarray.h	/^    x_array *next;$/;"	m	class:x_array
next	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_e * next;$/;"	m	class:access_ineq_e
next	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    nim_op * next;$/;"	m	class:nim_op
next	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    X_array0 *next;$/;"	m	class:X_array0
next_e	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    dlist_e *next_e, *prev_e;$/;"	m	class:dlist_e
next_e	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_e *next_e;$/;"	m	class:glist_e
next_file	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    file_set_entry *next_file()		{ return iter->is_empty() ?$/;"	f	class:file_set
next_id_num	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    static unsigned long next_id_num;$/;"	m	class:temp_marker
next_index	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	int next_index;$/;"	m	struct:String_iter
next_index	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	int next_index;$/;"	m	struct:String_iter
next_instr_num	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    unsigned next_instr_num()		{ return next_inum++; }$/;"	f	class:proc_symtab
next_inum	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    unsigned next_inum;			\/* next unused instruction number *\/$/;"	m	class:proc_symtab
next_num	/cad2/ece540s/basesuif-1.1.2/include/simple/regmap.h	/^    int next_num()			{ return nxt++; }$/;"	f	class:reg_map
next_scope	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Scope *next_scope() { return (Scope *)glist_e::next_e; }$/;"	f	class:Scope
next_scope	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Scope *next_scope() { return (Scope *)glist_e::next; }$/;"	f	class:Scope
next_sym_id	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    unsigned next_sym_id;		\/* next unused symbol ID number *\/$/;"	m	class:base_symtab
next_tab	/cad2/ece540s/basesuif-1.1.2/include/sf2c/nice_printf.h	11;"	d
next_type_id	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    unsigned next_type_id;		\/* next unused type ID number *\/$/;"	m	class:base_symtab
nextp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	chainp nextp;$/;"	m	struct:Chain
nim_op	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    nim_op()                    { next = NULL; $/;"	f	class:nim_op
nim_op	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    nim_op(nim_op * t)          { assert(t); $/;"	f	class:nim_op
nim_op	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^class nim_op {$/;"	c
nlabs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned nlabs;$/;"	m	class:in_mbr
nlines	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    int nlines;$/;"	m	class:istream
nlines	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^  int nlines;$/;"	m	struct:ostream
nlines	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    int nlines;$/;"	m	class:istream
nlines	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^  int nlines;$/;"	m	struct:ostream
nm	/cad2/ece540s/basesuif-1.1.2/include/builder/bldtypes.h	/^    char ** nm;$/;"	m	struct:su_list
nm	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    char *nm;$/;"	m	class:annote_def
nm	/cad2/ece540s/basesuif-1.1.2/include/suif/annote.h	/^    char *nm;$/;"	m	class:annote
nm	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    char *nm;$/;"	m	class:base_stream
nm	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    char *nm;				\/* the symbol name *\/$/;"	m	class:sym_node
nm	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    char *nm;				\/* name of this symtab *\/$/;"	m	class:base_symtab
nm	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    char * nm;$/;"	m	struct:code_context_annote
nm_c	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    name_table nm_c;                                    \/\/ column names$/;"	m	class:named_sc_fm
nm_p	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    name_table nm_p;                                    \/\/ plane names$/;"	m	class:named_sc_fm
nn	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^	int nn;	\/\/ number of collumns$/;"	m	class:integer_matrix
nn	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^	int nn;	\/\/ number of collumns$/;"	m	class:integer_matrix
nn	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^	int nn;	\/\/ number of collumns$/;"	m	class:integer_matrix
nn	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int nn;$/;"	m	class:sc_fm_constraint
no_control_flow_analysis	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int no_control_flow_analysis;$/;"	m	class:CFG_1
no_control_flow_analysis	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int no_control_flow_analysis;$/;"	m	class:CFG_1_reversed
no_exact	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    void no_exact() { ex = 0; }$/;"	f	class:dependency_test
no_integer_result_hook_f	/cad2/ece540s/basesuif-1.1.2/include/suifmath/solver_hook.h	/^typedef boolean (*no_integer_result_hook_f)(const integer_matrix &, boolean *);$/;"	t
no_register	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	40;"	d
node	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFGnode *node;$/;"	m	class:CFinfo
node	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  CFGnode *node;$/;"	m	class:CFinfo
node	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  CFGnode *node;$/;"	m	class:CFinfo
node_reg	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^inline if_reg node_reg(int rg)		{ return if_reg(rk_node, rg); }$/;"	f
node_type	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum node_type {  nt_none, nt_oper,$/;"	g
nodes	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFGnode_xarray nodes;$/;"	m	class:CFG_1
nodes	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol_list nodes;$/;"	m	class:SV_dflow
nodes	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol_list nodes;$/;"	m	class:SV_dflow
nonterminal	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int nonterminal;$/;"	m	class:SV_node
nonterminal	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int nonterminal;$/;"	m	class:SV_node
normalize_kinds	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^enum normalize_kinds {$/;"	g
nr_ast_map	/cad2/ece540s/basesuif-1.1.2/include/flow/nrastmap.h	/^    nr_ast_map()			{ }$/;"	f	class:nr_ast_map
nr_ast_map	/cad2/ece540s/basesuif-1.1.2/include/flow/nrastmap.h	/^class nr_ast_map : private alist {$/;"	c
ns	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned ns;$/;"	m	class:in_gen
nsi	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    named_symcoeff_ineq nsi;$/;"	m	struct:marked_nsi
nt	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    node_type nt;$/;"	m	class:builder
nt	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table nt;$/;"	m	class:named_lin_ineq
nt_array	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  nt_array, nt_call,$/;"	e	enum:node_type
nt_c	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    name_table nt_c;$/;"	m	class:named_symcoeff_ineq
nt_call	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  nt_array, nt_call,$/;"	e	enum:node_type
nt_code	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  nt_code, nt_const,$/;"	e	enum:node_type
nt_const	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  nt_code, nt_const,$/;"	e	enum:node_type
nt_do	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  nt_do, nt_goto,$/;"	e	enum:node_type
nt_for	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  nt_stmt_list, nt_for,$/;"	e	enum:node_type
nt_goto	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  nt_do, nt_goto,$/;"	e	enum:node_type
nt_if	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  nt_if, nt_while,$/;"	e	enum:node_type
nt_none	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum node_type {  nt_none, nt_oper,$/;"	e	enum:node_type
nt_oper	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum node_type {  nt_none, nt_oper,$/;"	e	enum:node_type
nt_p	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    name_table nt_p;$/;"	m	class:named_symcoeff_ineq
nt_return	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  nt_return };$/;"	e	enum:node_type
nt_stmt_list	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  nt_stmt_list, nt_for,$/;"	e	enum:node_type
nt_while	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^                  nt_if, nt_while,$/;"	e	enum:node_type
ntargets	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    unsigned ntargets;		\/* number of possible targets *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon55
ntargets	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    unsigned ntargets;		\/* number of possible targets *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon32
nte_aux	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^                             nte_aux };$/;"	e	enum:name_table_entry_kind
nte_cond	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^                             nte_cond,$/;"	e	enum:name_table_entry_kind
nte_dim	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^                             nte_dim,$/;"	e	enum:name_table_entry_kind
nte_loop	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^                             nte_loop,$/;"	e	enum:name_table_entry_kind
nte_none	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^enum name_table_entry_kind { nte_none,$/;"	e	enum:name_table_entry_kind
nte_summary	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^                             nte_summary,$/;"	e	enum:name_table_entry_kind
nte_symconst	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^                             nte_symconst,$/;"	e	enum:name_table_entry_kind
ntempelt	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned ntempelt:10;	\/* for representing temporary arrays, as$/;"	m	struct:Addrblock
ntypes	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    int ntypes;				\/\/ for structs and unions$/;"	m	class:type_node
ntypes	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    unsigned ntypes;$/;"	m	class:struct_type
null_ostream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    null_ostream() {};$/;"	f	class:null_ostream
null_ostream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^class null_ostream: public ostream$/;"	c
null_ostream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    null_ostream() {};$/;"	f	class:null_ostream
null_ostream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^class null_ostream: public ostream$/;"	c
num	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    int num;$/;"	m	struct:num_copies
num	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    int num() const			{ return n; }$/;"	f	class:fract
num	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    int num;				\/* register number *\/$/;"	m	struct:simple_reg_struct
num	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    int num;				\/* register number *\/$/;"	m	struct:simple_reg_struct
num	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    unsigned num;$/;"	m	class:tree_node
num	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    int num() const			{ return n; }$/;"	f	class:fract
num	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    int num;                                    \/\/ Unique ID$/;"	m	class:tree_leaf
num_C_types	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    num_C_types$/;"	e	enum:C_types
num_args	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned num_args()			{ return nargs; }$/;"	f	class:in_cal
num_args	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    unsigned num_args()			{ return nargs; }$/;"	f	class:func_type
num_call_fourier	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int num_call_fourier;$/;"	m	class:dependency_test
num_check_bounds	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int num_check_bounds;$/;"	m	class:dependency_test
num_child_lists	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    unsigned num_child_lists(void) const  { return 0; }$/;"	f	class:tree_instr
num_child_lists	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    unsigned num_child_lists(void) const  { return 1; }$/;"	f	class:tree_block
num_child_lists	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    unsigned num_child_lists(void) const  { return 3; }$/;"	f	class:tree_if
num_child_lists	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    unsigned num_child_lists(void) const  { return 5; }$/;"	f	class:tree_for
num_child_lists	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    unsigned num_child_lists(void) const { return 2; }$/;"	f	class:tree_loop
num_constr	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	int num_constr;$/;"	m	class:exact
num_constr	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int num_constr;$/;"	m	class:exact
num_constr	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int num_constr;$/;"	m	class:exact
num_constraint	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    int num_constraint() { return m(); }$/;"	f	class:lin_ineq
num_constraint	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    int num_constraint() { return m(); }$/;"	f	class:lin_ineq
num_constraint	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    int num_constraint() const { return m(); }$/;"	f	class:lin_ineq
num_copies	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    num_copies(int i=0) { num = i; }$/;"	f	struct:num_copies
num_copies	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^struct num_copies {$/;"	s
num_dep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int num_dep;$/;"	m	class:dependency_test
num_dep	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int num_dep;$/;"	m	class:dependency_test
num_dep	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int num_dep;$/;"	m	class:dependency_test
num_dimensions	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    int num_dimensions() { return dim; }$/;"	f	class:poly_iterator
num_dimensions	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    int num_dimensions() { return dim; }$/;"	f	class:poly_iterator
num_dimensions	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    int num_dimensions() { return dim; }$/;"	f	class:poly_iterator
num_fields	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    unsigned num_fields()		{ return ntypes; }$/;"	f	class:struct_type
num_first_call_fourier	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int num_first_call_fourier;$/;"	m	class:dependency_test
num_hits	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	int num_hits;$/;"	m	class:UD_hash_table
num_hits	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	int num_hits;$/;"	m	class:X_hash_table
num_hits	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	int num_hits;$/;"	m	class:full_hash_table
num_hits	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int num_hits;$/;"	m	class:UD_hash_table
num_hits	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int num_hits;$/;"	m	class:X_hash_table
num_hits	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int num_hits;$/;"	m	class:full_hash_table
num_hits	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int num_hits;$/;"	m	class:UD_hash_table
num_hits	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int num_hits;$/;"	m	class:X_hash_table
num_hits	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int num_hits;$/;"	m	class:full_hash_table
num_in_ineqs	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int num_in_ineqs;$/;"	m	class:dependency_test
num_indep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int num_indep;$/;"	m	class:dependency_test
num_indep	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int num_indep;$/;"	m	class:dependency_test
num_indep	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int num_indep;$/;"	m	class:dependency_test
num_labs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned num_labs()			{ return nlabs; }$/;"	f	class:in_mbr
num_misses	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	int num_misses;$/;"	m	class:UD_hash_table
num_misses	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	int num_misses;$/;"	m	class:X_hash_table
num_misses	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	int num_misses;$/;"	m	class:full_hash_table
num_misses	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int num_misses;$/;"	m	class:UD_hash_table
num_misses	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int num_misses;$/;"	m	class:X_hash_table
num_misses	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int num_misses;$/;"	m	class:full_hash_table
num_misses	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int num_misses;$/;"	m	class:UD_hash_table
num_misses	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int num_misses;$/;"	m	class:X_hash_table
num_misses	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int num_misses;$/;"	m	class:full_hash_table
num_pairs	/cad2/ece540s/basesuif-1.1.2/include/expr_map.h	/^    unsigned num_pairs(void) { return pair_count; }$/;"	f	class:expr_map
num_pairs	/cad2/ece540s/basesuif-1.1.2/include/useful/expr_map.h	/^    unsigned num_pairs(void) { return pair_count; }$/;"	f	class:expr_map
num_params	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^	int num_vars, num_params;$/;"	m	class:name_store
num_params	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^	int num_vars, num_params;$/;"	m	class:name_store
num_params	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	/^	int num_vars, num_params;$/;"	m	class:name_store
num_ref_types	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual unsigned num_ref_types()	{ return 0; }$/;"	f	class:type_node
num_ref_types	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual unsigned num_ref_types()	{ return 1 + nargs; }$/;"	f	class:func_type
num_ref_types	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual unsigned num_ref_types()	{ return 1; }$/;"	f	class:array_type
num_ref_types	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual unsigned num_ref_types()	{ return 1; }$/;"	f	class:modifier_type
num_ref_types	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual unsigned num_ref_types()	{ return 1; }$/;"	f	class:ptr_type
num_ref_types	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual unsigned num_ref_types()	{ return ntypes; }$/;"	f	class:struct_type
num_srcs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned num_srcs()			{ return 1; }$/;"	f	class:in_bj
num_srcs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned num_srcs()			{ return 1; }$/;"	f	class:in_mbr
num_srcs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned num_srcs()			{ return 2 * dims() + 2; }$/;"	f	class:in_array
num_srcs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned num_srcs()			{ return 2; }$/;"	f	class:in_rrr
num_srcs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned num_srcs()			{ return ns; }$/;"	f	class:in_gen
num_srcs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned num_srcs()			{ return num_args() + 1; }$/;"	f	class:in_cal
num_srcs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    virtual unsigned num_srcs()		{ return 0; }$/;"	f	class:instruction
num_symb	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	int num_symb;$/;"	m	class:full_hash_entry
num_symb	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int num_symb;$/;"	m	class:full_hash_entry
num_symb	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int num_symb;$/;"	m	class:full_hash_entry
num_values	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    unsigned num_values()		{ return nvals; }$/;"	f	class:enum_type
num_variable	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    int num_variable() { return n(); }$/;"	f	class:lin_ineq
num_variable	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    int num_variable() { return n(); }$/;"	f	class:lin_ineq
num_variable	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    int num_variable() const { return n(); }$/;"	f	class:lin_ineq
num_vars	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^	int num_vars, num_params;$/;"	m	class:name_store
num_vars	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^	int num_vars, num_params;$/;"	m	class:name_store
num_vars	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	/^	int num_vars, num_params;$/;"	m	class:name_store
number	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    unsigned short rcount, number, snumber;$/;"	m	class:Seqn
number	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    unsigned short rcount, number, snumber;$/;"	m	class:Seqn
number	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    unsigned short rcount, number, snumber;$/;"	m	class:Seqn
number	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned number()			{ return inum; }$/;"	f	class:instruction
number	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    unsigned number()			{ return num; }$/;"	f	class:tree_node
number_leaves	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    void number_leaves()                        { number_leaves(0); }$/;"	f	class:value_tree
number_of_edges	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual int number_of_edges()$/;"	f	class:CFG_1_reversed
number_of_nodes	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual int number_of_nodes()$/;"	f	class:CFG_1_reversed
numbers	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFinfo *numbers;$/;"	m	class:CFG_0
numbers	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  CFinfo *numbers;$/;"	m	class:CFG
numbers	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  CFinfo *numbers;$/;"	m	class:CFG
numerator	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational numerator(void) const  { return the_numerator; }$/;"	f	class:i_rational
nv_type	/cad2/ece540s/basesuif-1.1.2/include/sf2c/names.h	9;"	d
nvals	/cad2/ece540s/basesuif-1.1.2/include/hawg/annote.h	/^    int nvals;				\/* really the number of values *\/$/;"	m	class:annote
nvals	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    unsigned nvals;$/;"	m	class:enum_type
nvars	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	int nvars;$/;"	m	struct:Namelist
nvars	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	int nvars;$/;"	m	struct:Namelist
nxt	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    clist_e *cur, *nxt;$/;"	m	class:clist_iter
nxt	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist_e *cur, *nxt;$/;"	m	class:glist_iter
nxt	/cad2/ece540s/basesuif-1.1.2/include/hawg/annote.h	/^    annote *nxt;$/;"	m	class:annote
nxt	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base *cur, *nxt;$/;"	m	class:path_base_iter
nxt	/cad2/ece540s/basesuif-1.1.2/include/simple/regmap.h	/^    int nxt;				\/* next unused register number *\/$/;"	m	class:reg_map
nxt	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_e *cur, *nxt;$/;"	m	class:glist_iter
oL	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^    Strans *oL;$/;"	m	class:n_Seqn
oL	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^    Strans *oL;$/;"	m	class:n_Seqn
oL	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^    Strans *oL;$/;"	m	class:n_Seqn
oV	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^    Svar *oV;$/;"	m	class:n_Seqn
oV	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^    Svar *oV;$/;"	m	class:n_Seqn
oV	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^    Svar *oV;$/;"	m	class:n_Seqn
oacc	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *oacc;$/;"	m	struct:__anon44
oacc	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *oacc;$/;"	m	struct:__anon20
object_kind	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    object_kinds object_kind()		{ return FILE_OBJ; }$/;"	f	class:file_set_entry
object_kind	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    object_kinds object_kind()		{ return INSTR_OBJ; }$/;"	f	class:instruction
object_kind	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    object_kinds object_kind()		{ return SYM_OBJ; }$/;"	f	class:sym_node
object_kind	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    object_kinds object_kind()		{ return SYMTAB_OBJ; }$/;"	f	class:base_symtab
object_kind	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    object_kinds object_kind()		{ return TREE_OBJ; }$/;"	f	class:tree_node
object_kind	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    object_kinds object_kind()		{ return TYPE_OBJ; }$/;"	f	class:type_node
object_kind	/cad2/ece540s/basesuif-1.1.2/include/suif/vardef.h	/^    object_kinds object_kind()		{ return DEF_OBJ; }$/;"	f	class:var_def
object_kinds	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^enum object_kinds {$/;"	g
oblnk	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *oblnk;$/;"	m	struct:__anon44
oblnk	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *oblnk;$/;"	m	struct:__anon20
oerr	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^{	flag oerr;$/;"	m	struct:__anon44
oerr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^{	flag oerr;$/;"	m	struct:__anon20
off	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned off; $/;"	m	class:in_array
off	/cad2/ece540s/basesuif-1.1.2/include/suif/symaddr.h	/^    unsigned off;$/;"	m	class:sym_addr_dataonly
offset	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    int offset;$/;"	m	struct:struct_access
offset	/cad2/ece540s/basesuif-1.1.2/include/flow/storinfo.h	/^    int offset;$/;"	m	class:storage_info
offset	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    int offset(int n)			{ assert(n >= 0 && n <= ntypes);$/;"	f	class:type_node
offset	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    int offset; $/;"	m	class:in_array
offset	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    int offset;$/;"	m	class:path
offset	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	ftnint offset, nelt;$/;"	m	struct:Comvar
offset	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    int offset;			\/* branch selector offset *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon55
offset	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    int offset;			\/* offset from the symbol *\/$/;"	m	struct:simple_immed_struct::__anon48::__anon49
offset	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    int offset;			\/* branch selector offset *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon32
offset	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    int offset;			\/* offset from the symbol *\/$/;"	m	struct:simple_immed_struct::__anon25::__anon26
offset	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    unsigned offset()			{ return off; }$/;"	f	class:in_array
offset	/cad2/ece540s/basesuif-1.1.2/include/suif/symaddr.h	/^    unsigned offset()			{ return off; }$/;"	f	class:sym_addr
offset	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    int offset(void)			{ return the_offset; }$/;"	f	class:var_sym
offset	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    int offset(unsigned n)		{ check_range(n); return offsets[n]; }$/;"	f	class:struct_type
offset_kind	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^enum offset_kind$/;"	g
offset_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand offset_op()			{ return offsetop; }$/;"	f	class:in_array
offsetop	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand offsetop;$/;"	m	class:in_array
offsetreg	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg offsetreg;$/;"	m	class:in_array
offsets	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    int *offsets;			\/\/ for structs and unions$/;"	m	class:type_node
offsets	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    int *offsets;$/;"	m	class:struct_type
ofm	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *ofm;$/;"	m	struct:__anon44
ofm	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *ofm;$/;"	m	struct:__anon20
ofnm	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *ofnm;$/;"	m	struct:__anon44
ofnm	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *ofnm;$/;"	m	struct:__anon20
ofnmlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnlen ofnmlen;$/;"	m	struct:__anon44
ofnmlen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnlen ofnmlen;$/;"	m	struct:__anon20
olddefs	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    var_def_list olddefs;$/;"	m	struct:replacements
oldinstrs	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    instruction_list oldinstrs;$/;"	m	struct:replacements
oldsyms	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    sym_node_list oldsyms;$/;"	m	struct:replacements
oldtabs	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    base_symtab_list oldtabs;$/;"	m	struct:replacements
oldtypes	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    type_node_list oldtypes;$/;"	m	struct:replacements
olength	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    int olength;		\/\/ length of the old file$/;"	m	class:f_ostream
olength	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    int olength;		\/\/ length of the old file$/;"	m	class:f_ostream
olist	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^} olist;$/;"	t	typeref:struct:__anon44
olist	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^} olist;$/;"	t	typeref:struct:__anon20
on_list	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    ast_node_list *on_list;$/;"	m	class:ast_node
one_var_dep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int one_var_dep;$/;"	m	class:dependency_test
one_var_dep	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int one_var_dep;$/;"	m	class:dependency_test
one_var_dep	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int one_var_dep;$/;"	m	class:dependency_test
one_var_fail	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int one_var_fail;$/;"	m	class:dependency_test
one_var_fail	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int one_var_fail;$/;"	m	class:dependency_test
one_var_fail	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int one_var_fail;$/;"	m	class:dependency_test
one_var_ind	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int one_var_ind;$/;"	m	class:dependency_test
one_var_ind	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int one_var_ind;$/;"	m	class:dependency_test
one_var_ind	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int one_var_ind;$/;"	m	class:dependency_test
one_var_succ	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int one_var_succ;$/;"	m	class:dependency_test
one_var_succ	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	static int one_var_succ;$/;"	m	class:dependency_test
one_var_succ	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	static int one_var_succ;$/;"	m	class:dependency_test
onlist	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    ast_node_list * onlist()		{ return on_list ?$/;"	f	class:ast_node_suif_instr
op	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & op(block & A,$/;"	f	class:block
op	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & op(char * o,$/;"	f	class:block
op	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block & op(unary_op o,$/;"	f	class:block
op	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    any_oper op;$/;"	m	struct:block_info
op	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_ops op()			{ return oper; }$/;"	f	class:type_node
op	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    if_ops op;$/;"	m	class:if_istream
op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    if_ops op;$/;"	m	class:instruction
op	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_ops op()			{ return oper; }$/;"	f	class:type_node
op_format	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	25;"	d
op_map	/cad2/ece540s/basesuif-1.1.2/include/simple/ops.h	/^class op_map {$/;"	c
op_precedence	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	24;"	d
op_type	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum op_type { ot_none, ot_ub,$/;"	g
opaque	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *opaque;$/;"	m	class:ty_record
opaque	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *opaque;$/;"	m	class:ty_record
opcode	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_ops opcode;$/;"	m	class:instruction
opcode	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned opcode:6;$/;"	m	struct:Exprblock
opcode	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    simple_op opcode;			\/* the opcode *\/$/;"	m	struct:simple_instr_struct
opcode	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    simple_op opcode;			\/* the opcode *\/$/;"	m	struct:simple_instr_struct
opcode	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    if_ops opcode()			{ return op; }$/;"	f	class:instruction
open_cnt	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    int open_cnt;			\/* current number of open files *\/$/;"	m	class:file_set
open_max	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    long open_max;			\/* maximum number of open files *\/$/;"	m	class:file_set
oper	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_ops oper;$/;"	m	class:type_node
oper	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_ops oper;			\/* the type operator *\/$/;"	m	class:type_node
operand	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    operand()				{ u.sym = NULL; set_null(); }$/;"	f	class:operand
operand	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    operand(const operand_dataonly &other)  { k = other.k; u = other.u; }$/;"	f	class:operand
operand	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    operand(instruction *i)		{ set_instr(i); }$/;"	f	class:operand
operand	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    operand(var_sym *s)			{ set_symbol(s); }$/;"	f	class:operand
operand	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^class operand : public operand_dataonly {$/;"	c
operand_dataonly	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^class operand_dataonly {$/;"	c
operand_kinds	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^enum operand_kinds {$/;"	g
operator !	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator!()                 { return douniop(uop_lnot); }$/;"	f	class:block
operator !	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator!(void) const  { return (*this == 0); }$/;"	f	class:i_integer
operator !	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator!(void) const  { return (*this == 0); }$/;"	f	class:i_rational
operator !	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator!(operand op)$/;"	f
operator !=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator!=(block & b)       { return dobinop(bop_neq, b); }$/;"	f	class:block
operator !=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator!=(char * b)        { return dobinop(bop_neq, b); }$/;"	f	class:block
operator !=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator!=(double b)        { return dobinop(bop_neq, b); }$/;"	f	class:block
operator !=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator!=(float b)         { return dobinop(bop_neq, b); }$/;"	f	class:block
operator !=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator!=(int b)           { return dobinop(bop_neq, b); }$/;"	f	class:block
operator !=	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int operator !=(FCONST access_vector &a)$/;"	f	class:access_vector
operator !=	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    int operator!=(distance_vector &d)$/;"	f	struct:distance_vector
operator !=	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int operator !=(FCONST access_vector &a)$/;"	f	class:access_vector
operator !=	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^        int operator!=(distance_vector &d)$/;"	f	struct:distance_vector
operator !=	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int operator !=(FCONST access_vector &a)$/;"	f	class:access_vector
operator !=	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^        int operator!=(distance_vector &d)$/;"	f	struct:distance_vector
operator !=	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    boolean operator!=(bit_set &b)	{ return !(*this == b); }$/;"	f	class:bit_set
operator !=	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    boolean operator!=(const fract &a) const$/;"	f	class:fract
operator !=	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    boolean operator!=(alias_set &ps)	{ return !(*this == ps); }$/;"	f	class:alias_set
operator !=	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    boolean operator!=(const icon &r) const	{ return !(*this==r); }$/;"	f	class:icon
operator !=	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    boolean operator!=(path &l)		{ return !(*this == l); }$/;"	f	class:path
operator !=	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    boolean operator!=(if_reg &r)	{ return reg_no != r.reg_no; }$/;"	f	class:if_reg
operator !=	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    boolean operator!=(if_type &t)	{ return !(*this == t); }$/;"	f	class:if_type
operator !=	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^	boolean operator!=(integer_matrix &  a) { return (!((*this) == a)); }$/;"	f	class:integer_matrix
operator !=	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^    boolean operator!=(integer_row & a) { return !((*this) == a); }$/;"	f	class:integer_row
operator !=	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    boolean operator!=(constraint & a) { return !((*this)==a); }$/;"	f	class:constraint
operator !=	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^	boolean operator!=(integer_matrix &  a) { return (!((*this) == a)); }$/;"	f	class:integer_matrix
operator !=	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^    boolean operator!=(integer_row & a) { return !((*this) == a); }$/;"	f	class:integer_row
operator !=	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    boolean operator!=(constraint & a) { return !((*this)==a); }$/;"	f	class:constraint
operator !=	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int operator!=(PP_item &rhs) { return !(*this==rhs); }$/;"	f	class:PP_item
operator !=	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int operator!=(PP_item &rhs) { return !(*this==rhs); }$/;"	f	class:PP_item
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    boolean operator!=(bit_set &b)	{ return !(*this == b); }$/;"	f	class:bit_set
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    boolean operator!=(const immed &r) const	{ return !(*this == r); }$/;"	f	class:immed
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    boolean operator!=(machine_params &other)	{ return !(*this == other); }$/;"	f	struct:machine_params
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    boolean operator!=(const operand_dataonly &r) const$/;"	f	class:operand_dataonly
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suif/symaddr.h	/^    boolean operator!=(const sym_addr_dataonly& s)$/;"	f	class:sym_addr_dataonly
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean operator!=(const array_bound &b)	{ return !(*this == b); }$/;"	f	class:array_bound
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean operator!=(type_node &t)    { return !((*this)==t); }$/;"	f	class:type_node
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    boolean operator!=(const fract &a) const$/;"	f	class:fract
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    boolean operator!=(const fract_matrix &mat) const$/;"	f	class:fract_matrix
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    boolean operator!=(const fract_vector &a) const { return !((*this) == a); }$/;"	f	class:fract_vector
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^	boolean operator!=(const integer_matrix &  a) const$/;"	f	class:integer_matrix
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    boolean operator!=(const integer_row & a) const { return !((*this) == a); }$/;"	f	class:integer_row
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    boolean operator!=(const constraint & a) const$/;"	f	class:constraint
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    boolean operator!=(matrix &mat)   { return (!((*this) == mat)); }$/;"	f	class:matrix
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    boolean operator!=(const name_table_entry & nte) const$/;"	f	class:name_table_entry
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    boolean operator!=(named_symcoeff_ineq & c)    { return !(*this == c); }$/;"	f	class:named_symcoeff_ineq
operator !=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/vector_space.h	/^    boolean operator!=(vector_space &vs)          { return !((*this) == vs); }$/;"	f	class:vector_space
operator !=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator!=(const i_integer &other) const$/;"	f	class:i_integer
operator !=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator!=(const i_rational &other) const$/;"	f	class:i_rational
operator %	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator%(block & b)        { return dobinop(bop_mod, b); }$/;"	f	class:block
operator %	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator%(char * b)         { return dobinop(bop_mod, b); }$/;"	f	class:block
operator %	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator%(double b)         { return dobinop(bop_mod, b); }$/;"	f	class:block
operator %	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator%(float b)          { return dobinop(bop_mod, b); }$/;"	f	class:block
operator %	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator%(int b)            { return dobinop(bop_mod, b); }$/;"	f	class:block
operator %	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint operator%(constraint & row) { return (constraint &)((*(integer_row *)this) % (integer_row &) row); } \/\/ shuffle$/;"	f	class:constraint
operator %	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint operator%(constraint & row) { return (constraint &)((*(integer_row *)this) % (integer_row &) row); } \/\/ shuffle$/;"	f	class:constraint
operator %	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint operator%(const constraint & row) const$/;"	f	class:constraint
operator %	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer operator%(const i_integer &other) const  { return mod(other); }$/;"	f	class:i_integer
operator %	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational operator%(const i_rational &) const  { return 0; }$/;"	f	class:i_rational
operator %	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator%(const i_integer &left, operand right)$/;"	f
operator %	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator%(operand left, const i_integer &right)$/;"	f
operator %	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator%(operand left, operand right)$/;"	f
operator %=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator%=(block & b)       { return doasignop(aop_mod, b); }$/;"	f	class:block
operator %=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator%=(char * b)        { return doasignop(aop_mod, b); }$/;"	f	class:block
operator %=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator%=(double b)        { return doasignop(aop_mod, b); }$/;"	f	class:block
operator %=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator%=(float b)         { return doasignop(aop_mod, b); }$/;"	f	class:block
operator %=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator%=(int b)           { return doasignop(aop_mod, b); }$/;"	f	class:block
operator %=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator%=(const i_integer &other)$/;"	f	class:i_integer
operator %=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational &operator%=(const i_rational &other)$/;"	f	class:i_rational
operator %=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator%=(operand &left, const i_integer &right)$/;"	f
operator %=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator%=(operand &left, operand right)$/;"	f
operator &	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&(block & b)        { return dobinop(bop_and, b); }$/;"	f	class:block
operator &	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&(char * b)         { return dobinop(bop_and, b); }$/;"	f	class:block
operator &	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&(double b)         { return dobinop(bop_and, b); }$/;"	f	class:block
operator &	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&(float b)          { return dobinop(bop_and, b); }$/;"	f	class:block
operator &	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&(int b)            { return dobinop(bop_and, b); }$/;"	f	class:block
operator &	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^        integer_matrix  operator&(integer_matrix & A) { return r_merge(*this, A); }$/;"	f	class:integer_matrix
operator &	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq operator&(lin_ineq & a) { return conjunct(a); } \/\/ Concatinate both sets of constraints$/;"	f	class:lin_ineq
operator &	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^        integer_matrix  operator&(integer_matrix & A) { return r_merge(*this, A); }$/;"	f	class:integer_matrix
operator &	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq operator&(lin_ineq & a) { return conjunct(a); } \/\/ Concatinate both sets of constraints$/;"	f	class:lin_ineq
operator &	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    fract_matrix operator&(const fract_matrix &mat) const$/;"	f	class:fract_matrix
operator &	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^        integer_matrix  operator&(const integer_matrix & A) const$/;"	f	class:integer_matrix
operator &	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq operator&(const lin_ineq & a) const { return conjunct(a); } \/\/ Concatinate both sets of constraints$/;"	f	class:lin_ineq
operator &	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    matrix operator&(matrix &mat) { return r_merge(mat); }$/;"	f	class:matrix
operator &	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator&(const i_integer &left, operand right)$/;"	f
operator &	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator&(operand left, const i_integer &right)$/;"	f
operator &	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator&(operand left, operand right)$/;"	f
operator &&	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&&(block & b)       { return dobinop(bop_land, b); }$/;"	f	class:block
operator &&	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&&(char * b)        { return dobinop(bop_land, b); }$/;"	f	class:block
operator &&	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&&(double b)        { return dobinop(bop_land, b); }$/;"	f	class:block
operator &&	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&&(float b)         { return dobinop(bop_land, b); }$/;"	f	class:block
operator &&	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&&(int b)           { return dobinop(bop_land, b); }$/;"	f	class:block
operator &&	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator&&(const i_integer &other) const$/;"	f	class:i_integer
operator &&	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator&&(const i_rational &other) const$/;"	f	class:i_rational
operator &=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&=(block & b)       { return doasignop(aop_and, b); }$/;"	f	class:block
operator &=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&=(char * b)        { return doasignop(aop_and, b); }$/;"	f	class:block
operator &=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&=(double b)        { return doasignop(aop_and, b); }$/;"	f	class:block
operator &=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&=(float b)         { return doasignop(aop_and, b); }$/;"	f	class:block
operator &=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator&=(int b)           { return doasignop(aop_and, b); }$/;"	f	class:block
operator &=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator&=(const i_integer &other)$/;"	f	class:i_integer
operator &=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator&=(operand &left, const i_integer &right)$/;"	f
operator &=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator&=(operand &left, operand right)$/;"	f
operator *	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator*(block & b)        { return dobinop(bop_mul, b); }$/;"	f	class:block
operator *	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator*(char * b)         { return dobinop(bop_mul, b); }$/;"	f	class:block
operator *	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator*(double b)         { return dobinop(bop_mul, b); }$/;"	f	class:block
operator *	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator*(float b)          { return dobinop(bop_mul, b); }$/;"	f	class:block
operator *	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator*(int b)            { return dobinop(bop_mul, b); }$/;"	f	class:block
operator *	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^inline access_vector operator *(FCONST access_vector &a,int f)$/;"	f
operator *	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^inline access_vector operator *(int f,FCONST access_vector &a)$/;"	f
operator *	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    fract operator*(const fract &a) const$/;"	f	class:fract
operator *	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint operator*(constraint & row) { return (constraint &)((*(integer_row *)this) * (integer_row &) row); }$/;"	f	class:constraint
operator *	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint operator*(constraint & row) { return (constraint &)((*(integer_row *)this) * (integer_row &) row); }$/;"	f	class:constraint
operator *	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    fract operator*(const fract &a) const$/;"	f	class:fract
operator *	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint operator*(const constraint & row) const$/;"	f	class:constraint
operator *	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer operator*(const i_integer &other) const$/;"	f	class:i_integer
operator *	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational operator*(const i_rational &other) const$/;"	f	class:i_rational
operator *	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator*(const i_integer &left, operand right)$/;"	f
operator *	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator*(operand left, const i_integer &right)$/;"	f
operator *	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator*(operand left, operand right)$/;"	f
operator *=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator*=(block & b)       { return doasignop(aop_mul, b); }$/;"	f	class:block
operator *=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator*=(char * b)        { return doasignop(aop_mul, b); }$/;"	f	class:block
operator *=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator*=(double b)        { return doasignop(aop_mul, b); }$/;"	f	class:block
operator *=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator*=(float b)         { return doasignop(aop_mul, b); }$/;"	f	class:block
operator *=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator*=(int b)           { return doasignop(aop_mul, b); }$/;"	f	class:block
operator *=	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    void operator*=(const fract &a)	{ n = fmul(n, a.n); d = fmul(d, a.d);$/;"	f	class:fract
operator *=	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint & operator*=(constraint & row) { return (constraint &)((*(integer_row *)this) *= (integer_row &) row); }$/;"	f	class:constraint
operator *=	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint & operator*=(int val) { return (constraint &)((*(integer_row *)this) *= val); }$/;"	f	class:constraint
operator *=	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint & operator*=(constraint & row) { return (constraint &)((*(integer_row *)this) *= (integer_row &) row); }$/;"	f	class:constraint
operator *=	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint & operator*=(int val) { return (constraint &)((*(integer_row *)this) *= val); }$/;"	f	class:constraint
operator *=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    void operator*=(const fract &a)	{ n = fmul(n, a.n); d = fmul(d, a.d);$/;"	f	class:fract
operator *=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    fract_vector & operator*=(int val)  { return (*this *= fract(val)); }$/;"	f	class:fract_vector
operator *=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint & operator*=(const constraint & row)$/;"	f	class:constraint
operator *=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint & operator*=(int val)$/;"	f	class:constraint
operator *=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator*=(const i_integer &other)$/;"	f	class:i_integer
operator *=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational &operator*=(const i_rational &other)$/;"	f	class:i_rational
operator *=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator*=(operand &left, const i_integer &right)$/;"	f
operator *=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator*=(operand &left, operand right)$/;"	f
operator +	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator+(block & b)        { return dobinop(bop_add, b); }$/;"	f	class:block
operator +	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator+(char * b)         { return dobinop(bop_add, b); }$/;"	f	class:block
operator +	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator+(double b)         { return dobinop(bop_add, b); }$/;"	f	class:block
operator +	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator+(float b)          { return dobinop(bop_add, b); }$/;"	f	class:block
operator +	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator+(int b)            { return dobinop(bop_add, b); }$/;"	f	class:block
operator +	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_vector operator +(FCONST access_vector &a)$/;"	f	class:access_vector
operator +	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_vector operator +(FCONST access_vector &a)$/;"	f	class:access_vector
operator +	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_vector operator +(FCONST access_vector &a)$/;"	f	class:access_vector
operator +	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    fract operator+(const fract &a) const$/;"	f	class:fract
operator +	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint operator+(constraint & row) { return (constraint &)((*(integer_row *)this) + (integer_row &) row); }$/;"	f	class:constraint
operator +	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint operator+(constraint & row) { return (constraint &)((*(integer_row *)this) + (integer_row &) row); }$/;"	f	class:constraint
operator +	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    fract operator+(const fract &a) const$/;"	f	class:fract
operator +	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint operator+(const constraint & row) const$/;"	f	class:constraint
operator +	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer operator+(const i_integer &other) const  { return add(other); }$/;"	f	class:i_integer
operator +	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer operator+(void) const  { return *this; }$/;"	f	class:i_integer
operator +	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational operator+(const i_rational &other) const$/;"	f	class:i_rational
operator +	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational operator+(void) const  { return *this; }$/;"	f	class:i_rational
operator +	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator+(const i_integer &left, operand right)$/;"	f
operator +	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator+(operand left, const i_integer &right)$/;"	f
operator +	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator+(operand left, operand right)$/;"	f
operator +	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator+(operand op)$/;"	f
operator ++	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator++(void)  { *this += 1; return *this; }$/;"	f	class:i_integer
operator ++	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer operator++(int)$/;"	f	class:i_integer
operator ++	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational &operator++(void)  { *this += 1; return *this; }$/;"	f	class:i_rational
operator ++	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational operator++(int)$/;"	f	class:i_rational
operator ++	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator++(operand &op)$/;"	f
operator ++	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator++(operand &op, int)$/;"	f
operator +=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator+=(block & b)       { return doasignop(aop_add, b); }$/;"	f	class:block
operator +=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator+=(char * b)        { return doasignop(aop_add, b); }$/;"	f	class:block
operator +=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator+=(double b)        { return doasignop(aop_add, b); }$/;"	f	class:block
operator +=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator+=(float b)         { return doasignop(aop_add, b); }$/;"	f	class:block
operator +=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator+=(int b)           { return doasignop(aop_add, b); }$/;"	f	class:block
operator +=	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    void operator+=(const fract &a)	{ int nn = fmul(n, a.d) + fmul(d, a.n);$/;"	f	class:fract
operator +=	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint & operator+=(constraint & row) { return (constraint &)((*(integer_row *)this) += (integer_row &) row); }$/;"	f	class:constraint
operator +=	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint & operator+=(int val) { return (constraint &)((*(integer_row *)this) += val); }$/;"	f	class:constraint
operator +=	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint & operator+=(constraint & row) { return (constraint &)((*(integer_row *)this) += (integer_row &) row); }$/;"	f	class:constraint
operator +=	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint & operator+=(int val) { return (constraint &)((*(integer_row *)this) += val); }$/;"	f	class:constraint
operator +=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    void operator+=(const fract &a)	{ int nn = fmul(n, a.d) + fmul(d, a.n);$/;"	f	class:fract
operator +=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    fract_vector & operator+=(int val)  { return (*this += fract(val)); }$/;"	f	class:fract_vector
operator +=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint & operator+=(const constraint & row)$/;"	f	class:constraint
operator +=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint & operator+=(int val)$/;"	f	class:constraint
operator +=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator+=(const i_integer &other)$/;"	f	class:i_integer
operator +=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational &operator+=(const i_rational &other)$/;"	f	class:i_rational
operator +=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator+=(operand &left, const i_integer &right)$/;"	f
operator +=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator+=(operand &left, operand right)$/;"	f
operator -	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator-()                 { return douniop(uop_minus); }$/;"	f	class:block
operator -	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator-(block & b)        { return dobinop(bop_sub, b); }$/;"	f	class:block
operator -	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator-(char * b)         { return dobinop(bop_sub, b); }$/;"	f	class:block
operator -	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator-(double b)         { return dobinop(bop_sub, b); }$/;"	f	class:block
operator -	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator-(float b)          { return dobinop(bop_sub, b); }$/;"	f	class:block
operator -	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator-(int b)            { return dobinop(bop_sub, b); }$/;"	f	class:block
operator -	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_vector operator -()$/;"	f	class:access_vector
operator -	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_vector operator -(FCONST access_vector &a)$/;"	f	class:access_vector
operator -	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_vector operator -()$/;"	f	class:access_vector
operator -	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_vector operator -(FCONST access_vector &a)$/;"	f	class:access_vector
operator -	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_vector operator -()$/;"	f	class:access_vector
operator -	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_vector operator -(FCONST access_vector &a)$/;"	f	class:access_vector
operator -	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    fract operator-() const		{ return fract(-n, d); }$/;"	f	class:fract
operator -	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    fract operator-(const fract &a) const$/;"	f	class:fract
operator -	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint operator-() { constraint x(*this); x.compliment(); return x; }$/;"	f	class:constraint
operator -	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint operator-(constraint & row) { return (constraint &)((*(integer_row *)this) - (integer_row &) row); }$/;"	f	class:constraint
operator -	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint operator-() { constraint x(*this); x.compliment(); return x; }$/;"	f	class:constraint
operator -	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint operator-(constraint & row) { return (constraint &)((*(integer_row *)this) - (integer_row &) row); }$/;"	f	class:constraint
operator -	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    fract operator-() const		{ return fract(-n, d); }$/;"	f	class:fract
operator -	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    fract operator-(const fract &a) const$/;"	f	class:fract
operator -	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint operator-() const$/;"	f	class:constraint
operator -	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint operator-(const constraint & row) const$/;"	f	class:constraint
operator -	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer operator-(const i_integer &other) const$/;"	f	class:i_integer
operator -	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer operator-(void) const  { return negate(); }$/;"	f	class:i_integer
operator -	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational operator-(const i_rational &other) const$/;"	f	class:i_rational
operator -	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational operator-(void) const$/;"	f	class:i_rational
operator -	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator-(const i_integer &left, operand right)$/;"	f
operator -	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator-(operand left, const i_integer &right)$/;"	f
operator -	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator-(operand left, operand right)$/;"	f
operator -	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator-(operand op)$/;"	f
operator --	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator--(void)  { *this -= 1; return *this; }$/;"	f	class:i_integer
operator --	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer operator--(int)$/;"	f	class:i_integer
operator --	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational &operator--(void)  { *this -= 1; return *this; }$/;"	f	class:i_rational
operator --	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational operator--(int)$/;"	f	class:i_rational
operator --	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator--(operand &op)$/;"	f
operator --	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator--(operand &op, int)$/;"	f
operator -=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator-=(block & b)       { return doasignop(aop_sub, b); }$/;"	f	class:block
operator -=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator-=(char * b)        { return doasignop(aop_sub, b); }$/;"	f	class:block
operator -=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator-=(double b)        { return doasignop(aop_sub, b); }$/;"	f	class:block
operator -=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator-=(float b)         { return doasignop(aop_sub, b); }$/;"	f	class:block
operator -=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator-=(int b)           { return doasignop(aop_sub, b); }$/;"	f	class:block
operator -=	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    void operator-=(const fract &a)	{ int nn = fmul(n, a.d) - fmul(d, a.n);$/;"	f	class:fract
operator -=	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint & operator-=(constraint & row) { return (constraint &)((*(integer_row *)this) -= (integer_row &) row); }$/;"	f	class:constraint
operator -=	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint & operator-=(int val) { return (constraint &)((*(integer_row *)this) -= val); }$/;"	f	class:constraint
operator -=	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint & operator-=(constraint & row) { return (constraint &)((*(integer_row *)this) -= (integer_row &) row); }$/;"	f	class:constraint
operator -=	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint & operator-=(int val) { return (constraint &)((*(integer_row *)this) -= val); }$/;"	f	class:constraint
operator -=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    void operator-=(const fract &a)	{ int nn = fmul(n, a.d) - fmul(d, a.n);$/;"	f	class:fract
operator -=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    fract_vector & operator-=(int val)  { return (*this -= fract(val)); }$/;"	f	class:fract_vector
operator -=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint & operator-=(const constraint & row)$/;"	f	class:constraint
operator -=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint & operator-=(int val)$/;"	f	class:constraint
operator -=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator-=(const i_integer &other)$/;"	f	class:i_integer
operator -=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational &operator-=(const i_rational &other)$/;"	f	class:i_rational
operator -=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator-=(operand &left, const i_integer &right)$/;"	f
operator -=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator-=(operand &left, operand right)$/;"	f
operator /	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator\/(block & b)        { return dobinop(bop_div, b); }$/;"	f	class:block
operator /	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator\/(char * b)         { return dobinop(bop_div, b); }$/;"	f	class:block
operator /	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator\/(double b)         { return dobinop(bop_div, b); }$/;"	f	class:block
operator /	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator\/(float b)          { return dobinop(bop_div, b); }$/;"	f	class:block
operator /	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator\/(int b)            { return dobinop(bop_div, b); }$/;"	f	class:block
operator /	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^inline access_vector operator \/(FCONST access_vector &a,int f)$/;"	f
operator /	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint operator\/(constraint & row) { return (constraint &)((*(integer_row *)this) \/ (integer_row &) row); }$/;"	f	class:constraint
operator /	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint operator\/(constraint & row) { return (constraint &)((*(integer_row *)this) \/ (integer_row &) row); }$/;"	f	class:constraint
operator /	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint operator\/(const constraint & row) const$/;"	f	class:constraint
operator /	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer operator\/(const i_integer &other) const  { return div(other); }$/;"	f	class:i_integer
operator /	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational operator\/(const i_rational &other) const$/;"	f	class:i_rational
operator /	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator\/(const i_integer &left, operand right)$/;"	f
operator /	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator\/(operand left, const i_integer &right)$/;"	f
operator /	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator\/(operand left, operand right)$/;"	f
operator /=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator\/=(block & b)       { return doasignop(aop_div, b); }$/;"	f	class:block
operator /=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator\/=(char * b)        { return doasignop(aop_div, b); }$/;"	f	class:block
operator /=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator\/=(double b)        { return doasignop(aop_div, b); }$/;"	f	class:block
operator /=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator\/=(float b)         { return doasignop(aop_div, b); }$/;"	f	class:block
operator /=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator\/=(int b)           { return doasignop(aop_div, b); }$/;"	f	class:block
operator /=	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    void operator\/=(const fract &a)	{ assert(a.n != 0); n = fmul(n, a.d);$/;"	f	class:fract
operator /=	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint & operator\/=(constraint & row) { return (constraint &)((*(integer_row *)this) \/= (integer_row &) row); }$/;"	f	class:constraint
operator /=	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint & operator\/=(int val) { return (constraint &)((*(integer_row *)this) \/= val); }$/;"	f	class:constraint
operator /=	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint & operator\/=(constraint & row) { return (constraint &)((*(integer_row *)this) \/= (integer_row &) row); }$/;"	f	class:constraint
operator /=	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint & operator\/=(int val) { return (constraint &)((*(integer_row *)this) \/= val); }$/;"	f	class:constraint
operator /=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    void operator\/=(const fract &a)	{ assert(a.n != 0); n = fmul(n, a.d);$/;"	f	class:fract
operator /=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    fract_vector & operator\/=(int val)  { return (*this \/= fract(val)); }$/;"	f	class:fract_vector
operator /=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint & operator\/=(const constraint & row)$/;"	f	class:constraint
operator /=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint & operator\/=(int val)$/;"	f	class:constraint
operator /=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator\/=(const i_integer &other)$/;"	f	class:i_integer
operator /=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational &operator\/=(const i_rational &other)$/;"	f	class:i_rational
operator /=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator\/=(operand &left, const i_integer &right)$/;"	f
operator /=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator\/=(operand &left, operand right)$/;"	f
operator <	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<(block & b)        { return dobinop(bop_less, b); }$/;"	f	class:block
operator <	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<(char * b)         { return dobinop(bop_less, b); }$/;"	f	class:block
operator <	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<(double b)         { return dobinop(bop_less, b); }$/;"	f	class:block
operator <	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<(float b)          { return dobinop(bop_less, b); }$/;"	f	class:block
operator <	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<(int b)            { return dobinop(bop_less, b); }$/;"	f	class:block
operator <	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    boolean operator<(const fract &a) const$/;"	f	class:fract
operator <	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    boolean operator<(const fract &a) const$/;"	f	class:fract
operator <	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator<(const i_integer &other) const$/;"	f	class:i_integer
operator <	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator<(const i_rational &other) const$/;"	f	class:i_rational
operator <	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator<(const i_integer &left, operand right)$/;"	f
operator <	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator<(int left, operand right)$/;"	f
operator <	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator<(operand left, const i_integer &right)$/;"	f
operator <	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator<(operand left, int right)$/;"	f
operator <	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator<(operand left, operand right)$/;"	f
operator <<	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<<(block & b)       { return dobinop(bop_lshift, b); }$/;"	f	class:block
operator <<	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<<(char * b)        { return dobinop(bop_lshift, b); }$/;"	f	class:block
operator <<	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<<(double b)        { return dobinop(bop_lshift, b); }$/;"	f	class:block
operator <<	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<<(float b)         { return dobinop(bop_lshift, b); }$/;"	f	class:block
operator <<	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<<(int b)           { return dobinop(bop_lshift, b); }$/;"	f	class:block
operator <<	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    int operator<<(lin_ineq & mat) { return (mat >> (*this)); }$/;"	f	class:lin_ineq
operator <<	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    int operator<<(lin_ineq & mat) { return (mat >> (*this)); }$/;"	f	class:lin_ineq
operator <<	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    int operator<<(const lin_ineq & mat) const { return (mat >> (*this)); }$/;"	f	class:lin_ineq
operator <<	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    boolean operator<<(const named_lin_ineq & c2) const$/;"	f	class:named_lin_ineq
operator <<	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    boolean operator<<(named_symcoeff_ineq & c)    { return (c >> (*this)); }$/;"	f	class:named_symcoeff_ineq
operator <<	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator<<(operand left, const i_integer &right)$/;"	f
operator <<	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator<<(operand left, operand right)$/;"	f
operator <<=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<<=(block & b)      { return doasignop(aop_lshift, b); }$/;"	f	class:block
operator <<=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<<=(char * b)       { return doasignop(aop_lshift, b); }$/;"	f	class:block
operator <<=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<<=(double b)       { return doasignop(aop_lshift, b); }$/;"	f	class:block
operator <<=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<<=(float b)        { return doasignop(aop_lshift, b); }$/;"	f	class:block
operator <<=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<<=(int b)          { return doasignop(aop_lshift, b); }$/;"	f	class:block
operator <<=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator<<=(const i_integer &other)$/;"	f	class:i_integer
operator <<=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator<<=(operand &left, const i_integer &right)$/;"	f
operator <<=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator<<=(operand &left, operand right)$/;"	f
operator <=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<=(block & b)       { return dobinop(bop_leq, b); }$/;"	f	class:block
operator <=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<=(char * b)        { return dobinop(bop_leq, b); }$/;"	f	class:block
operator <=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<=(double b)        { return dobinop(bop_leq, b); }$/;"	f	class:block
operator <=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<=(float b)         { return dobinop(bop_leq, b); }$/;"	f	class:block
operator <=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator<=(int b)           { return dobinop(bop_leq, b); }$/;"	f	class:block
operator <=	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    boolean operator<=(const fract &a) const$/;"	f	class:fract
operator <=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    boolean operator<=(const fract &a) const$/;"	f	class:fract
operator <=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator<=(const i_integer &other) const$/;"	f	class:i_integer
operator <=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator<=(const i_rational &other) const$/;"	f	class:i_rational
operator <=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator<=(const i_integer &left, operand right)$/;"	f
operator <=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator<=(int left, operand right)$/;"	f
operator <=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator<=(operand left, const i_integer &right)$/;"	f
operator <=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator<=(operand left, int right)$/;"	f
operator <=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator<=(operand left, operand right)$/;"	f
operator =	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator=(block & b)        { return doasignop(aop_eq, b); }$/;"	f	class:block
operator =	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator=(char * b)         { return doasignop(aop_eq, b); }$/;"	f	class:block
operator =	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator=(double b)         { return doasignop(aop_eq, b); }$/;"	f	class:block
operator =	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator=(float b)          { return doasignop(aop_eq, b); }$/;"	f	class:block
operator =	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator=(int b)            { return doasignop(aop_eq, b); }$/;"	f	class:block
operator =	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    any_oper & operator=(const any_oper & b)  { init(b); return *this; }$/;"	f	struct:any_oper
operator =	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    block_info & operator=(const block_info & b) { init(b); return *this; }$/;"	f	struct:block_info
operator =	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    void operator =(distance &d) {val = d.val;}$/;"	f	class:distance
operator =	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    void operator =(distance &d) {val = d.val;}$/;"	f	class:distance
operator =	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    void operator =(distance &d) {val = d.val;}$/;"	f	class:distance
operator =	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    void operator=(bit_set &b)		{ copy(&b); }$/;"	f	class:bit_set
operator =	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    void operator=(const fract &f)	{ n = f.n; d = f.d; }$/;"	f	class:fract
operator =	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    void operator=(if_istream &)	{ assert(FALSE); }$/;"	f	class:if_istream
operator =	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    void operator=(if_ostream &)	{ assert(FALSE); }$/;"	f	class:if_ostream
operator =	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    void operator=(const path_base &)	{ assert(FALSE); }$/;"	f	class:path_base
operator =	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    void operator=(int i)		{ reg_no = i; }$/;"	f	class:if_reg
operator =	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^        integer_matrix & operator=(integer_matrix & in) $/;"	f	class:integer_matrix
operator =	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint & operator=(constraint & row) { return (constraint &)((*((integer_row *)this)) = (integer_row &) row); }$/;"	f	class:constraint
operator =	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint & operator=(int val) { return (constraint &)((*(integer_row *)this) = val); }$/;"	f	class:constraint
operator =	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq & operator=(lin_ineq & in) { return (lin_ineq &)((*((integer_matrix *)this)) = ((integer_matrix &)in)); }$/;"	f	class:lin_ineq
operator =	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^        integer_matrix & operator=(integer_matrix & in) $/;"	f	class:integer_matrix
operator =	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint & operator=(constraint & row) { return (constraint &)((*((integer_row *)this)) = (integer_row &) row); }$/;"	f	class:constraint
operator =	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint & operator=(int val) { return (constraint &)((*(integer_row *)this) = val); }$/;"	f	class:constraint
operator =	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq & operator=(lin_ineq & in) { return (lin_ineq &)((*((integer_matrix *)this)) = ((integer_matrix &)in)); }$/;"	f	class:lin_ineq
operator =	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    void operator=(Seqn &q)$/;"	f	class:Seqn
operator =	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    void operator=(Seqn &q)$/;"	f	class:Seqn
operator =	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    void operator=(Seqn &q)$/;"	f	class:Seqn
operator =	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    void operator=(bit_set &b)		{ copy(&b); }$/;"	f	class:bit_set
operator =	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    operand& operator=(const operand &r) { k = r.k; u = r.u; return *this; }$/;"	f	class:operand
operator =	/cad2/ece540s/basesuif-1.1.2/include/suif/symaddr.h	/^    sym_addr& operator=(sym_addr& s)	{ sym = s.sym; off = s.off; return s; }$/;"	f	class:sym_addr
operator =	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    void operator=(const fract &f)	{ n = f.n; d = f.d; }$/;"	f	class:fract
operator =	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    fract_vector & operator=(int val)   { return (*this = fract(val)); }$/;"	f	class:fract_vector
operator =	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint & operator=(const constraint & row)$/;"	f	class:constraint
operator =	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint & operator=(int val)$/;"	f	class:constraint
operator =	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq & operator=(const lin_ineq & in)$/;"	f	class:lin_ineq
operator =	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator=(const i_integer &other)$/;"	f	class:i_integer
operator =	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_rational &operator=(const i_rational &other)$/;"	f	class:i_rational
operator ==	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator==(block & b)       { return dobinop(bop_eq, b); }$/;"	f	class:block
operator ==	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator==(char * b)        { return dobinop(bop_eq, b); }$/;"	f	class:block
operator ==	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator==(double b)        { return dobinop(bop_eq, b); }$/;"	f	class:block
operator ==	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator==(float b)         { return dobinop(bop_eq, b); }$/;"	f	class:block
operator ==	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator==(int b)           { return dobinop(bop_eq, b); }$/;"	f	class:block
operator ==	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int operator ==(FCONST access_vector &a)$/;"	f	class:access_vector
operator ==	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int operator ==(FCONST access_vector &a)$/;"	f	class:access_vector
operator ==	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int operator ==(FCONST access_vector &a)$/;"	f	class:access_vector
operator ==	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    boolean operator==(const fract &a) const$/;"	f	class:fract
operator ==	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    boolean operator==(path &p)		{ return (*base == *p.base) &&$/;"	f	class:path
operator ==	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    boolean operator==(path_base &p)	{ return this == &p; }$/;"	f	class:path_base
operator ==	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    boolean operator==(const if_reg &r)	{ return reg_no == r.reg_no; }$/;"	f	class:if_reg
operator ==	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    boolean operator==(if_type &t)	{ return (len == t.len) &&$/;"	f	class:if_type
operator ==	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    boolean operator==(constraint & a) { return (((integer_row &) *this) == ((integer_row &)a)); }$/;"	f	class:constraint
operator ==	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    int operator==(lin_ineq & mat) { return ((mat >> (*this))&&((*this) >> mat)); }$/;"	f	class:lin_ineq
operator ==	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    boolean operator==(constraint & a) { return (((integer_row &) *this) == ((integer_row &)a)); }$/;"	f	class:constraint
operator ==	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    int operator==(lin_ineq & mat) { return ((mat >> (*this))&&((*this) >> mat)); }$/;"	f	class:lin_ineq
operator ==	/cad2/ece540s/basesuif-1.1.2/include/suif/symaddr.h	/^    boolean operator==(const sym_addr_dataonly& s)$/;"	f	class:sym_addr_dataonly
operator ==	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean operator==(type_node &t)    { return is_same(&t); }$/;"	f	class:type_node
operator ==	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    boolean operator==(const fract &a) const$/;"	f	class:fract
operator ==	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    boolean operator==(const constraint & a) const$/;"	f	class:constraint
operator ==	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    int operator==(const lin_ineq & mat) const { return ((mat >> (*this))&&((*this) >> mat)); }$/;"	f	class:lin_ineq
operator ==	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator==(const i_integer &other) const$/;"	f	class:i_integer
operator ==	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator==(const i_rational &other) const$/;"	f	class:i_rational
operator >	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>(block & b)        { return dobinop(bop_gt, b); }$/;"	f	class:block
operator >	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>(char * b)         { return dobinop(bop_gt, b); }$/;"	f	class:block
operator >	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>(double b)         { return dobinop(bop_gt, b); }$/;"	f	class:block
operator >	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>(float b)          { return dobinop(bop_gt, b); }$/;"	f	class:block
operator >	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>(int b)            { return dobinop(bop_gt, b); }$/;"	f	class:block
operator >	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    boolean operator>(const fract &a) const$/;"	f	class:fract
operator >	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    boolean operator>(const fract &a) const$/;"	f	class:fract
operator >	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator>(const i_integer &other) const$/;"	f	class:i_integer
operator >	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator>(const i_rational &other) const$/;"	f	class:i_rational
operator >	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator>(const i_integer &left, operand right)$/;"	f
operator >	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator>(int left, operand right)$/;"	f
operator >	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator>(operand left, const i_integer &right)$/;"	f
operator >	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator>(operand left, int right)$/;"	f
operator >	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator>(operand left, operand right)$/;"	f
operator >=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>=(block & b)       { return dobinop(bop_geq, b); }$/;"	f	class:block
operator >=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>=(char * b)        { return dobinop(bop_geq, b); }$/;"	f	class:block
operator >=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>=(double b)        { return dobinop(bop_geq, b); }$/;"	f	class:block
operator >=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>=(float b)         { return dobinop(bop_geq, b); }$/;"	f	class:block
operator >=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>=(int b)           { return dobinop(bop_geq, b); }$/;"	f	class:block
operator >=	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    boolean operator>=(const fract &a) const$/;"	f	class:fract
operator >=	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    boolean operator>=(path_base &p)	{ return p <= *this;}$/;"	f	class:path_base
operator >=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    boolean operator>=(const fract &a) const$/;"	f	class:fract
operator >=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator>=(const i_integer &other) const$/;"	f	class:i_integer
operator >=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator>=(const i_rational &other) const$/;"	f	class:i_rational
operator >=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator>=(const i_integer &left, operand right)$/;"	f
operator >=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator>=(int left, operand right)$/;"	f
operator >=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator>=(operand left, const i_integer &right)$/;"	f
operator >=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator>=(operand left, int right)$/;"	f
operator >=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator>=(operand left, operand right)$/;"	f
operator >>	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>>(block & b)       { return dobinop(bop_rshift, b); }$/;"	f	class:block
operator >>	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>>(char * b)        { return dobinop(bop_rshift, b); }$/;"	f	class:block
operator >>	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>>(double b)        { return dobinop(bop_rshift, b); }$/;"	f	class:block
operator >>	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>>(float b)         { return dobinop(bop_rshift, b); }$/;"	f	class:block
operator >>	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>>(int b)           { return dobinop(bop_rshift, b); }$/;"	f	class:block
operator >>	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator>>(operand left, const i_integer &right)$/;"	f
operator >>	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator>>(operand left, operand right)$/;"	f
operator >>=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>>=(block & b)      { return doasignop(aop_rshift, b); }$/;"	f	class:block
operator >>=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>>=(char * b)       { return doasignop(aop_rshift, b); }$/;"	f	class:block
operator >>=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>>=(double b)       { return doasignop(aop_rshift, b); }$/;"	f	class:block
operator >>=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>>=(float b)        { return doasignop(aop_rshift, b); }$/;"	f	class:block
operator >>=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator>>=(int b)          { return doasignop(aop_rshift, b); }$/;"	f	class:block
operator >>=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator>>=(const i_integer &other)$/;"	f	class:i_integer
operator >>=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator>>=(operand &left, const i_integer &right)$/;"	f
operator >>=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator>>=(operand &left, operand right)$/;"	f
operator []	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    block & operator[](block & acc)       { return ARRAY(*this, acc); }$/;"	f	class:block
operator []	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    block & operator[](block *acc)        { return ARRAY(*this, *acc); }$/;"	f	class:block
operator []	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    block & operator[](int i)             { block acc(i);$/;"	f	class:block
operator []	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^	integer_row & operator [](int row) { assert((row>=0)&&(row<mm)); return A[row]; }$/;"	f	class:integer_matrix
operator []	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^    int & operator[](int i) { assert((i>=0)&&(i<sz)); return R[i]; }$/;"	f	class:integer_row
operator []	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    constraint & operator [](int row) { assert((row>=0)&&(row<mm)); $/;"	f	class:lin_ineq
operator []	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^	integer_row & operator [](int row) { assert((row>=0)&&(row<mm)); return A[row]; }$/;"	f	class:integer_matrix
operator []	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^    int & operator[](int i) { assert((i>=0)&&(i<sz)); return R[i]; }$/;"	f	class:integer_row
operator []	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    constraint & operator [](int row) { assert((row>=0)&&(row<mm)); $/;"	f	class:lin_ineq
operator []	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^    inline PTR_TYPE *&operator[](int i)$/;"	f	class:Parameterized_x_array1
operator []	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  TYPE &operator[](int i)$/;"	f	class:Parameterized_x_array0
operator []	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    inline PTR_TYPE *&operator[](int i)$/;"	f	class:Parameterized_x_array1
operator []	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^    dlist_e *operator[](int ndx) const$/;"	f	class:dlist
operator []	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    fract &operator[](int i) $/;"	f	class:fract_vector
operator []	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^	integer_row & operator [](int row) { assert((row>=0)&&(row<mm)); return A[row]; }$/;"	f	class:integer_matrix
operator []	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    int & operator[](int i) { assert((i>=0)&&(i<sz)); return R[i]; }$/;"	f	class:integer_row
operator []	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    constraint & operator [](int row) { assert((row>=0)&&(row<mm));$/;"	f	class:lin_ineq
operator []	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    name_table_entry & operator[](int i)        { assert((i>=1)&&(i<sz));$/;"	f	class:name_table
operator []	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int * operator[](int im)            { assert((im>=0)&&(im<m()));$/;"	f	class:sc_fm_results
operator []	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int * operator[](int ip)                    { $/;"	f	class:sc_fm_constraint
operator []	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    sc_fm_constraint & operator[](int i)       { $/;"	f	class:named_sc_fm
operator []	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    lin_ineq & operator[](int i)                { $/;"	f	class:named_symcoeff_ineq
operator []	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    inline PTR_TYPE *&operator[](int i)$/;"	f	class:Parameterized_x_array1
operator ^	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator^(block & b)        { return dobinop(bop_xor, b); }$/;"	f	class:block
operator ^	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator^(char * b)         { return dobinop(bop_xor, b); }$/;"	f	class:block
operator ^	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator^(double b)         { return dobinop(bop_xor, b); }$/;"	f	class:block
operator ^	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator^(float b)          { return dobinop(bop_xor, b); }$/;"	f	class:block
operator ^	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator^(int b)            { return dobinop(bop_xor, b); }$/;"	f	class:block
operator ^	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator^(const i_integer &left, operand right)$/;"	f
operator ^	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator^(operand left, const i_integer &right)$/;"	f
operator ^	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator^(operand left, operand right)$/;"	f
operator ^=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator^=(block & b)       { return doasignop(aop_xor, b); }$/;"	f	class:block
operator ^=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator^=(char * b)        { return doasignop(aop_xor, b); }$/;"	f	class:block
operator ^=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator^=(double b)        { return doasignop(aop_xor, b); }$/;"	f	class:block
operator ^=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator^=(float b)         { return doasignop(aop_xor, b); }$/;"	f	class:block
operator ^=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator^=(int b)           { return doasignop(aop_xor, b); }$/;"	f	class:block
operator ^=	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    void operator^=(constraint & row) { (*((integer_row *)this)) ^= (integer_row &) row; } \/\/ Swap Rows$/;"	f	class:constraint
operator ^=	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    void operator^=(constraint & row) { (*((integer_row *)this)) ^= (integer_row &) row; } \/\/ Swap Rows$/;"	f	class:constraint
operator ^=	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    void operator^=(constraint & row)$/;"	f	class:constraint
operator ^=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator^=(const i_integer &other)$/;"	f	class:i_integer
operator ^=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator^=(operand &left, const i_integer &right)$/;"	f
operator ^=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator^=(operand &left, operand right)$/;"	f
operator int	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    operator int()			{ return reg_no; }$/;"	f	class:if_reg
operator void *	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    operator void *()			{ return (void *)reg_no; }$/;"	f	class:if_reg
operator |	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator|(block & b)        { return dobinop(bop_or, b); }$/;"	f	class:block
operator |	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator|(char * b)         { return dobinop(bop_or, b); }$/;"	f	class:block
operator |	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator|(double b)         { return dobinop(bop_or, b); }$/;"	f	class:block
operator |	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator|(float b)          { return dobinop(bop_or, b); }$/;"	f	class:block
operator |	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator|(int b)            { return dobinop(bop_or, b); }$/;"	f	class:block
operator |	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^        integer_matrix  operator|(integer_matrix & A) { return c_merge(*this, A); }$/;"	f	class:integer_matrix
operator |	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^        integer_matrix  operator|(integer_matrix & A) { return c_merge(*this, A); }$/;"	f	class:integer_matrix
operator |	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    fract_matrix operator|(const fract_matrix &mat) const$/;"	f	class:fract_matrix
operator |	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^        integer_matrix  operator|(const integer_matrix & A) const$/;"	f	class:integer_matrix
operator |	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    matrix operator|(matrix &mat) { return c_merge(mat); }$/;"	f	class:matrix
operator |	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator|(const i_integer &left, operand right)$/;"	f
operator |	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator|(operand left, const i_integer &right)$/;"	f
operator |	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator|(operand left, operand right)$/;"	f
operator |=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator|=(block & b)       { return doasignop(aop_or, b); }$/;"	f	class:block
operator |=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator|=(char * b)        { return doasignop(aop_or, b); }$/;"	f	class:block
operator |=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator|=(double b)        { return doasignop(aop_or, b); }$/;"	f	class:block
operator |=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator|=(float b)         { return doasignop(aop_or, b); }$/;"	f	class:block
operator |=	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator|=(int b)           { return doasignop(aop_or, b); }$/;"	f	class:block
operator |=	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer &operator|=(const i_integer &other)$/;"	f	class:i_integer
operator |=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator|=(operand &left, const i_integer &right)$/;"	f
operator |=	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand &operator|=(operand &left, operand right)$/;"	f
operator ||	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator||(block & b)       { return dobinop(bop_lor, b); }$/;"	f	class:block
operator ||	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator||(char * b)        { return dobinop(bop_lor, b); }$/;"	f	class:block
operator ||	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator||(double b)        { return dobinop(bop_lor, b); }$/;"	f	class:block
operator ||	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator||(float b)         { return dobinop(bop_lor, b); }$/;"	f	class:block
operator ||	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator||(int b)           { return dobinop(bop_lor, b); }$/;"	f	class:block
operator ||	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator||(const i_integer &other) const$/;"	f	class:i_integer
operator ||	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    boolean operator||(const i_rational &other) const$/;"	f	class:i_rational
operator ~	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     block & operator~()                 { return douniop(uop_not); }$/;"	f	class:block
operator ~	/cad2/ece540s/basesuif-1.1.2/include/useful/operand_operators.h	/^inline operand operator~(operand op)$/;"	f
opnm	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    char *opnm;$/;"	m	class:in_gen
opval	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^	operand_dataonly opval;$/;"	m	union:immed_dataonly::__anon34
orig_loop	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    marked_nsi_list orig_loop;                  \/\/ valid original nests$/;"	m	class:level_elem
orl	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint orl;$/;"	m	struct:__anon44
orl	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint orl;$/;"	m	struct:__anon20
os	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    if_ostream *os;$/;"	m	class:proc_iter
os	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    out_stream *os;			\/* output stream *\/$/;"	m	class:file_set_entry
osta	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	char *osta;$/;"	m	struct:__anon44
osta	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	char *osta;$/;"	m	struct:__anon20
ostream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^  ostream() { indent_suppress = 0; indent_level=0; indent_width=8; nlines=1; }$/;"	f	struct:ostream
ostream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^struct ostream$/;"	s
ostream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^  ostream() { indent_suppress=0; indent_level=0; indent_width=8; nlines=1; }$/;"	f	struct:ostream
ostream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^struct ostream$/;"	s
ostreams	/cad2/ece540s/basesuif-1.1.2/include/hawg/hawghooks.h	/^	if_ostream *ostreams;$/;"	m	class:Hawg_hooks
ot	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    op_type ot;$/;"	m	struct:any_oper
ot_ass	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^               ot_ass };$/;"	e	enum:op_type
ot_bin	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^               ot_uni, ot_bin,$/;"	e	enum:op_type
ot_none	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum op_type { ot_none, ot_ub,$/;"	e	enum:op_type
ot_ub	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^enum op_type { ot_none, ot_ub,$/;"	e	enum:op_type
ot_uni	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^               ot_uni, ot_bin,$/;"	e	enum:op_type
other_annotations	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^    in_mrk *other_annotations;$/;"	m	class:procedure_info
other_entrances	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^    Node_index_xarray other_entrances;$/;"	m	class:Header_info
other_entrances	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^    Node_index_xarray other_entrances;$/;"	m	class:Header_info
other_entrances	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^    Node_index_xarray other_entrances;$/;"	m	class:Header_info
ounit	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	ftnint ounit;$/;"	m	struct:__anon44
ounit	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	ftnint ounit;$/;"	m	struct:__anon20
out	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    boolean out;$/;"	m	class:annote_def
out_edges	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int *out_edges;$/;"	m	class:PP_state
out_edges	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int *out_edges;$/;"	m	class:PP_state
out_name	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    char *out_name()			{ return (os ? os->name() : NULL); }$/;"	f	class:file_set_entry
out_stream	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    out_stream(char *n) : base_stream(n) { }$/;"	f	class:out_stream
out_stream	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^class out_stream : public base_stream {$/;"	c
output	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    boolean output()			{ return out; }$/;"	f	class:annote_def
p	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    dep_node_proc *p() {return (dep_node_proc *)ast_proc_iter::p();}$/;"	f	class:dep_node_proc_iter
p	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    dep_node_proc *p() {return (dep_node_proc *)ast_proc_iter::p();}$/;"	f	class:dep_node_proc_iter
p	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^    ast_proc * p()			{ return proc; }$/;"	f	class:ast_proc_iter
p	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int p()                                     { return nm_p.n(); }$/;"	f	class:named_sc_fm
p	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int p()                                     { return pp; }$/;"	f	class:sc_fm_constraint
p	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    int p()                                     { return nt_p.n(); }$/;"	f	class:named_symcoeff_ineq
p_entry	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	24;"	d
p_integer_matrix	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^typedef integer_matrix * p_integer_matrix;$/;"	t
p_lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^typedef lin_ineq * p_lin_ineq;$/;"	t
p_named_lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^typedef named_lin_ineq * p_named_lin_ineq;$/;"	t
p_named_symcoeff_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^typedef named_symcoeff_ineq * p_named_symcoeff_ineq;$/;"	t
p_sc_fm_constraint	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^typedef sc_fm_constraint * p_sc_fm_constraint;$/;"	t
pair_count	/cad2/ece540s/basesuif-1.1.2/include/expr_map.h	/^    unsigned pair_count;$/;"	m	class:expr_map
pair_count	/cad2/ece540s/basesuif-1.1.2/include/useful/expr_map.h	/^    unsigned pair_count;$/;"	m	class:expr_map
par	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^    gen_tree * par;$/;"	m	struct:gen_tree
par	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    file_set *par;			\/* parent file_set *\/$/;"	m	class:file_set_entry
par	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    tree_instr *par;$/;"	m	class:instruction
par	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    base_symtab *par;			\/* parent symtab *\/$/;"	m	class:base_symtab
par	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node *par;$/;"	m	class:tree_node_list
par	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *par;		\/* parent list *\/$/;"	m	class:tree_node
par	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    level_elem * par;                           \/\/ parent loop$/;"	m	class:level_elem
paramblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Paramblock paramblock;$/;"	m	union:Expression	typeref:struct:Expression::Paramblock
paramkind	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^        int paramkind[TABLESIZE];$/;"	m	class:name_store
paramkind	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^        int paramkind[TABLESIZE];$/;"	m	class:name_store
paramkind	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	/^        int paramkind[TABLESIZE];$/;"	m	class:name_store
params	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^	char *params[TABLESIZE];$/;"	m	class:name_store
params	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^	char *params[TABLESIZE];$/;"	m	class:name_store
params	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    sym_node_list *params()		{ return prms; }$/;"	f	class:proc_symtab
params	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	/^	char *params[TABLESIZE];$/;"	m	class:name_store
paramval	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr paramval;$/;"	m	struct:Paramblock
parent	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    ast_node_suif_instr * parent()	{ return prnt; }$/;"	f	class:ast_node_suif_instr
parent	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    ast_node *parent;$/;"	m	class:ast_node_list
parent	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base *parent;$/;"	m	class:path_base
parent	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    file_set *parent()			{ return par; }$/;"	f	class:file_set_entry
parent	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    tree_instr *parent()		{ return par; }$/;"	f	class:instruction
parent	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    base_symtab *parent()		{ return table; }$/;"	f	class:sym_node
parent	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    base_symtab *parent()		{ return par; }$/;"	f	class:base_symtab
parent	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node *parent()			{ return par; }$/;"	f	class:tree_node_list
parent	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *parent()		{ return par; }$/;"	f	class:tree_node
parent	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    base_symtab *parent()		{ return table; }$/;"	f	class:type_node
parent	/cad2/ece540s/basesuif-1.1.2/include/suif/vardef.h	/^    base_symtab *parent()		{ return table; }$/;"	f	class:var_def
parent	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    level_elem * parent()                       { return par; }$/;"	f	class:level_elem
parent	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    value_tree * parent()                       { return pp; }$/;"	f	class:value_tree
parent_var	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    var_sym *parent_var(void)		{ return the_parent_var; }$/;"	f	class:var_sym
path	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path()				{ }$/;"	f	class:path
path	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path(path &p)			{ offset = p.offset; base = p.base; }$/;"	f	class:path
path	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path(path *p)			{ offset = p->offset; base = p->base; }$/;"	f	class:path
path	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^class path {$/;"	c
path_base	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base()				{ }$/;"	f	class:path_base
path_base	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base(char *)			{ assert(FALSE); }$/;"	f	class:path_base
path_base	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base(const path_base &)	{ assert(FALSE); }$/;"	f	class:path_base
path_base	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^class path_base {$/;"	c
path_base_iter	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base_iter()			{ cur = nxt = NULL; }$/;"	f	class:path_base_iter
path_base_iter	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base_iter(path_base *r)	{ reset(r); }$/;"	f	class:path_base_iter
path_base_iter	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^class path_base_iter {$/;"	c
path_base_list	/cad2/ece540s/basesuif-1.1.2/include/hawg/pblist.h	/^    path_base_list()			{ }$/;"	f	class:path_base_list
path_base_list	/cad2/ece540s/basesuif-1.1.2/include/hawg/pblist.h	/^class path_base_list : public conslist {$/;"	c
path_base_list_iter	/cad2/ece540s/basesuif-1.1.2/include/hawg/pblist.h	/^    path_base_list_iter()		{ }$/;"	f	class:path_base_list_iter
path_base_list_iter	/cad2/ece540s/basesuif-1.1.2/include/hawg/pblist.h	/^    path_base_list_iter(path_base_list *sl) { reset(sl); }$/;"	f	class:path_base_list_iter
path_base_list_iter	/cad2/ece540s/basesuif-1.1.2/include/hawg/pblist.h	/^class path_base_list_iter : public consiter {$/;"	c
path_debug	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit_test.h	/^  int path_debug;$/;"	m	class:Sprob_switches
path_debug	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_test.h	/^  int path_debug;$/;"	m	class:Sprob_switches
path_debug	/cad2/ece540s/basesuif-1.1.2/include/sharlit_test.h	/^  int path_debug;$/;"	m	class:Sprob_switches
path_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    path_e(path_base *b, path_e *n)	{ pval = b; next = n; }$/;"	f	class:path_e
path_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^class path_e {$/;"	c
path_info	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_info(int k, char *n, path_base *b)$/;"	f	class:path_info
path_info	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^class path_info {$/;"	c
path_kind	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^enum path_kind {$/;"	g
pb_alist	/cad2/ece540s/basesuif-1.1.2/include/hawg/pblist.h	/^    pb_alist()				{ }$/;"	f	class:pb_alist
pb_alist	/cad2/ece540s/basesuif-1.1.2/include/hawg/pblist.h	/^class pb_alist : public alist {$/;"	c
pb_markers	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^enum pb_markers { pb_root = -2, pb_raw = -1 };$/;"	g
pb_raw	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^enum pb_markers { pb_root = -2, pb_raw = -1 };$/;"	e	enum:pb_markers
pb_root	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^enum pb_markers { pb_root = -2, pb_raw = -1 };$/;"	e	enum:pb_markers
pblock	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^typedef block * pblock;$/;"	t
peek	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    void * peek()			{ return ((cons_e *)glist_iter::peek())$/;"	f	class:consiter
peek	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist_e * peek()			{ return nxt; }$/;"	f	class:glist_iter
peek	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^    int peek()				{ return ((intlist_e *)$/;"	f	class:intlist_iter
peek	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    void * peek()			{ return ((cons_e *)glist_iter::peek())$/;"	f	class:consiter
peek	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn *peek() { return (Seqn *)consiter::peek(); }$/;"	f	struct:Seqn_consiter
peek	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode *peek() { return (Snode *)consiter::peek(); }$/;"	f	struct:Snode_iter
peek	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record *peek() { return (ty_record *)consiter::peek(); }$/;"	f	class:ty_record_list_iter
peek	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn *peek() { return (Seqn *)consiter::peek(); }$/;"	f	struct:Seqn_consiter
peek	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode *peek() { return (Snode *)consiter::peek(); }$/;"	f	struct:Snode_iter
peek	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn *peek() { return (Seqn *)consiter::peek(); }$/;"	f	struct:Seqn_consiter
peek	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode *peek() { return (Snode *)consiter::peek(); }$/;"	f	struct:Snode_iter
peek	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record *peek() { return (ty_record *)consiter::peek(); }$/;"	f	class:ty_record_list_iter
peek	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *peek()		{ return (alist_e *)glist_iter::peek(); }$/;"	f	class:alist_iter
peek	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^    dlist_e *peek() const		{ return (dlist_e*)glist_iter::peek();}$/;"	f	class:dlist_iter
peek	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_e *peek() const		{ return nxt; }$/;"	f	class:glist_iter
pet_expr	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^enum print_exp_type { pet_single, pet_system, pet_system_nl, pet_max, pet_min, pet_expr, pet_expr_nl};$/;"	e	enum:print_exp_type
pet_expr_nl	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^enum print_exp_type { pet_single, pet_system, pet_system_nl, pet_max, pet_min, pet_expr, pet_expr_nl};$/;"	e	enum:print_exp_type
pet_max	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^enum print_exp_type { pet_single, pet_system, pet_system_nl, pet_max, pet_min, pet_expr, pet_expr_nl};$/;"	e	enum:print_exp_type
pet_min	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^enum print_exp_type { pet_single, pet_system, pet_system_nl, pet_max, pet_min, pet_expr, pet_expr_nl};$/;"	e	enum:print_exp_type
pet_single	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^enum print_exp_type { pet_single, pet_system, pet_system_nl, pet_max, pet_min, pet_expr, pet_expr_nl};$/;"	e	enum:print_exp_type
pet_system	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^enum print_exp_type { pet_single, pet_system, pet_system_nl, pet_max, pet_min, pet_expr, pet_expr_nl};$/;"	e	enum:print_exp_type
pet_system_nl	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^enum print_exp_type { pet_single, pet_system, pet_system_nl, pet_max, pet_min, pet_expr, pet_expr_nl};$/;"	e	enum:print_exp_type
phead	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    path_e *phead;$/;"	m	class:alias_set
pivot_cols	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    boolean *pivot_cols;     \/\/ Is the column a pivot column?$/;"	m	class:matrix
placeholder_list	/cad2/ece540s/basesuif-1.1.2/include/ist.h	/^    alist placeholder_list;$/;"	m	class:ist
placeholder_list	/cad2/ece540s/basesuif-1.1.2/include/ist/ist.h	/^    alist placeholder_list;$/;"	m	class:ist
plane_rank	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int plane_rank()                            { return prnk; }$/;"	f	class:sc_fm_constraint
planes	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    name_table & planes()                       { return nt_p; }$/;"	f	class:named_symcoeff_ineq
pnt	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    static name_table * pnt;                    \/\/ align the planes$/;"	m	class:named_sc_merge
poly_iterator	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    poly_iterator(lin_ineq & in) { S.init(in); $/;"	f	class:poly_iterator
poly_iterator	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    poly_iterator(lin_ineq * in) { S.init(in); $/;"	f	class:poly_iterator
poly_iterator	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^class poly_iterator {$/;"	c
poly_iterator	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    poly_iterator(lin_ineq & in) { S.init(in); $/;"	f	class:poly_iterator
poly_iterator	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    poly_iterator(lin_ineq * in) { S.init(in); $/;"	f	class:poly_iterator
poly_iterator	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^class poly_iterator {$/;"	c
poly_iterator	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    poly_iterator(lin_ineq & in) { S.init(in); $/;"	f	class:poly_iterator
poly_iterator	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    poly_iterator(lin_ineq * in) { S.init(in); $/;"	f	class:poly_iterator
poly_iterator	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^class poly_iterator {$/;"	c
pop	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_list_e *pop() {return (access_list_e *) alist::pop();}$/;"	f	struct:access_list
pop	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_vector *pop() {return (access_vector *) glist::pop();}$/;"	f	class:array_info
pop	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    distance_vector_e *pop()$/;"	f	struct:distance_vector
pop	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    dvlist_e *pop()$/;"	f	class:dvlist
pop	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_list_e *pop() {return (access_list_e *) alist::pop();}$/;"	f	struct:access_list
pop	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_vector *pop() {return (access_vector *) glist::pop();}$/;"	f	class:array_info
pop	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	distance_vector_e *pop()$/;"	f	struct:distance_vector
pop	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	dvlist_e *pop()$/;"	f	class:dvlist
pop	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_list_e *pop() {return (access_list_e *) alist::pop();}$/;"	f	struct:access_list
pop	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_vector *pop() {return (access_vector *) glist::pop();}$/;"	f	class:array_info
pop	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	distance_vector_e *pop()$/;"	f	struct:distance_vector
pop	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	dvlist_e *pop()$/;"	f	class:dvlist
pop	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    ast_node * pop()			{ return (ast_node *)clist_e::pop(); }$/;"	f	class:ast_node
pop	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    ast_node * pop()			{ return (ast_node *)clist_e::pop(); }$/;"	f	class:ast_node_list
pop	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e * pop()			{ return (alist_e *)glist::pop(); }$/;"	f	class:alist
pop	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e * pop()			{ return (alist_e *)glist::pop(); }$/;"	f	class:amtflist
pop	/cad2/ece540s/basesuif-1.1.2/include/hawg/pblist.h	/^    path_base *pop()			{ return (path_base *)conslist::pop(); }$/;"	f	class:path_base_list
pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn *pop() { return (Seqn *)conslist::pop(); }$/;"	f	struct:Seqn_conslist
pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn *pop() { return (Seqn *)glist::pop(); }$/;"	f	struct:Seqn_list
pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Svar *pop() { return (Svar *)conslist::pop(); }$/;"	f	struct:Svar_list
pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  Sedge *pop()$/;"	f	class:Sedge_list
pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_case *pop() { return (sc_case *)glist::pop(); }$/;"	f	struct:sc_cases
pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_code *pop() { return (sc_code *)glist::pop(); }$/;"	f	struct:sc_list2
pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_code *pop() { return list.pop(); }$/;"	f	struct:sc_list
pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_expr *pop() { return (sc_expr *)glist::pop(); }$/;"	f	struct:sc_elist
pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *pop() { return (Symbol *)l.pop(); }$/;"	f	class:Symbol_list
pop	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record *pop() { return (ty_record *)conslist::pop(); }$/;"	f	class:ty_record_list
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Sedge *pop() { return (Sedge *)glist::pop(); }$/;"	f	struct:Sedge_list
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn *pop() { return (Seqn *)conslist::pop(); }$/;"	f	struct:Seqn_conslist
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn *pop() { return (Seqn *)glist::pop(); }$/;"	f	struct:Seqn_list
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Svar *pop() { return (Svar *)conslist::pop(); }$/;"	f	struct:Svar_list
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Sedge *pop() { return (Sedge *)glist::pop(); }$/;"	f	struct:Sedge_list
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn *pop() { return (Seqn *)conslist::pop(); }$/;"	f	struct:Seqn_conslist
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn *pop() { return (Seqn *)glist::pop(); }$/;"	f	struct:Seqn_list
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Svar *pop() { return (Svar *)conslist::pop(); }$/;"	f	struct:Svar_list
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_case *pop() { return (sc_case *)glist::pop(); }$/;"	f	struct:sc_cases
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_code *pop() { return (sc_code *)glist::pop(); }$/;"	f	struct:sc_list2
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_code *pop() { return list.pop(); }$/;"	f	struct:sc_list
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_expr *pop() { return (sc_expr *)glist::pop(); }$/;"	f	struct:sc_elist
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *pop() { return (Symbol *)l.pop(); }$/;"	f	class:Symbol_list
pop	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record *pop() { return (ty_record *)conslist::pop(); }$/;"	f	class:ty_record_list
pop	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *pop()			{ return (alist_e *)glist::pop(); }$/;"	f	class:alist
pop	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *pop()			{ return (alist_e*)mtflist::pop(); }$/;"	f	class:amtflist
pos	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    long pos(char *proc_name)		{ return search(proc_name)->pos; }$/;"	f	class:seek_proc
pos	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    long pos;$/;"	m	class:seek_proc_e
pos	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    long pos;$/;"	m	class:base_stream
post_basic_annote_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    basic_annote_walkee *post_basic_annote_walkee;$/;"	m	class:so_walker
post_basic_op_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    basic_op_walkee *post_basic_op_walkee;$/;"	m	class:so_walker
post_basic_so_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    basic_so_walkee *post_basic_so_walkee;$/;"	m	class:so_walker
post_simple_annote_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    simple_annote_walkee *post_simple_annote_walkee;$/;"	m	class:so_walker
post_simple_op_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    simple_op_walkee *post_simple_op_walkee;$/;"	m	class:so_walker
post_simple_so_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    simple_so_walkee *post_simple_so_walkee;$/;"	m	class:so_walker
pp	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int pp;$/;"	m	class:sc_fm_constraint
pp	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    value_tree * pp;                            \/\/ Parent$/;"	m	class:value_tree
pr	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    tree_proc *pr;			\/* the procedure body *\/$/;"	m	class:proc_sym
pr_f	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    ann_print_f pr_f;$/;"	m	class:struct_annote_def
pre_basic_annote_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    basic_annote_walkee *pre_basic_annote_walkee;$/;"	m	class:so_walker
pre_basic_op_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    basic_op_walkee *pre_basic_op_walkee;$/;"	m	class:so_walker
pre_basic_so_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    basic_so_walkee *pre_basic_so_walkee;$/;"	m	class:so_walker
pre_simple_annote_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    simple_annote_walkee *pre_simple_annote_walkee;$/;"	m	class:so_walker
pre_simple_op_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    simple_op_walkee *pre_simple_op_walkee;$/;"	m	class:so_walker
pre_simple_so_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    simple_so_walkee *pre_simple_so_walkee;$/;"	m	class:so_walker
prec	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	/^    int prec;			\/* Precedence level, useful for adjusting$/;"	m	struct:__anon14
predecessors	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual CFGnode **predecessors(Node_index u,int *ip)$/;"	f	class:CFG_1_reversed
prefix	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base * prefix()		{ return parent; }$/;"	f	class:path_base
prefix	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	/^    char *prefix;$/;"	m	struct:__anon15
preg_collector	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^    annote_eater preg_collector;$/;"	m	class:Flow_hooks
preg_node	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^class preg_node : public sym_node {$/;"	c
preg_sym	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^    preg_sym,$/;"	e	enum:sym_kinds
prev	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    ast_node * prev()			{ return (ast_node *)dlist_e::prev_e; }$/;"	f	class:ast_node
prev	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    unsigned long curr, prev;$/;"	m	class:lin_ineq_negate_iter
prev	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    unsigned long curr, prev;$/;"	m	class:lin_ineq_negate_iter
prev	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Hashed_scope *prev;$/;"	m	class:Hashed_scope
prev	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Hashed_scope *prev;$/;"	m	class:Hashed_scope
prev	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    struct simple_instr_struct *prev;	\/* ptr to previous instruction *\/$/;"	m	struct:simple_instr_struct	typeref:struct:simple_instr_struct::simple_instr_struct
prev	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    struct simple_instr_struct *prev;	\/* ptr to previous instruction *\/$/;"	m	struct:simple_instr_struct	typeref:struct:simple_instr_struct::simple_instr_struct
prev	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^    dlist_e *prev() const		{ return prev_e; }$/;"	f	class:dlist_e
prev	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    unsigned long curr, prev;$/;"	m	class:lin_ineq_negate_iter
prev_e	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    dlist_e *next_e, *prev_e;$/;"	m	class:dlist_e
prev_e	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^    dlist_e *prev_e;$/;"	m	class:dlist_e
prev_tab	/cad2/ece540s/basesuif-1.1.2/include/sf2c/nice_printf.h	13;"	d
primblock	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Primblock primblock;$/;"	m	union:Expression	typeref:struct:Expression::Primblock
print	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    void print(FILE * fp = stdout)         { builder::print(this, fp, 0); }$/;"	f	class:block
print	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	void print(FILE *fp) {$/;"	f	struct:dir_array
print	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	void print(FILE *fp) {$/;"	f	struct:dir_list
print	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^    void print(FILE *fp) {$/;"	f	class:int_indef
print	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	void print(FILE *fp) {$/;"	f	class:int_indef
print	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	void print(FILE *fp) {$/;"	f	struct:dir_array
print	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	void print(FILE *fp) {$/;"	f	struct:dir_list
print	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	void print(FILE *fp) {$/;"	f	class:int_indef
print	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	void print(FILE *fp) {$/;"	f	struct:dir_array
print	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	void print(FILE *fp) {$/;"	f	struct:dir_list
print	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^    void print(FILE * fp) { for(int i=0; i< n(); i++) fprintf(fp, "%d ", (*this)[i]); fprintf(fp, "\\n"); }$/;"	f	class:integer_row
print	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^    void print(FILE * fp) { for(int i=0; i< n(); i++) fprintf(fp, "%d ", (*this)[i]); fprintf(fp, "\\n"); }$/;"	f	class:integer_row
print	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^        void print(FILE * fp) {$/;"	f	class:name_store
print	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^        void print(FILE * fp) {$/;"	f	class:name_store
print	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    ann_print_f print()			{ return pr_f; }$/;"	f	class:struct_annote_def
print	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    void print(FILE * fp=stderr) const { for(int i=0; i< n(); i++) fprintf(fp, "%d ", R[i]); fprintf(fp, "\\n"); }$/;"	f	class:integer_row
print	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    void print(FILE *fp=stderr)                 { print(0,fp); }$/;"	f	class:value_tree
print	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    void print(int knd=1, FILE *fp=stderr)       { print(-1, knd, fp); }$/;"	f	class:level_elem
print	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	/^        void print(FILE * fp) {$/;"	f	class:name_store
print_exp	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    void print_exp(FILE *fp)  { print_exp(pet_single, fp); }$/;"	f	class:named_symcoeff_ineq
print_exp_type	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^enum print_exp_type { pet_single, pet_system, pet_system_nl, pet_max, pet_min, pet_expr, pet_expr_nl};$/;"	g
print_helper	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    virtual void print_helper(FILE *)	{ }$/;"	f	class:sym_node
print_helper	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual void print_helper(FILE *, int \/* depth *\/) { }$/;"	f	class:type_node
print_source	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    void print_source(FILE *f=stdout) const	{ print(f); } \/* obsolete *\/$/;"	f	class:operand
priv_access	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    priv_access() { }$/;"	f	class:priv_access
priv_access	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^class priv_access {$/;"	c
priv_access	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    priv_access() { }$/;"	f	class:priv_access
priv_access	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^class priv_access {$/;"	c
priv_access	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    priv_access() { }$/;"	f	class:priv_access
priv_access	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^class priv_access {$/;"	c
prms	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    sym_node_list *prms;		\/* parameter list (in order) *\/$/;"	m	class:proc_symtab
prnk	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int prnk;$/;"	m	class:sc_fm_constraint
prnt	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    ast_node_suif_instr *prnt;$/;"	m	class:ast_node_suif_instr
proc	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    static tree_proc * proc;$/;"	m	class:builder_base
proc	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^    ast_proc *proc;$/;"	m	class:ast_proc_iter
proc	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^    proc()				{ name = NULL; }$/;"	f	class:proc
proc	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^class proc {$/;"	c
proc	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_reg *proc;		\/* address of the callee *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon54
proc	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_reg *proc;		\/* address of the callee *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon31
proc	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    proc_sym *proc()			{ return psym; }$/;"	f	class:tree_proc
proc_index	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^    int proc_index;$/;"	m	class:if_ristream
proc_index	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^    int proc_index;$/;"	m	class:if_rostream
proc_iter	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^class proc_iter {$/;"	c
proc_name	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    char *proc_name;$/;"	m	class:seek_proc_e
proc_process	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    void proc_process()$/;"	f	class:dep_node_proc_iter
proc_process	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    void proc_process()$/;"	f	class:dep_node_proc_iter
proc_process	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    virtual void proc_process()		{ assert(FALSE); }$/;"	f	class:proc_iter
proc_starter	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^typedef void (*proc_starter)(proc *, in_mrk *);$/;"	t
proc_sym	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    proc_sym()				{ }$/;"	f	class:proc_sym
proc_sym	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^class proc_sym : public sym_node {$/;"	c
proc_syms	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    proc_symtab *proc_syms()		{ return (proc_symtab *)symtab(); }$/;"	f	class:tree_proc
proc_symtab	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^class proc_symtab : public block_symtab {$/;"	c
procbody	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^    ast_node_list *procbody;$/;"	m	class:ast_graph
procedure	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    ast_proc *procedure;$/;"	m	class:ast_node_list
procedure	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^    ast_proc *procedure;$/;"	m	class:ast_graph
procedure	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^    proc * procedure;$/;"	m	class:simple_graph
procedure	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^    proc *procedure;$/;"	m	class:procedure_info
procedure_info	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^    procedure_info(char *n, path_base *b) : path_info(PK_procedure_info, n, b)$/;"	f	class:procedure_info
procedure_info	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^class procedure_info : public path_info {$/;"	c
procedure_manager	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^    procedure_manager(char *n, path_base *b)$/;"	f	class:procedure_manager
procedure_manager	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^class procedure_manager : public path_info {$/;"	c
process_function	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *process_function;$/;"	m	class:SV_node
process_function	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *process_function;$/;"	m	class:SV_node
processed	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int processed;$/;"	m	class:PP_state
processed	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int processed;$/;"	m	class:PP_state
prociter_f	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^typedef void (*prociter_f)(tree_proc * p);$/;"	t
pseudo_reg	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^inline if_reg pseudo_reg(int rg)	{ return if_reg(rk_pseudo, rg); }$/;"	f
psym	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    proc_sym *psym;$/;"	m	class:tree_proc
ptr	/cad2/ece540s/basesuif-1.1.2/include/builder/bldtypes.h	/^    char * ptr;$/;"	m	class:type_template
ptr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	/^typedef int *ptr;$/;"	t
ptr	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    void *ptr;$/;"	m	union:any_type
ptr_diff_type	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    C_types ptr_diff_type;		\/* type produced by ptr subtraction *\/$/;"	m	struct:machine_params
ptr_index	/cad2/ece540s/basesuif-1.1.2/include/suif/ptr_index.h	/^    ptr_index(void)  { }$/;"	f	class:ptr_index
ptr_index	/cad2/ece540s/basesuif-1.1.2/include/suif/ptr_index.h	/^class ptr_index$/;"	c
ptr_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    ptr_type()				{ }$/;"	f	class:ptr_type
ptr_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^class ptr_type : public type_node {$/;"	c
push	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    void push (dvlist_e *d)$/;"	f	class:dvlist
push	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    void push(distance_vector_e *d)$/;"	f	struct:distance_vector
push	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	void push (dvlist_e *d)$/;"	f	class:dvlist
push	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	void push(distance_vector_e *d)$/;"	f	struct:distance_vector
push	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	void push (dvlist_e *d)$/;"	f	class:dvlist
push	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	void push(distance_vector_e *d)$/;"	f	struct:distance_vector
push	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^    void push(ast_node *i)		{ glist::push(new astlist_e(i)); }$/;"	f	class:astlist
push	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    void push(ast_node *e)		{ dlist_e::push((dlist_e *)e);$/;"	f	class:ast_node_list
push	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    void push(void *d)			{ glist::push(new cons_e(d)); }$/;"	f	class:conslist
push	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^    void push(int i)			{ glist::push(new intlist_e(i)); }$/;"	f	class:intlist
push	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    void push(int i)			{ ihead = new int_e(i, ihead); }$/;"	f	class:alias_set
push	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    void push(path_base *pb)		{ phead = new path_e(pb, phead); }$/;"	f	class:alias_set
push	/cad2/ece540s/basesuif-1.1.2/include/hawg/annotelist.h	/^    void push(annote *a)		{ glist::push(new annote_list_e(a)); }$/;"	f	class:annote_list
push	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	/^    void push(instruction *i)		{ glist::push(new ilist_e(i)); }$/;"	f	class:ilist
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    void push(void *d)			{ glist::push(new cons_e(d)); }$/;"	f	class:conslist
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Svar *push(Svar *v) { conslist::push(v); return v; }$/;"	f	struct:Svar_list
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void push(Seqn *e) { conslist::push(e); }$/;"	f	struct:Seqn_conslist
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void push(Seqn *e) { glist::push(e); }$/;"	f	struct:Seqn_list
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void push(Snode *s) { count++; conslist::push(s); }$/;"	f	class:Snode_list
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  Sedge *push(Sedge *e)$/;"	f	class:Sedge_list
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  Sedge *push(Seqn *f,Seqn *t)$/;"	f	class:Sedge_list
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_case *push(sc_case *c) { return (sc_case *)glist::push(c); }$/;"	f	struct:sc_cases
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_code *push(sc_code *s) { return (sc_code *)glist::push(s); }$/;"	f	struct:sc_list2
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_code *push(sc_code *s) { return list.push(s); }$/;"	f	struct:sc_list
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_expr *push(sc_expr *s) { return (sc_expr *)glist::push(s); }$/;"	f	struct:sc_elist
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    void push(SV_rule *r) { conslist::push(r); }$/;"	f	class:SV_rule_list
push	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    void push(Symbol *sp) { l.push(sp); }$/;"	f	class:Symbol_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Sedge *push(Sedge *e) { return (Sedge *)glist::push(e); }$/;"	f	struct:Sedge_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Sedge *push(Seqn *f,Seqn *t)$/;"	f	struct:Sedge_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Svar *push(Svar *v) { conslist::push(v); return v; }$/;"	f	struct:Svar_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void push(Seqn *e) { conslist::push(e); }$/;"	f	struct:Seqn_conslist
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void push(Seqn *e) { glist::push(e); }$/;"	f	struct:Seqn_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void push(Snode *s) { count++; conslist::push(s); }$/;"	f	class:Snode_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Sedge *push(Sedge *e) { return (Sedge *)glist::push(e); }$/;"	f	struct:Sedge_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Sedge *push(Seqn *f,Seqn *t)$/;"	f	struct:Sedge_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Svar *push(Svar *v) { conslist::push(v); return v; }$/;"	f	struct:Svar_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void push(Seqn *e) { conslist::push(e); }$/;"	f	struct:Seqn_conslist
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void push(Seqn *e) { glist::push(e); }$/;"	f	struct:Seqn_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void push(Snode *s) { count++; conslist::push(s); }$/;"	f	class:Snode_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_case *push(sc_case *c) { return (sc_case *)glist::push(c); }$/;"	f	struct:sc_cases
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_code *push(sc_code *s) { return (sc_code *)glist::push(s); }$/;"	f	struct:sc_list2
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_code *push(sc_code *s) { return list.push(s); }$/;"	f	struct:sc_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_expr *push(sc_expr *s) { return (sc_expr *)glist::push(s); }$/;"	f	struct:sc_elist
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    void push(SV_rule *r) { conslist::push(r); }$/;"	f	class:SV_rule_list
push	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    void push(Symbol *sp) { l.push(sp); }$/;"	f	class:Symbol_list
push	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *push(alist_e *e)		{ return (alist_e *)glist::push(e); }$/;"	f	class:alist
push	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *push(alist_e *e)		{ return (alist_e*)mtflist::push(e); }$/;"	f	class:amtflist
pval	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    path_base *pval;$/;"	m	class:path_e
pval	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^	path *pval;$/;"	m	union:icon::__anon4
qnames	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Q_binder *qnames;$/;"	m	class:SVR_absorb
qnames	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Q_binder *qnames;$/;"	m	class:SVR_unit
qnames	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Q_binder *qnames;$/;"	m	class:SVR_absorb
qnames	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Q_binder *qnames;$/;"	m	class:SVR_unit
r	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	real r;$/;"	m	union:Multitype
r	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	real r;$/;"	m	union:Multitype
r	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^        const integer_row &r(int row) const$/;"	f	class:integer_matrix
r	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    const constraint &r(int row) const { assert((row>=0)&&(row<mm));$/;"	f	class:lin_ineq
range	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    int range(access_ineq_e * ae) { return ((ae->level >= l)&&(ae->level <= u))?1:0; }$/;"	f	class:access_ineq_list_iter
range	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    int lower, range;$/;"	m	class:in_mbr
range	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    int range(access_ineq_e * ae) { return ((ae->level >= l)&&(ae->level <= u))?1:0; }$/;"	f	class:access_ineq_list_iter
range	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    int range(access_ineq_e * ae) { return ((ae->level >= l)&&(ae->level <= u))?1:0; }$/;"	f	class:access_ineq_list_iter
rank	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int rank()                                  { return crnk; }$/;"	f	class:sc_fm_constraint
raw_edges	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFG_1_edge_xarray raw_edges;$/;"	m	class:CFG_1
rc	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    const fract &rc(int r, int c) const$/;"	f	class:fract_matrix
rcnt	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    int cnt, rcnt;$/;"	m	class:Sproblem
rcnt	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    int cnt, rcnt;$/;"	m	class:Sproblem
rcnt	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    int cnt, rcnt;$/;"	m	class:Sproblem
rcount	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    unsigned short rcount, number, snumber;$/;"	m	class:Seqn
rcount	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    unsigned short rcount, number, snumber;$/;"	m	class:Seqn
rcount	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    unsigned short rcount, number, snumber;$/;"	m	class:Seqn
rdst	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg base, rdst;$/;"	m	class:in_array
read	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    virtual void read(if_istream *is)	{ instr = is->read_instruction(); }$/;"	f	class:ast_node_suif_instr
read	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^    virtual void read(if_istream *)	{ hawg_error(1, "i_storage::read"); }$/;"	f	class:i_storage
read	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^    void read(int *i)			{ if_istream::read(i); }$/;"	f	class:if_ristream
read_a_file	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    boolean read_a_file;		\/* have we read an input file yet? *\/$/;"	m	class:file_set
read_chunk	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    int read_chunk(void *cp, int sz)	{ return fread((char *)cp, 1, sz,$/;"	f	class:if_istream
real	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    double real() const			{ return double(n) \/ double(d); }$/;"	f	class:fract
real	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef float real;$/;"	t
real	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef float real;$/;"	t
real	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    double real() const			{ return double(n) \/ double(d); }$/;"	f	class:fract
red_operation	/cad2/ece540s/basesuif-1.1.2/include/fmred.h	/^enum red_operation { RO_DONT_REDUCE,$/;"	g
red_operation	/cad2/ece540s/basesuif-1.1.2/include/math/fmred.h	/^enum red_operation { RO_DONT_REDUCE,$/;"	g
red_operation	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fmred.h	/^enum red_operation { RO_DONT_REDUCE,$/;"	g
reduce_extra_constraints	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    lin_ineq reduce_extra_constraints() { $/;"	f	class:poly_iterator
reduce_extra_constraints	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    lin_ineq reduce_extra_constraints() { $/;"	f	class:poly_iterator
reduce_extra_constraints	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    lin_ineq reduce_extra_constraints() { $/;"	f	class:poly_iterator
reduce_extra_constraints2	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    lin_ineq reduce_extra_constraints2() { $/;"	f	class:poly_iterator
reduce_extra_constraints2	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    lin_ineq reduce_extra_constraints2() { $/;"	f	class:poly_iterator
reduce_extra_constraints2	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    lin_ineq reduce_extra_constraints2() { $/;"	f	class:poly_iterator
reduce_order	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    constraint reduce_order;  \/\/ Which to reduce in which oder$/;"	m	class:poly_iterator
reduce_order	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    constraint reduce_order;  \/\/ Which to reduce in which oder$/;"	m	class:poly_iterator
reduce_order	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    constraint reduce_order;  \/\/ Which to reduce in which oder$/;"	m	class:poly_iterator
ref	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node *ref;$/;"	m	class:ptr_type
ref_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node *ref_type()		{ return ref; }$/;"	f	class:ptr_type
ref_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual type_node *ref_type(unsigned \/* num *\/)$/;"	f	class:type_node
reg_kind	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^} reg_kind;$/;"	t	typeref:enum:reg_kind_enum
reg_kind	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^} reg_kind;$/;"	t	typeref:enum:reg_kind_enum
reg_kind_enum	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^typedef enum reg_kind_enum {$/;"	g
reg_kind_enum	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^typedef enum reg_kind_enum {$/;"	g
reg_map	/cad2/ece540s/basesuif-1.1.2/include/simple/regmap.h	/^class reg_map {$/;"	c
reg_no	/cad2/ece540s/basesuif-1.1.2/include/flow/reginfo.h	/^    if_reg reg_no;$/;"	m	class:register_info
reg_no	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    int reg_no;$/;"	m	class:if_reg
register_info	/cad2/ece540s/basesuif-1.1.2/include/flow/reginfo.h	/^    register_info(char *n, path_base *b) : path_info(PK_register_info, n, b) { }$/;"	f	class:register_info
register_info	/cad2/ece540s/basesuif-1.1.2/include/flow/reginfo.h	/^class register_info : public path_info {$/;"	c
register_kinds	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^enum register_kinds {$/;"	g
register_manager	/cad2/ece540s/basesuif-1.1.2/include/flow/reginfo.h	/^class register_manager : public path_info {$/;"	c
registers	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^    register_manager *registers;$/;"	m	class:procedure_info
regs	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^    register_manager *regs;$/;"	m	class:proc
rem_lower	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq rem_lower(lin_ineq & LEQ, int nloc) { return rem(LEQ, nloc,  1); }$/;"	f	class:lin_ineq_op
rem_lower	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq rem_lower(lin_ineq & LEQ, int nloc) { return rem(LEQ, nloc,  1); }$/;"	f	class:lin_ineq_op
rem_lower	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq rem_lower(const lin_ineq & LEQ, int nloc) const$/;"	f	class:lin_ineq_op
rem_upper	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    lin_ineq rem_upper(lin_ineq & LEQ, int nloc) { return rem(LEQ, nloc, -1); }$/;"	f	class:lin_ineq_op
rem_upper	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    lin_ineq rem_upper(lin_ineq & LEQ, int nloc) { return rem(LEQ, nloc, -1); }$/;"	f	class:lin_ineq_op
rem_upper	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    lin_ineq rem_upper(const lin_ineq & LEQ, int nloc) const$/;"	f	class:lin_ineq_op
remainder_data_defined	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    unsigned char *remainder_data_defined;$/;"	m	class:so_walker
remainder_length	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    unsigned long remainder_length;$/;"	m	class:so_walker
remainder_values	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type *remainder_values;$/;"	m	class:so_walker
remove	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    void remove(ast_node *e)		{ assert(e->on_list == this);$/;"	f	class:ast_node_list
remove	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e * remove(alist_e *e)	{ return (alist_e *)glist::remove(e); }$/;"	f	class:alist
remove	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e * remove(alist_e *e)	{ return (alist_e *)glist::remove(e); }$/;"	f	class:amtflist
remove	/cad2/ece540s/basesuif-1.1.2/include/general/dclist.h	/^    clist_e * remove(clist_e *e)	{ return remove_aux(e, this); }$/;"	f	class:clist_e
remove	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *remove(alist_e *e)		{ return (alist_e *)glist::remove(e); }$/;"	f	class:alist
remove	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *remove(alist_e *e)		{ return (alist_e*)mtflist::remove(e);}$/;"	f	class:amtflist
remove	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^    hash_e *remove(hash_compare check, hash_e *k)$/;"	f	class:hash_chain
remove	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^    hash_e *remove(hash_e *e)$/;"	f	class:hash_table
remove	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    void remove(int i)                          { remove(i, i); }$/;"	f	class:name_table
repeat_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    repeat_init_struct(int init_repetitions, int init_size, immed init_data)$/;"	f	class:repeat_init_struct
repeat_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    repeat_init_struct(void) {}$/;"	f	class:repeat_init_struct
repeat_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^class repeat_init_struct : public base_init_struct$/;"	c
repetitions	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    int repetitions;$/;"	m	class:repeat_init_struct
replacements	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^struct replacements {$/;"	s
reply_true	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    static int reply_true;$/;"	m	class:dependency_test
res	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^    deptest_result res;$/;"	m	class:dependence_test
reserved	/cad2/ece540s/basesuif-1.1.2/include/flow/reginfo.h	/^    if_reg reserved[rk_node + 1];$/;"	m	class:register_manager
reset	/cad2/ece540s/basesuif-1.1.2/include/flow/reginfo.h	/^    void reset(register_kinds k)	{ max[k] = reg_bases[k]; }$/;"	f	class:register_manager
reset	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    void reset(bit_set *st)		{ s = st; reset(); }$/;"	f	class:bit_set_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    void reset(const glist *gl)		{ cur = NULL; nxt = gl->head; }$/;"	f	class:glist_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    void reset(path_base *r)		{ cur = NULL; nxt = r->children; }$/;"	f	class:path_base_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void reset (Seqn_conslist *l){ consiter::reset(l); }$/;"	f	struct:Seqn_consiter
reset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void reset (Seqn_list *l){glist_iter::reset(l); }$/;"	f	struct:Seqn_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void reset(Snode_list *l) { consiter::reset(l); }$/;"	f	struct:Snode_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	void reset(Svar_list *l) { consiter::reset(l); }$/;"	f	struct:Svar_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  void reset(Sedge_list *el) { glist_iter::reset(el); }$/;"	f	struct:Sedge_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	void reset(String *s) { next_index=0; glist_iter::reset((glist*)s); }$/;"	f	struct:String_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	void reset(sc_cases *l) { glist_iter::reset(l); }$/;"	f	struct:sc_citer
reset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	void reset(sc_elist *l) { glist_iter::reset(l); }$/;"	f	struct:sc_eiter
reset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	void reset(sc_list *l) { reset(&l->list); }$/;"	f	struct:sc_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	void reset(sc_list2 *l) { glist_iter::reset(l); }$/;"	f	struct:sc_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    void reset(Symbol_list *sl) { consiter::reset(&sl->l); }$/;"	f	struct:Symbol_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    void reset(ty_record_list *l) { consiter::reset((conslist*)l); }$/;"	f	class:ty_record_list_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void reset (Seqn_conslist *l){ consiter::reset(l); }$/;"	f	struct:Seqn_consiter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void reset (Seqn_list *l){glist_iter::reset(l); }$/;"	f	struct:Seqn_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void reset(Sedge_list *el) { glist_iter::reset(el); }$/;"	f	struct:Sedge_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void reset(Snode_list *l) { consiter::reset(l); }$/;"	f	struct:Snode_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	void reset(Svar_list *l) { consiter::reset(l); }$/;"	f	struct:Svar_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void reset (Seqn_conslist *l){ consiter::reset(l); }$/;"	f	struct:Seqn_consiter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void reset (Seqn_list *l){glist_iter::reset(l); }$/;"	f	struct:Seqn_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void reset(Sedge_list *el) { glist_iter::reset(el); }$/;"	f	struct:Sedge_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void reset(Snode_list *l) { consiter::reset(l); }$/;"	f	struct:Snode_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	void reset(Svar_list *l) { consiter::reset(l); }$/;"	f	struct:Svar_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	void reset(String *s) { next_index=0; glist_iter::reset((glist*)s); }$/;"	f	struct:String_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	void reset(sc_cases *l) { glist_iter::reset(l); }$/;"	f	struct:sc_citer
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	void reset(sc_elist *l) { glist_iter::reset(l); }$/;"	f	struct:sc_eiter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	void reset(sc_list *l) { reset(&l->list); }$/;"	f	struct:sc_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	void reset(sc_list2 *l) { glist_iter::reset(l); }$/;"	f	struct:sc_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    void reset(Symbol_list *sl) { consiter::reset(&sl->l); }$/;"	f	struct:Symbol_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    void reset(ty_record_list *l) { consiter::reset((conslist*)l); }$/;"	f	class:ty_record_list_iter
reset	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    void reset(bit_set *st)		{ s = st; reset(); }$/;"	f	class:bit_set_iter
reset_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    void reset_iter()			{ iter->reset(files); }$/;"	f	class:file_set
reset_userdef	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    void reset_userdef()		{ flags &= ~SYM_USERDEF; }$/;"	f	class:sym_node
resize	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^        integer_matrix  resize(int r1, int r2, int c1, int c2, int fill=0) $/;"	f	class:integer_matrix
resize	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^        integer_matrix  resize(int r1, int r2, int c1, int c2, int fill=0) $/;"	f	class:integer_matrix
resize	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    fract_matrix resize(int r1, int r2, int c1, int c2, int fill = 0)$/;"	f	class:fract_matrix
resize	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^        integer_matrix  resize(int r1, int r2, int c1, int c2, int fill=0)$/;"	f	class:integer_matrix
resize	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    matrix resize(int r1, int r2, int c1, int c2, int fill = 0) $/;"	f	class:matrix
result	/cad2/ece540s/basesuif-1.1.2/include/dependence/dodep.h	/^    deptest_result result() { return res; }$/;"	f	class:dependence_test
result	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	dir_list *result;$/;"	m	class:full_hash_entry
result	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	dir_list *result;$/;"	m	class:full_hash_entry
result	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	dir_list *result;$/;"	m	class:full_hash_entry
result_defined	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    boolean result_defined;$/;"	m	class:so_walker
result_ptr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	/^    int *result_ptr;$/;"	m	struct:__anon15
result_type	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	/^    int result_type;$/;"	m	struct:__anon15
result_type	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    type_node *result_type()		{ return typ; }$/;"	f	class:instruction
result_value	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    any_type result_value;$/;"	m	class:so_walker
results	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    sc_fm_results    * results;$/;"	m	class:named_sc_fm
ret	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node *ret;$/;"	m	class:func_type
return_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_type *return_type;$/;"	m	class:ty_function
return_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_type *return_type;$/;"	m	class:ty_function
return_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node *return_type()		{ return ret; }$/;"	f	class:func_type
rhs	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *rhs;$/;"	m	class:SVR_meet
rhs	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *rhs;$/;"	m	class:SVR_meet
rhs_binder	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Q_binder *rhs_binder;$/;"	m	class:SVR_meet
rhs_binder	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Q_binder *rhs_binder;$/;"	m	class:SVR_meet
right	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    dep_node_si *right() {return (dep_node_si *)ast_node_suif_instr::right();}$/;"	f	struct:dep_node_si
right	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    dep_node_si *right() {return (dep_node_si *)ast_node_suif_instr::right();}$/;"	f	struct:dep_node_si
right	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    ast_node_suif_instr * right()	{ return rp; }$/;"	f	class:ast_node_suif_instr
right_cache	/cad2/ece540s/basesuif-1.1.2/include/expr_map.h	/^    operand_dlist_e *right_cache;$/;"	m	class:expr_map
right_cache	/cad2/ece540s/basesuif-1.1.2/include/useful/expr_map.h	/^    operand_dlist_e *right_cache;$/;"	m	class:expr_map
right_list	/cad2/ece540s/basesuif-1.1.2/include/expr_map.h	/^    operand_dlist right_list;$/;"	m	class:expr_map
right_list	/cad2/ece540s/basesuif-1.1.2/include/useful/expr_map.h	/^    operand_dlist right_list;$/;"	m	class:expr_map
rightp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr rightp;$/;"	m	struct:Exprblock
rk_hard	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    rk_hard,$/;"	e	enum:register_kinds
rk_node	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    rk_node$/;"	e	enum:register_kinds
rk_null	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    rk_null = -1,$/;"	e	enum:register_kinds
rk_pseudo	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    rk_pseudo,$/;"	e	enum:register_kinds
rlab	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg rlab, rres;$/;"	m	class:in_cal
rlab	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg rlab;$/;"	m	class:in_bj
root	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    ast_node_suif_instr * root()	{ return (!parent()) ?$/;"	f	class:ast_node_suif_instr
root_node	/cad2/ece540s/basesuif-1.1.2/include/suif/tree_string_index.h	/^    class tsi_node *root_node;$/;"	m	class:tree_string_index	typeref:class:tree_string_index::tsi_node
round_int	/cad2/ece540s/basesuif-1.1.2/include/general/useful.h	32;"	d
roundup	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defines.h	298;"	d
rows	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    int rows;$/;"	m	class:fract_matrix
rp	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    ast_node_suif_instr *rp;$/;"	m	class:ast_node_suif_instr
rplnextp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Rplblock *rplnextp;$/;"	m	struct:Rplblock	typeref:struct:Rplblock::Rplblock
rplnp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	Namep rplnp;		\/* Name of the formal parameter *\/$/;"	m	struct:Rplblock
rpltag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int rpltag;		\/* Tag on the value of the actual param *\/$/;"	m	struct:Rplblock
rplvp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr rplvp;		\/* Value of the actual parameter *\/$/;"	m	struct:Rplblock
rplxp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr rplxp;		\/* Initialization of temporary variable,$/;"	m	struct:Rplblock
rpo_order	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  Node_index *rpo_order;$/;"	m	class:CFG
rpo_order	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  Node_index *rpo_order;$/;"	m	class:CFG
rres	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg rlab, rres;$/;"	m	class:in_cal
rt	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    stream_type rt;$/;"	m	class:proc_iter
rule	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_rule *rule;$/;"	m	class:PP_item
rule	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_rule *rule;$/;"	m	class:PP_item
rule_kind	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    const int rule_kind;$/;"	m	class:SV_rule
rule_kind	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    const int rule_kind;$/;"	m	class:SV_rule
rules	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_rule_list rules;$/;"	m	class:SV_dflow
rules	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_rule_list rules[TAG(SVR_max)];$/;"	m	class:SV_path
rules	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_rule_list rules;$/;"	m	class:SV_dflow
rules	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_rule_list rules[TAG(SVR_max)];$/;"	m	class:SV_path
rval	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^	int rval;			\/* really if_reg *\/$/;"	m	union:icon::__anon4
s	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    bit_set *s;$/;"	m	class:bit_set_iter
s	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    String *s;$/;"	m	class:s_ostream
s	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    String *s;$/;"	m	class:s_ostream
s	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	} s;$/;"	m	union:simple_immed_struct::__anon48	typeref:struct:simple_immed_struct::__anon48::__anon49
s	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	} s;$/;"	m	union:simple_immed_struct::__anon25	typeref:struct:simple_immed_struct::__anon25::__anon26
s	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    bit_set *s;$/;"	m	class:bit_set_iter
s	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^        char * s;$/;"	m	union:name_table_entry::__anon37
s_istream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^class s_istream: public istream$/;"	c
s_istream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^class s_istream: public istream$/;"	c
s_ostream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    s_ostream(String *st) { s=st; name="internal ostream"; }$/;"	f	class:s_ostream
s_ostream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^class s_ostream: public ostream$/;"	c
s_ostream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    s_ostream(String *st) { s=st; name="internal ostream"; }$/;"	f	class:s_ostream
s_ostream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^class s_ostream: public ostream$/;"	c
same_as	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    void same_as(in_array *ip) {$/;"	f	class:in_array
same_as	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    void same_as(in_bj *ip) {$/;"	f	class:in_bj
same_as	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    void same_as(in_cal *ip) {$/;"	f	class:in_cal
same_as	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    void same_as(in_cvt *ip) {$/;"	f	class:in_cvt
same_as	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    void same_as(in_data *ip) {$/;"	f	class:in_data
same_as	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    void same_as(in_lab *ip) {$/;"	f	class:in_lab
same_as	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    void same_as(in_ldc *ip) {$/;"	f	class:in_ldc
same_as	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    void same_as(in_mbr *ip) {$/;"	f	class:in_mbr
same_as	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    void same_as(in_mrk *ip) {$/;"	f	class:in_mrk
same_as	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    void same_as(in_rrr *old) {$/;"	f	class:in_rrr
same_conregs	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int same_conregs() {return (flag>>1)&1;}$/;"	f	class:av_compare_info
same_conregs	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int same_conregs() {return (flag>>1)&1;}$/;"	f	class:av_compare_info
same_conregs	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int same_conregs() {return (flag>>1)&1;}$/;"	f	class:av_compare_info
same_const	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int same_const() {return (flag>>4)&1;}$/;"	f	class:av_compare_info
same_const	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int same_const() {return (flag>>4)&1;}$/;"	f	class:av_compare_info
same_const	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int same_const() {return (flag>>4)&1;}$/;"	f	class:av_compare_info
same_indregs	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int same_indregs() {return flag&1;}$/;"	f	class:av_compare_info
same_indregs	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int same_indregs() {return flag&1;}$/;"	f	class:av_compare_info
same_indregs	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int same_indregs() {return flag&1;}$/;"	f	class:av_compare_info
same_memregs	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int same_memregs() {return (flag>>2)&1;}$/;"	f	class:av_compare_info
same_memregs	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int same_memregs() {return (flag>>2)&1;}$/;"	f	class:av_compare_info
same_memregs	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int same_memregs() {return (flag>>2)&1;}$/;"	f	class:av_compare_info
same_paths	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int same_paths() {return (flag>>3)&1;}$/;"	f	class:av_compare_info
same_paths	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int same_paths() {return (flag>>3)&1;}$/;"	f	class:av_compare_info
same_paths	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int same_paths() {return (flag>>3)&1;}$/;"	f	class:av_compare_info
sample	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	int *sample;	\/\/ a sample solution$/;"	m	class:exact
sample	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int *sample;	\/\/ a sample solution$/;"	m	class:exact
sample	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int *sample;	\/\/ a sample solution$/;"	m	class:exact
save_temp_vars	/cad2/ece540s/basesuif-1.1.2/include/ist.h	/^    boolean save_temp_vars;$/;"	m	class:ist
save_temp_vars	/cad2/ece540s/basesuif-1.1.2/include/ist/ist.h	/^    boolean save_temp_vars;$/;"	m	class:ist
saved_c	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    char saved_c;$/;"	m	class:c_istream
saved_c	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    char saved_c;$/;"	m	class:s_istream
saved_c	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    char saved_c;$/;"	m	class:c_istream
saved_c	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    char saved_c;$/;"	m	class:s_istream
sc	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Scope *sc;$/;"	m	class:Symbol
sc	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Scope *sc;$/;"	m	class:Symbol
sc	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    signed char sc;$/;"	m	union:any_type
sc_case	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_case() {}$/;"	f	struct:sc_case
sc_case	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_case: public glist_e {$/;"	s
sc_case	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_case():glist_e(0) {}$/;"	f	struct:sc_case
sc_case	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_case: public glist_e {$/;"	s
sc_cases	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_cases: public glist {$/;"	s
sc_cases	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_cases: public glist {$/;"	s
sc_citer	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_citer() {}$/;"	f	struct:sc_citer
sc_citer	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_citer(sc_cases *l) { reset(l); }$/;"	f	struct:sc_citer
sc_citer	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_citer: public glist_iter {$/;"	s
sc_citer	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_citer() {}$/;"	f	struct:sc_citer
sc_citer	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_citer(sc_cases *l) { reset(l); }$/;"	f	struct:sc_citer
sc_citer	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_citer: public glist_iter {$/;"	s
sc_code	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_code() {}$/;"	f	struct:sc_code
sc_code	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_code: public glist_e {$/;"	s
sc_code	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_code():glist_e(0) {}$/;"	f	struct:sc_code
sc_code	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_code: public glist_e {$/;"	s
sc_const	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_const(SV_const *c) { constant=c; }$/;"	f	struct:sc_const
sc_const	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_const(int i) { constant=new cn_integer(i); }$/;"	f	struct:sc_const
sc_const	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_const: public sc_expr {$/;"	s
sc_const	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_const(SV_const *c) { constant=c; }$/;"	f	struct:sc_const
sc_const	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_const(int i) { constant=new cn_integer(i); }$/;"	f	struct:sc_const
sc_const	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_const: public sc_expr {$/;"	s
sc_eiter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_eiter() {}$/;"	f	struct:sc_eiter
sc_eiter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_eiter(sc_elist *l) { reset(l); }$/;"	f	struct:sc_eiter
sc_eiter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_eiter: public glist_iter {$/;"	s
sc_eiter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_eiter() {}$/;"	f	struct:sc_eiter
sc_eiter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_eiter(sc_elist *l) { reset(l); }$/;"	f	struct:sc_eiter
sc_eiter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_eiter: public glist_iter {$/;"	s
sc_elist	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_elist() {}$/;"	f	struct:sc_elist
sc_elist	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_elist: public glist {$/;"	s
sc_elist	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_elist() {}$/;"	f	struct:sc_elist
sc_elist	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_elist: public glist {$/;"	s
sc_expr	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_expr: public sc_code {$/;"	s
sc_expr	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_expr: public sc_code {$/;"	s
sc_fm_constraint	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^class sc_fm_constraint {$/;"	c
sc_fm_results	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^class sc_fm_results {$/;"	c
sc_id	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_id(Symbol *i) { id=i; }$/;"	f	struct:sc_id
sc_id	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_id: public sc_expr {$/;"	s
sc_id	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_id(Symbol *i) { id=i; }$/;"	f	struct:sc_id
sc_id	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_id: public sc_expr {$/;"	s
sc_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_iter() {}$/;"	f	struct:sc_iter
sc_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_iter(sc_list *l) { reset(l); }$/;"	f	struct:sc_iter
sc_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_iter(sc_list2 *l) { reset(l); }$/;"	f	struct:sc_iter
sc_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_iter: public glist_iter {$/;"	s
sc_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_iter() {}$/;"	f	struct:sc_iter
sc_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_iter(sc_list *l) { reset(l); }$/;"	f	struct:sc_iter
sc_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_iter(sc_list2 *l) { reset(l); }$/;"	f	struct:sc_iter
sc_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_iter: public glist_iter {$/;"	s
sc_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_list: public sc_code {$/;"	s
sc_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_list: public sc_code {$/;"	s
sc_list2	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_list2() {}$/;"	f	struct:sc_list2
sc_list2	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_list2: public glist {$/;"	s
sc_list2	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_list2() {}$/;"	f	struct:sc_list2
sc_list2	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_list2: public glist {$/;"	s
sc_merge_type	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^enum sc_merge_type { smt_none, smt_simple, smt_runtime, smt_full};$/;"	g
sc_opaque	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_opaque(C_code *s) { stuff=s; }$/;"	f	struct:sc_opaque
sc_opaque	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_opaque: public sc_code {$/;"	s
sc_opaque	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_opaque(C_code *s) { stuff=s; }$/;"	f	struct:sc_opaque
sc_opaque	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_opaque: public sc_code {$/;"	s
sc_select	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_select: public sc_expr {$/;"	s
sc_select	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_select: public sc_expr {$/;"	s
sc_switch	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_switch(sc_expr *t){ test=t; }$/;"	f	struct:sc_switch
sc_switch	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct sc_switch: public sc_code {$/;"	s
sc_switch	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_switch(sc_expr *t){ test=t; }$/;"	f	struct:sc_switch
sc_switch	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct sc_switch: public sc_code {$/;"	s
scache	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e *scache[scache_size];$/;"	m	class:cached_alist
scache_size	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	102;"	d
scon	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^        char *  scon;$/;"	m	union:block_info::__anon2
scope	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    base_symtab *scope()		{ return proc()->file()->symtab(); }$/;"	f	class:tree_proc
search	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_list_e *search(void *v) {return (access_list_e *) alist::search(v);}$/;"	f	struct:access_list
search	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_list_e *search(void *v) {return (access_list_e *) alist::search(v);}$/;"	f	struct:access_list
search	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_list_e *search(void *v) {return (access_list_e *) alist::search(v);}$/;"	f	struct:access_list
seek_proc	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    seek_proc()				{ head = NULL; }$/;"	f	class:seek_proc
seek_proc	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^class seek_proc {$/;"	c
seek_proc_e	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^class seek_proc_e {$/;"	c
segsize	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^const int segsize=100;$/;"	v
segsize	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^const int segsize=100;$/;"	v
set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    void set(const block & b)           { init(block(b)); }$/;"	f	class:block
set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    void set(const block * b)           { init(block(b)); }$/;"	f	class:block
set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void set(any_oper a)                { op = a; }$/;"	f	struct:block_info
set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void set(double d)                  { con.dcon = d;$/;"	f	struct:block_info
set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void set(float f)                   { con.fcon = f;$/;"	f	struct:block_info
set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void set(instruction *i)            { code.ins = i;$/;"	f	struct:block_info
set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void set(int i)                     { con.icon = i;$/;"	f	struct:block_info
set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void set(op_type t, int o)          { op.set(t, o); }$/;"	f	struct:block_info
set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void set(struct_access * sa)        { code.sta = sa;$/;"	f	struct:block_info
set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void set(sym_node * s)              { code.sym = s;$/;"	f	struct:block_info
set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void set(tree_node * t,$/;"	f	struct:block_info
set	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void set(tree_node_list * l,$/;"	f	struct:block_info
set_addr_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_addr_op(operand r)		{ check_new_src(addr, r); addr = r; }$/;"	f	class:in_cal
set_alignment	/cad2/ece540s/basesuif-1.1.2/include/suif/vardef.h	/^    void set_alignment(int a)		{ align = a; }$/;"	f	class:var_def
set_args_known	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_args_known()		{ arg_info = TRUE; }$/;"	f	class:func_type
set_back_pointer	/cad2/ece540s/basesuif-1.1.2/include/suif/ptr_index.h	/^    void set_back_pointer(si_entry *the_entry, void *new_value)$/;"	f	class:ptr_index
set_back_pointer	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^    void set_back_pointer(si_entry *the_entry, void *new_value)$/;"	f	class:string_index
set_base	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_base(type_node *t)		{ typ = t; }$/;"	f	class:modifier_type
set_base_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_base_op(operand r)		{ check_new_src(base, r); base = r; }$/;"	f	class:in_array
set_block	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    void set_block(tree_block *b)	{ blk = b; }$/;"	f	class:block_symtab
set_brklab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_brklab(label_sym *s)	{ blab = s; }$/;"	f	class:tree_for
set_brklab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_brklab(label_sym *s)	{ blab = s; }$/;"	f	class:tree_loop
set_c_char	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    void set_c_char(char new_value)  { set_integer(new_value); }$/;"	f	class:i_rational
set_c_int	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    void set_c_int(int new_value)  { set_integer(new_value); }$/;"	f	class:i_rational
set_c_long	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    void set_c_long(long new_value)  { set_integer(new_value); }$/;"	f	class:i_rational
set_c_short	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    void set_c_short(short new_value)  { set_integer(new_value); }$/;"	f	class:i_rational
set_c_signed_char	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    void set_c_signed_char(signed char new_value)  { set_integer(new_value); }$/;"	f	class:i_rational
set_c_unsigned_char	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    void set_c_unsigned_char(unsigned char new_value)$/;"	f	class:i_rational
set_c_unsigned_int	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    void set_c_unsigned_int(unsigned int new_value)$/;"	f	class:i_rational
set_c_unsigned_long	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    void set_c_unsigned_long(unsigned long new_value)$/;"	f	class:i_rational
set_c_unsigned_short	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    void set_c_unsigned_short(unsigned short new_value)$/;"	f	class:i_rational
set_context	/cad2/ece540s/basesuif-1.1.2/include/suifmath/code_context.h	/^    void set_context(named_symcoeff_ineq & i)     { ineq = i; }$/;"	f	struct:code_context_annote
set_contlab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_contlab(label_sym *s)	{ clab = s; }$/;"	f	class:tree_for
set_contlab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_contlab(label_sym *s)	{ clab = s; }$/;"	f	class:tree_loop
set_data	/cad2/ece540s/basesuif-1.1.2/include/suif/annote.h	/^    void set_data(void *d)		{ dt = d; }$/;"	f	class:annote
set_default_lab	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_default_lab(label_sym *l)	{ dlab = l; }$/;"	f	class:in_mbr
set_dep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    void set_dep()  { ind = FALSE; }$/;"	f	class:dvlist
set_dep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    void set_dep()  { ind = FALSE; }$/;"	f	struct:distance_vector
set_dep	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	void set_dep() { indep=0; }$/;"	f	class:exact
set_dep	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	void set_dep()  { ind = FALSE; }$/;"	f	class:dvlist
set_dep	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	void set_dep()  { ind = FALSE; }$/;"	f	struct:distance_vector
set_dep	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	void set_dep() { indep=0; }$/;"	f	class:exact
set_dep	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	void set_dep()  { ind = FALSE; }$/;"	f	class:dvlist
set_dep	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	void set_dep()  { ind = FALSE; }$/;"	f	struct:distance_vector
set_dep	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	void set_dep() { indep=0; }$/;"	f	class:exact
set_dest	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    void set_dest(if_reg r)		{ instr->set_dst(r); }$/;"	f	class:ast_node_suif_instr
set_direction	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    void set_direction(direction newdr)$/;"	f	class:distance
set_direction	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    void set_direction(direction newdr)$/;"	f	class:distance
set_direction	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    void set_direction(direction newdr)$/;"	f	class:distance
set_distance	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    void set_distance(int newd) {$/;"	f	class:distance
set_distance	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    void set_distance(int newd) {$/;"	f	class:distance
set_distance	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    void set_distance(int newd) {$/;"	f	class:distance
set_dst	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    virtual void set_dst(operand r)	{ check_new_dst(dst, r); dst = r; }$/;"	f	class:instruction
set_dst	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_dst(operand)		{ no_dst_error(); }$/;"	f	class:in_bj
set_dst	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_dst(operand)		{ no_dst_error(); }$/;"	f	class:in_lab
set_dst	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_dst(operand)		{ no_dst_error(); }$/;"	f	class:in_mbr
set_elem_size	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_elem_size(unsigned n)	{ elemsz = n; }$/;"	f	class:in_array
set_elem_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_elem_type(type_node *t)	{ elemt = t; }$/;"	f	class:array_type
set_ext_float	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void set_ext_float(char *ext_float) { con.scon = ext_float;$/;"	f	struct:block_info
set_ext_int	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void set_ext_int(char *ext_int)     { con.scon = ext_int;$/;"	f	struct:block_info
set_extern	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    virtual void set_extern(boolean b)	{ ext = b; }$/;"	f	class:sym_node
set_file_id	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    void set_file_id(int new_id)	{ the_id = new_id; }$/;"	f	class:file_set_entry
set_fse	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    void set_fse(file_set_entry *f)	{ fse = f; }$/;"	f	class:proc_sym
set_fse	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    void set_fse(file_set_entry *new_fse) { fset = new_fse; }$/;"	f	class:file_symtab
set_indef	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^    void set_indef() {is_indef = TRUE;}$/;"	f	class:int_indef
set_indef	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	void set_indef() {is_indef = TRUE;}$/;"	f	class:int_indef
set_indef	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	void set_indef() {is_indef = TRUE;}$/;"	f	class:int_indef
set_indep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    void set_indep()  { ind = TRUE; }$/;"	f	class:dvlist
set_indep	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    void set_indep()  { ind = TRUE; }$/;"	f	struct:distance_vector
set_indep	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	void set_indep() { indep=TRUE; }$/;"	f	class:exact
set_indep	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	void set_indep()  { ind = TRUE; }$/;"	f	class:dvlist
set_indep	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	void set_indep()  { ind = TRUE; }$/;"	f	struct:distance_vector
set_indep	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	void set_indep() { indep=TRUE; }$/;"	f	class:exact
set_indep	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	void set_indep()  { ind = TRUE; }$/;"	f	class:dvlist
set_indep	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	void set_indep()  { ind = TRUE; }$/;"	f	struct:distance_vector
set_indep	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	void set_indep() { indep=TRUE; }$/;"	f	class:exact
set_index	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_index(var_sym *vs)		{ ind = vs; }$/;"	f	class:tree_for
set_instr	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    void set_instr(instruction *i)	{ k = OPER_INSTR; u.i = i; }$/;"	f	class:operand
set_integer	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    void set_integer(const i_integer &new_value)$/;"	f	class:i_rational
set_jumpto	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_jumpto(label_sym *s)	{ jmp = s; }$/;"	f	class:tree_if
set_label	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_label(label_sym *l)	{ lab = l; }$/;"	f	class:in_lab
set_lb_op	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_lb_op(operand o)		{ lower->set_op(o); }$/;"	f	class:tree_for
set_list_e	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_list_e(tree_node_list_e *e) { le = e; }$/;"	f	class:tree_node
set_lower	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_lower(int l)		{ low = l; }$/;"	f	class:in_mbr
set_lower_bound	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_lower_bound(array_bound b)	{ low = b; }$/;"	f	class:array_type
set_n_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    void set_n_ineq(int i)                      { initL(i); }$/;"	f	class:named_symcoeff_ineq
set_name	/cad2/ece540s/basesuif-1.1.2/include/suif/annote.h	/^    void set_name(char *n)		{ nm = n; }$/;"	f	class:annote
set_new_handler	/cad2/ece540s/basesuif-1.1.2/include/machine_dependent.h	66;"	d
set_new_handler	/cad2/ece540s/basesuif-1.1.2/include/suif/machine_dependent.h	66;"	d
set_next	/cad2/ece540s/basesuif-1.1.2/include/hawg/annote.h	/^    void set_next(annote *ap)		{ nxt = ap; }$/;"	f	class:annote
set_nil	/cad2/ece540s/basesuif-1.1.2/include/hawg/register.h	/^    void set_nil()			{ reg_no = no_register; }$/;"	f	class:if_reg
set_null	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    void set_null()			{ k = OPER_NULL; }$/;"	f	class:operand
set_number	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_number(unsigned n)		{ inum = n; }$/;"	f	class:instruction
set_number	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_number(unsigned n)		{ num = n; }$/;"	f	class:tree_node
set_offset	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_offset(unsigned f)		{ off = f; }$/;"	f	class:in_array
set_offset_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_offset_op(operand r)	{ check_new_src(offsetop, r);$/;"	f	class:in_array
set_op	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_op(type_ops o)		{ oper = o; }$/;"	f	class:type_node
set_opcode	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_opcode(if_ops o)		{ op = o; }$/;"	f	class:instruction
set_output	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    void set_output(boolean b)		{ out = b; }$/;"	f	class:annote_def
set_parent	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    void set_parent(base_symtab *st)	{ table = st; }$/;"	f	class:sym_node
set_parent	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_parent(tree_node *pr)	{ par = pr; }$/;"	f	class:tree_node_list
set_parent	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_parent(tree_node_list *pr)	{ par = pr; }$/;"	f	class:tree_node
set_parent	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_parent(base_symtab *st)	{ table = st; }$/;"	f	class:type_node
set_parent	/cad2/ece540s/basesuif-1.1.2/include/suif/vardef.h	/^    void set_parent(base_symtab *st)	{ table = st; }$/;"	f	class:var_def
set_proc	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^    static void set_proc(tree_proc * p) { proc = p; }$/;"	f	class:block
set_proc	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    static void set_proc(tree_proc * p) { proc = p; }$/;"	f	class:builder
set_proc	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_proc(proc_sym *ps)		{ psym = ps; }$/;"	f	class:tree_proc
set_rational	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    void set_rational(const i_rational &new_value)$/;"	f	class:i_rational
set_ref_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual void set_ref_type(unsigned \/* num *\/, type_node * \/* new_type *\/)$/;"	f	class:type_node
set_ref_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_ref_type(type_node *r)	{ ref = r; }$/;"	f	class:ptr_type
set_result_type	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_result_type(type_node *t)	{ typ = t; }$/;"	f	class:instruction
set_return_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_return_type(type_node *r)	{ ret = r; }$/;"	f	class:func_type
set_signed	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_signed(boolean b)		{ sgn = b; }$/;"	f	class:base_type
set_size	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_size(int s)		{ sz = s; }$/;"	f	class:base_type
set_size	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_size(int s)		{ sz = s; }$/;"	f	class:struct_type
set_src	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_src(operand r)		{ check_new_src(src, r); src = r; }$/;"	f	class:in_mbr
set_src1	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    void set_src1(if_reg r)		{ instr->set_src1(r); }$/;"	f	class:ast_node_suif_instr
set_src1	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_src1(operand r)		{ check_new_src(src1, r); src1 = r; }$/;"	f	class:in_rrr
set_src2	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    void set_src2(if_reg r)		{ instr->set_src2(r); }$/;"	f	class:ast_node_suif_instr
set_src2	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_src2(operand r)		{ check_new_src(src2, r); src2 = r; }$/;"	f	class:in_rrr
set_src_lang	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    void set_src_lang(src_lang_type st)	{ srclang = st; }$/;"	f	class:proc_sym
set_src_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_src_op(operand r)		{ check_new_src(src, r); src = r; }$/;"	f	class:in_bj
set_star	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    void set_star() {set_direction(d_star);}$/;"	f	class:distance
set_star	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    void set_star() {set_direction(d_star);}$/;"	f	class:distance
set_star	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    void set_star() {set_direction(d_star);}$/;"	f	class:distance
set_step_op	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_step_op(operand o)		{ step->set_op(o); }$/;"	f	class:tree_for
set_sym_extern	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    void set_sym_extern(sym_node *the_sym, boolean new_value)$/;"	f	class:base_symtab
set_sym_id	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    void set_sym_id(unsigned i)		{ id = i; }$/;"	f	class:sym_node
set_sym_id	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    void set_sym_id(sym_node *the_sym, unsigned new_id)$/;"	f	class:base_symtab
set_symbol	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    void set_symbol(var_sym *s)		{ k = OPER_SYM; u.sym = s; }$/;"	f	class:operand
set_symtab	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    void set_symtab(file_symtab *new_table) { table = new_table; }$/;"	f	class:file_set_entry
set_target	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_target(label_sym *t)	{ targ = t; }$/;"	f	class:in_bj
set_test	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_test(tree_for_test t)	{ tst = t; }$/;"	f	class:tree_for
set_toplab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_toplab(label_sym *s)	{ tol = s; }$/;"	f	class:tree_loop
set_type	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    void set_type(func_type *t)		{ typ = t; }$/;"	f	class:proc_sym
set_type	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    void set_type(type_node *t)		{ typ = t; }$/;"	f	class:var_sym
set_type_id	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_type_id(unsigned i)	{ id = i; }$/;"	f	class:type_node
set_ub_op	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    void set_ub_op(operand o)		{ upper->set_op(o); }$/;"	f	class:tree_for
set_upper_bound	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_upper_bound(array_bound b) { uppr = b; }$/;"	f	class:array_type
set_userdef	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    void set_userdef()			{ flags |= SYM_USERDEF; }$/;"	f	class:sym_node
set_value	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    void set_value(immed v)		{ val = v; }$/;"	f	class:in_ldc
set_varargs	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    void set_varargs(boolean b)		{ if (b) set_args_known(); vargs = b; }$/;"	f	class:func_type
set_y	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    void set_y(sym_addr s)		{ v.yval = *(sym_addr_dataonly*)&s; }$/;"	f	class:immed
setch	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void setch(char * s)                { con.scon = s;$/;"	f	struct:block_info
setch	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    void setch(char c)                  { con.ccon = c;$/;"	f	struct:block_info
sgi	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	165;"	d
sgi	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	165;"	d
sgn	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean sgn;$/;"	m	class:base_type
sgn	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int * sgn;$/;"	m	class:sc_fm_constraint
shortint	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef short int shortint;$/;"	t
shortint	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef short int shortint;$/;"	t
shortlogical	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^typedef short int shortlogical;$/;"	t
shortlogical	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^typedef short int shortlogical;$/;"	t
si	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    String_iter si;$/;"	m	class:s_istream
si	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    String_iter si;$/;"	m	class:s_istream
si	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    int si;$/;"	m	union:any_type
si_entry	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^    si_entry(void *init_data)  { the_data = init_data; back_pointer = NULL; }$/;"	f	class:si_entry
si_entry	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^class si_entry$/;"	c
si_val	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^        string_integer *si_val;$/;"	m	union:i_integer::__anon39
sib	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    block * sib;                        \/\/ peers (maintained by the parent)$/;"	m	class:builder
siblings	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base *siblings;$/;"	m	class:path_base
sign_no_chk	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int sign_no_chk(int in)                     { return sgn[in]; }$/;"	f	class:sc_fm_constraint
signature	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	/^    int signature;$/;"	m	class:hash_e
signature	/cad2/ece540s/basesuif-1.1.2/include/hawg/stringtable.h	/^    unsigned signature;$/;"	m	class:string_e
signature	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^    unsigned signature;$/;"	m	class:hash_e
signature	/cad2/ece540s/basesuif-1.1.2/include/suif/stringtable.h	/^    unsigned signature;$/;"	m	class:string_e
simple_annote_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^typedef void simple_annote_walkee(annote *);$/;"	t
simple_error	/cad2/ece540s/basesuif-1.1.2/include/simple.h	277;"	d
simple_error	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	277;"	d
simple_format	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^} simple_format;$/;"	t	typeref:enum:simple_format_enum
simple_format	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^} simple_format;$/;"	t	typeref:enum:simple_format_enum
simple_format_enum	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^typedef enum simple_format_enum {$/;"	g
simple_format_enum	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^typedef enum simple_format_enum {$/;"	g
simple_graph	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^    simple_graph(proc *p)		{ procedure = p; };$/;"	f	class:simple_graph
simple_graph	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^class simple_graph : public i_storage {$/;"	c
simple_immed	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^} simple_immed;$/;"	t	typeref:struct:simple_immed_struct
simple_immed	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^} simple_immed;$/;"	t	typeref:struct:simple_immed_struct
simple_immed_struct	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^typedef struct simple_immed_struct {$/;"	s
simple_immed_struct	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^typedef struct simple_immed_struct {$/;"	s
simple_instr	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^} simple_instr;$/;"	t	typeref:struct:simple_instr_struct
simple_instr	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^} simple_instr;$/;"	t	typeref:struct:simple_instr_struct
simple_instr_struct	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^typedef struct simple_instr_struct {$/;"	s
simple_instr_struct	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^typedef struct simple_instr_struct {$/;"	s
simple_op	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^} simple_op;$/;"	t	typeref:enum:simple_op_enum
simple_op	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^} simple_op;$/;"	t	typeref:enum:simple_op_enum
simple_op_enum	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^typedef enum simple_op_enum {$/;"	g
simple_op_enum	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^typedef enum simple_op_enum {$/;"	g
simple_op_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^typedef void simple_op_walkee(operand);$/;"	t
simple_reg	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^} simple_reg;$/;"	t	typeref:struct:simple_reg_struct
simple_reg	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^} simple_reg;$/;"	t	typeref:struct:simple_reg_struct
simple_reg_struct	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^typedef struct simple_reg_struct {$/;"	s
simple_reg_struct	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^typedef struct simple_reg_struct {$/;"	s
simple_so_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^typedef void simple_so_walkee(suif_object *);$/;"	t
simple_sym	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^} simple_sym;$/;"	t	typeref:struct:simple_sym_struct
simple_sym	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^} simple_sym;$/;"	t	typeref:struct:simple_sym_struct
simple_sym_struct	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^typedef struct simple_sym_struct {$/;"	s
simple_sym_struct	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^typedef struct simple_sym_struct {$/;"	s
simple_sym_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^typedef void simple_sym_walkee(sym_node *);$/;"	t
simple_type	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^} simple_type;$/;"	t	typeref:struct:simple_type_struct
simple_type	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^} simple_type;$/;"	t	typeref:struct:simple_type_struct
simple_type_base	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^} simple_type_base;$/;"	t	typeref:enum:simple_type_base_enum
simple_type_base	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^} simple_type_base;$/;"	t	typeref:enum:simple_type_base_enum
simple_type_base_enum	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^typedef enum simple_type_base_enum {$/;"	g
simple_type_base_enum	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^typedef enum simple_type_base_enum {$/;"	g
simple_type_struct	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^typedef struct simple_type_struct {$/;"	s
simple_type_struct	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^typedef struct simple_type_struct {$/;"	s
simple_type_walkee	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^typedef void simple_type_walkee(type_node *);$/;"	t
simple_warning	/cad2/ece540s/basesuif-1.1.2/include/simple.h	278;"	d
simple_warning	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	278;"	d
sink	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  Node_index source, sink;$/;"	m	class:CFG_0
sink	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  Node_index source, sink;$/;"	m	class:CFG
sink	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  Node_index source, sink;$/;"	m	class:CFG
size	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	int size;	    \/\/ number of entries in table$/;"	m	class:UD_hash_table
size	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	int size;	    \/\/ number of entries in table$/;"	m	class:X_hash_table
size	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	int size;	    \/\/ number of entries in table$/;"	m	class:full_hash_table
size	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	int size;$/;"	m	struct:dir_array
size	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int size;	    \/\/ number of entries in table$/;"	m	class:UD_hash_table
size	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int size;	    \/\/ number of entries in table$/;"	m	class:X_hash_table
size	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int size;	    \/\/ number of entries in table$/;"	m	class:full_hash_table
size	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int size;$/;"	m	struct:dir_array
size	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int size;	    \/\/ number of entries in table$/;"	m	class:UD_hash_table
size	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int size;	    \/\/ number of entries in table$/;"	m	class:X_hash_table
size	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int size;	    \/\/ number of entries in table$/;"	m	class:full_hash_table
size	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int size;$/;"	m	struct:dir_array
size	/cad2/ece540s/basesuif-1.1.2/include/flow/storinfo.h	/^    int size;$/;"	m	class:storage_manager
size	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    int size()				{ return sz; }$/;"	f	class:type_node
size	/cad2/ece540s/basesuif-1.1.2/include/general/hash.h	/^    int size;$/;"	m	class:hash_table
size	/cad2/ece540s/basesuif-1.1.2/include/general/xarray.h	/^    int size;$/;"	m	class:x_array
size	/cad2/ece540s/basesuif-1.1.2/include/general/xarray.h	/^    int size;$/;"	m	class:x_array2
size	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    int size, align;$/;"	m	class:in_data
size	/cad2/ece540s/basesuif-1.1.2/include/hawg/suiftypes.h	/^    int size()				{ return len; }$/;"	f	class:if_type
size	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^    int size;$/;"	m	class:X_array0
size	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  int size;$/;"	m	class:Parameterized_x_array0
size	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    int size;$/;"	m	class:X_array0
size	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    int size;$/;"	m	class:X_array1
size	/cad2/ece540s/basesuif-1.1.2/include/simple/regmap.h	/^    int size;				\/* number of buckets *\/$/;"	m	class:reg_map
size	/cad2/ece540s/basesuif-1.1.2/include/suif/hash.h	/^    unsigned size;$/;"	m	class:hash_table
size	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    int size[num_C_types];$/;"	m	struct:machine_params
size	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    int size()				{ return 0; }$/;"	f	class:func_type
size	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    int size()				{ return sz; }$/;"	f	class:base_type
size	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    int size()				{ return sz; }$/;"	f	class:struct_type
size	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    int size()				{ return target.size[C_ptr]; }$/;"	f	class:ptr_type
size	/cad2/ece540s/basesuif-1.1.2/include/suif/xarray.h	/^    int size;$/;"	m	class:x_array
size	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    int size;$/;"	m	class:fract_vector
size	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    int size;$/;"	m	class:fill_init_struct
size	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    int size;$/;"	m	class:multi_init_struct
size	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    int size;$/;"	m	class:repeat_init_struct
size	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    int size;$/;"	m	class:X_array0
size	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    int size;$/;"	m	class:X_array1
sk	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    seek_proc sk;$/;"	m	class:proc_iter
skipped_nl	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    int skipped_nl;$/;"	m	class:istream
skipped_nl	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    int skipped_nl;$/;"	m	class:istream
sl	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    long sl;$/;"	m	union:any_type
small_table_size	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^const int small_table_size=8;$/;"	v
smt_full	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^enum sc_merge_type { smt_none, smt_simple, smt_runtime, smt_full};$/;"	e	enum:sc_merge_type
smt_none	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^enum sc_merge_type { smt_none, smt_simple, smt_runtime, smt_full};$/;"	e	enum:sc_merge_type
smt_runtime	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^enum sc_merge_type { smt_none, smt_simple, smt_runtime, smt_full};$/;"	e	enum:sc_merge_type
smt_simple	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^enum sc_merge_type { smt_none, smt_simple, smt_runtime, smt_full};$/;"	e	enum:sc_merge_type
sn	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int sn;$/;"	m	class:CFinfo
sn	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  int sn;$/;"	m	class:CFinfo
sn	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  int sn;$/;"	m	class:CFinfo
snumber	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    unsigned short rcount, number, snumber;$/;"	m	class:Seqn
snumber	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    unsigned short rcount, number, snumber;$/;"	m	class:Seqn
snumber	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    unsigned short rcount, number, snumber;$/;"	m	class:Seqn
so_walker	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^class so_walker$/;"	c
solved	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    int solved() { return V && V->solved; }$/;"	f	class:Seqn
solved	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    signed char solved;$/;"	m	struct:Svar
solved	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	char solved;$/;"	m	struct:Svar
solved	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    int solved() { return V && V->solved; }$/;"	f	class:Seqn
solved	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	char solved;$/;"	m	struct:Svar
solved	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    int solved() { return V && V->solved; }$/;"	f	class:Seqn
solver_pointer_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_pointer *solver_pointer_type;$/;"	m	class:SV_dflow
solver_pointer_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_pointer *solver_pointer_type;$/;"	m	class:SV_dflow
solver_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record *solver_type;$/;"	m	class:SV_dflow
solver_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record *solver_type;$/;"	m	class:SV_dflow
sort_order	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    constraint sort_order;    \/\/ How to sort the array$/;"	m	class:poly_iterator
sort_order	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    constraint sort_order;    \/\/ How to sort the array$/;"	m	class:poly_iterator
sort_order	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    constraint sort_order;    \/\/ How to sort the array$/;"	m	class:poly_iterator
source	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  Node_index source, sink;$/;"	m	class:CFG_0
source	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  Node_index source, sink;$/;"	m	class:CFG
source	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  Node_index source, sink;$/;"	m	class:CFG
source_c	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^    source_c = 1,$/;"	e	enum:source_language_type
source_fortran	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^    source_fortran = 2$/;"	e	enum:source_language_type
source_language	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^    source_language_type source_language;$/;"	m	class:proc
source_language_type	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^enum source_language_type {$/;"	g
sp	/cad2/ece540s/basesuif-1.1.2/include/hawg/stringtable.h	/^    char *sp;				\/* always points to heap *\/$/;"	m	class:string_e
sp	/cad2/ece540s/basesuif-1.1.2/include/suif/stringtable.h	/^    char *sp;				\/* always points to heap *\/$/;"	m	class:string_e
space	/cad2/ece540s/basesuif-1.1.2/include/suifmath/vector_space.h	/^    int space;                          \/\/ dimension of basis_vectors$/;"	m	class:vector_space
space_dimension	/cad2/ece540s/basesuif-1.1.2/include/suifmath/vector_space.h	/^    int space_dimension() const { return space; }$/;"	f	class:vector_space
sparse_map	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	103;"	d
spilled	/cad2/ece540s/basesuif-1.1.2/include/flow/reginfo.h	/^    boolean spilled;$/;"	m	class:register_info
src	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg dst, src;$/;"	m	class:in_cvt
src	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg src;$/;"	m	class:in_bj
src	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg src;$/;"	m	class:in_mbr
src	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_reg *src;		\/* branch selector *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon55
src	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_reg *src;		\/* source register *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon52
src	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_reg *src;		\/* branch selector *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon32
src	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_reg *src;		\/* source register *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon29
src	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand src;$/;"	m	class:in_bj
src	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand src;$/;"	m	class:in_mbr
src1	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg dst, src1, src2;$/;"	m	class:in_rrr
src1	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_reg *src1;		\/* source 1 *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon51
src1	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_reg *src1;		\/* source 1 *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon28
src1	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand src1, src2;$/;"	m	class:in_rrr
src1_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand src1_op()			{ return src1; }$/;"	f	class:in_rrr
src1_reg	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    if_reg src1_reg()			{ return instr->src1_reg(); }$/;"	f	class:ast_node_suif_instr
src2	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg dst, src1, src2;$/;"	m	class:in_rrr
src2	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_reg *src2;		\/* source 2 *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon51
src2	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_reg *src2;		\/* source 2 *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon28
src2	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand src1, src2;$/;"	m	class:in_rrr
src2_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand src2_op()			{ return src2; }$/;"	f	class:in_rrr
src2_reg	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    if_reg src2_reg()			{ return instr->src2_reg(); }$/;"	f	class:ast_node_suif_instr
src_c	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    src_c = 1,$/;"	e	enum:src_lang_type
src_fortran	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    src_fortran = 2,$/;"	e	enum:src_lang_type
src_lang	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    src_lang_type src_lang()		{ return srclang; }$/;"	f	class:proc_sym
src_lang_type	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^enum src_lang_type {$/;"	g
src_map_f	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^typedef boolean (*src_map_f)(instruction *i, operand *r, void *x);$/;"	t
src_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand src_op()			{ return src; }$/;"	f	class:in_bj
src_op	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand src_op()			{ return src; }$/;"	f	class:in_mbr
src_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *src_type;$/;"	m	class:SVR_absorb
src_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *src_type;$/;"	m	class:SVR_unit
src_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *src_type;$/;"	m	class:SVR_absorb
src_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *src_type;$/;"	m	class:SVR_unit
src_unknown	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    src_unknown = 0,$/;"	e	enum:src_lang_type
src_verilog	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    src_verilog = 3$/;"	e	enum:src_lang_type
srclang	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    src_lang_type srclang;		\/* source language *\/$/;"	m	class:proc_sym
srcs	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand *srcs;$/;"	m	class:in_gen
srctype	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_type srctype;$/;"	m	class:in_cvt
ss	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    short ss;$/;"	m	union:any_type
st	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    block_symtab *st;$/;"	m	class:tree_block
sta	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^        struct_access  * sta;$/;"	m	union:block_info::__anon1
start	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^    int start, end;$/;"	m	class:Header_info
start	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^    int start, end;$/;"	m	class:Header_info
start	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^    int start, end;$/;"	m	class:Header_info
starta	/cad2/ece540s/basesuif-1.1.2/include/flow/astif.h	/^    annote_list starta;			\/* annotations at start instruction *\/$/;"	m	class:ast_node_if
starta	/cad2/ece540s/basesuif-1.1.2/include/flow/astloop.h	/^    annote_list starta;			\/* annotations at start instruction *\/$/;"	m	class:ast_node_loop
starter	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^    proc_starter starter;$/;"	m	class:Flow_hooks
stat_maxm	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int stat_stm, stat_stn, stat_stp, stat_nexp, stat_maxm, stat_ninit, stat_ninitex; $/;"	m	class:named_sc_fm
stat_nexp	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int stat_stm, stat_stn, stat_stp, stat_nexp, stat_maxm, stat_ninit, stat_ninitex; $/;"	m	class:named_sc_fm
stat_ninit	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int stat_stm, stat_stn, stat_stp, stat_nexp, stat_maxm, stat_ninit, stat_ninitex; $/;"	m	class:named_sc_fm
stat_ninitex	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int stat_stm, stat_stn, stat_stp, stat_nexp, stat_maxm, stat_ninit, stat_ninitex; $/;"	m	class:named_sc_fm
stat_stm	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int stat_stm, stat_stn, stat_stp, stat_nexp, stat_maxm, stat_ninit, stat_ninitex; $/;"	m	class:named_sc_fm
stat_stn	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int stat_stm, stat_stn, stat_stp, stat_nexp, stat_maxm, stat_ninit, stat_ninitex; $/;"	m	class:named_sc_fm
stat_stp	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int stat_stm, stat_stn, stat_stp, stat_nexp, stat_maxm, stat_ninit, stat_ninitex; $/;"	m	class:named_sc_fm
stat_sttime	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    long stat_sttime;$/;"	m	class:named_sc_fm
stateno	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	ftnint stateno;		\/* Original label *\/$/;"	m	struct:Labelblock
states	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    PP_state *states[PP_mach_size];$/;"	m	class:PP_mach
states	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    PP_state *states[PP_mach_size];$/;"	m	class:PP_mach
static_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    sym_node_list_iter *static_proc_iter;$/;"	m	class:file_set_entry
statics	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^    storage_manager *statics;$/;"	m	class:procedure_info
step	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_e * step() { access_ineq_e * ret = curr; if(curr) update(); return ret; }$/;"	f	class:access_ineq_list_iter
step	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    access_ineq_e * step() { return next; }$/;"	f	class:access_ineq_e
step	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_list_e *step() {return (access_list_e *) alist_iter::step();}$/;"	f	struct:access_list_iter
step	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    access_vector *step()$/;"	f	class:array_info_iter
step	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^	distance_vector_e *step()$/;"	f	struct:distance_vector_iter
step	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^	dvlist_e *step()$/;"	f	struct:dvlist_iter
step	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^        dir_list *step() { return next; }$/;"	f	struct:dir_list
step	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_list_e *step() {return (access_list_e *) alist_iter::step();}$/;"	f	struct:access_list_iter
step	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    access_vector *step()$/;"	f	class:array_info_iter
step	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	distance_vector_e *step()$/;"	f	struct:distance_vector_iter
step	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	dvlist_e *step()$/;"	f	struct:dvlist_iter
step	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^        dir_list *step() { return next; }$/;"	f	struct:dir_list
step	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_list_e *step() {return (access_list_e *) alist_iter::step();}$/;"	f	struct:access_list_iter
step	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    access_vector *step()$/;"	f	class:array_info_iter
step	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	distance_vector_e *step()$/;"	f	struct:distance_vector_iter
step	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	dvlist_e *step()$/;"	f	struct:dvlist_iter
step	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^        dir_list *step() { return next; }$/;"	f	struct:dir_list
step	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    if_reg step;			\/* pseudo reg *\/$/;"	m	class:ast_node_for
step	/cad2/ece540s/basesuif-1.1.2/include/flow/astlist.h	/^    ast_node * step()			{ return ((astlist_e *)$/;"	f	class:astlist_iter
step	/cad2/ece540s/basesuif-1.1.2/include/flow/astnodelist.h	/^    ast_node * step()			{ return (ast_node*)clist_iter::step();}$/;"	f	class:ast_node_iter
step	/cad2/ece540s/basesuif-1.1.2/include/general/alist.h	/^    alist_e *step()			{ return (alist_e *)glist_iter::step();}$/;"	f	class:alist_iter
step	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    void * step()			{ return ((cons_e *)glist_iter::step())$/;"	f	class:consiter
step	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist_e * step()			{ cur = nxt; nxt = nxt->next;$/;"	f	class:glist_iter
step	/cad2/ece540s/basesuif-1.1.2/include/general/intlist.h	/^    int step()				{ return ((intlist_e *)$/;"	f	class:intlist_iter
step	/cad2/ece540s/basesuif-1.1.2/include/hawg/annotelist.h	/^    annote * step()			{ return ((annote_list_e *)$/;"	f	class:annote_list_iter
step	/cad2/ece540s/basesuif-1.1.2/include/hawg/ilist.h	/^    instruction * step()		{ return ((ilist_e *)$/;"	f	class:ilist_iter
step	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    path_base * step()			{ cur = nxt; nxt = nxt->siblings;$/;"	f	class:path_base_iter
step	/cad2/ece540s/basesuif-1.1.2/include/hawg/pblist.h	/^    path_base * step()			{ return (path_base *)consiter::step();}$/;"	f	class:path_base_list_iter
step	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_e * step() { access_ineq_e * ret = curr; if(curr) update(); return ret; }$/;"	f	class:access_ineq_list_iter
step	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    access_ineq_e * step() { return next; }$/;"	f	class:access_ineq_e
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    void * step()			{ return ((cons_e *)glist_iter::step())$/;"	f	class:consiter
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn *step() { return (Seqn *)consiter::step(); }$/;"	f	struct:Seqn_consiter
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn *step() { return (Seqn *)glist_iter::step(); }$/;"	f	struct:Seqn_iter
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode *step() { return (Snode *)consiter::step(); }$/;"	f	struct:Snode_iter
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Svar *step() { return (Svar *)consiter::step(); }$/;"	f	struct:Svar_iter
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  Sedge *step() { return (Sedge *)glist_iter::step(); }$/;"	f	struct:Sedge_iter
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_case *step() { return (sc_case *)glist_iter::step(); }$/;"	f	struct:sc_citer
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_code *step() { return (sc_code *)glist_iter::step(); }$/;"	f	struct:sc_iter
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_expr *step() { return (sc_expr *)glist_iter::step(); }$/;"	f	struct:sc_eiter
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    PP_item *step() { return (PP_item *)glist_iter::step(); }$/;"	f	class:PP_iset_iter
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_rule *step() { return (SV_rule*)consiter::step(); }$/;"	f	class:SV_rule_iter
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_type *step() { return (SV_type *)consiter::step(); }$/;"	f	class:Type_iter
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *step() { return (Symbol *)consiter::step(); }$/;"	f	struct:Symbol_iter
step	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record *step() { return (ty_record *)consiter::step(); }$/;"	f	class:ty_record_list_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Sedge *step() { return (Sedge *)glist_iter::step(); }$/;"	f	struct:Sedge_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn *step() { return (Seqn *)consiter::step(); }$/;"	f	struct:Seqn_consiter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn *step() { return (Seqn *)glist_iter::step(); }$/;"	f	struct:Seqn_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode *step() { return (Snode *)consiter::step(); }$/;"	f	struct:Snode_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Svar *step() { return (Svar *)consiter::step(); }$/;"	f	struct:Svar_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Sedge *step() { return (Sedge *)glist_iter::step(); }$/;"	f	struct:Sedge_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn *step() { return (Seqn *)consiter::step(); }$/;"	f	struct:Seqn_consiter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn *step() { return (Seqn *)glist_iter::step(); }$/;"	f	struct:Seqn_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode *step() { return (Snode *)consiter::step(); }$/;"	f	struct:Snode_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Svar *step() { return (Svar *)consiter::step(); }$/;"	f	struct:Svar_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_case *step() { return (sc_case *)glist_iter::step(); }$/;"	f	struct:sc_citer
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_code *step() { return (sc_code *)glist_iter::step(); }$/;"	f	struct:sc_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_expr *step() { return (sc_expr *)glist_iter::step(); }$/;"	f	struct:sc_eiter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    PP_item *step() { return (PP_item *)glist_iter::step(); }$/;"	f	class:PP_iset_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_rule *step() { return (SV_rule*)consiter::step(); }$/;"	f	class:SV_rule_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_type *step() { return (SV_type *)consiter::step(); }$/;"	f	class:Type_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *step() { return (Symbol *)consiter::step(); }$/;"	f	struct:Symbol_iter
step	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record *step() { return (ty_record *)consiter::step(); }$/;"	f	class:ty_record_list_iter
step	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *step()		{ return (alist_e *)glist_iter::step(); }$/;"	f	class:alist_iter
step	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^    dlist_e *step()			{ return (dlist_e*)glist_iter::step();}$/;"	f	class:dlist_iter
step	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *bod, *lpad, *lower, *upper, *step;$/;"	m	class:tree_for
step	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_e * step() { access_ineq_e * ret = curr; if(curr) update(); return ret; }$/;"	f	class:access_ineq_list_iter
step	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    access_ineq_e * step() { return next; }$/;"	f	class:access_ineq_e
step0	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist_e * step0()			{ cur = nxt; if (nxt) nxt = nxt->next;$/;"	f	class:glist_iter
step_list	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *step_list()		{ return step; }$/;"	f	class:tree_for
step_op	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    operand step_op()			{ return step->op(); }$/;"	f	class:tree_for
step_part	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    ast_node_list *step_part;$/;"	m	class:ast_node_for
step_well_behaved	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    boolean step_well_behaved;$/;"	m	class:ast_node_for
stepa	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    annote_list stepa;$/;"	m	class:ast_node_for
storage_collector	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^    annote_eater storage_collector;$/;"	m	class:Flow_hooks
storage_info	/cad2/ece540s/basesuif-1.1.2/include/flow/storinfo.h	/^    storage_info(char *n, path_base *b, if_type ty, int o, boolean e = FALSE)$/;"	f	class:storage_info
storage_info	/cad2/ece540s/basesuif-1.1.2/include/flow/storinfo.h	/^class storage_info : public path_info {$/;"	c
storage_manager	/cad2/ece540s/basesuif-1.1.2/include/flow/storinfo.h	/^class storage_manager : public path_info {$/;"	c
storage_node	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^class storage_node : public sym_node {$/;"	c
storage_sym	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^    storage_sym,$/;"	e	enum:sym_kinds
stp	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    access_vector *stp;$/;"	m	struct:dep_for_annote
stp	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	access_vector *stp;$/;"	m	struct:dep_node_for
stp	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	access_vector *stp;$/;"	m	struct:dep_node_for
stream_type	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^enum stream_type {$/;"	g
strides	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    lin_ineq strides;         \/\/ Stride of each loop variable$/;"	m	class:poly_iterator
strides	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    lin_ineq strides;         \/\/ Stride of each loop variable$/;"	m	class:poly_iterator
strides	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    lin_ineq strides;         \/\/ Stride of each loop variable$/;"	m	class:poly_iterator
string	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	/^    char *string;$/;"	m	struct:__anon15
string_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/stringtable.h	/^    string_e(string_e *n, unsigned sig, char *s, boolean f = FALSE) : sp(s)$/;"	f	class:string_e
string_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/stringtable.h	/^class string_e {$/;"	c
string_e	/cad2/ece540s/basesuif-1.1.2/include/suif/stringtable.h	/^    string_e(string_e *n, unsigned sig, char *s)$/;"	f	class:string_e
string_e	/cad2/ece540s/basesuif-1.1.2/include/suif/stringtable.h	/^class string_e {$/;"	c
string_index	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^    string_index(void)  { }$/;"	f	class:string_index
string_index	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^class string_index$/;"	c
string_table	/cad2/ece540s/basesuif-1.1.2/include/hawg/stringtable.h	/^class string_table {$/;"	c
string_table	/cad2/ece540s/basesuif-1.1.2/include/suif/stringtable.h	/^class string_table {$/;"	c
string_table_size	/cad2/ece540s/basesuif-1.1.2/include/hawg/stringtable.h	26;"	d
string_table_size	/cad2/ece540s/basesuif-1.1.2/include/suif/stringtable.h	24;"	d
strip	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    void strip(access_ineq_list & in,  int num1) { this->strip(in, num1, num1); }$/;"	f	class:access_ineq_list
strip	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    void strip(access_ineq_list & in,  int num1) { this->strip(in, num1, num1); }$/;"	f	class:access_ineq_list
strip	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    void strip(access_ineq_list & in,  int num1) { this->strip(in, num1, num1); }$/;"	f	class:access_ineq_list
strlenvar	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr strlenvar;$/;"	m	struct:Nameblock
struct_access	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^struct struct_access:public builder_base {$/;"	s
struct_align	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^    int struct_align;			\/* extra alignment for structs *\/$/;"	m	struct:machine_params
struct_annote_def	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^class struct_annote_def : public annote_def {$/;"	c
struct_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    struct_type()			{ }$/;"	f	class:struct_type
struct_type	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^class struct_type : public type_node {$/;"	c
structure	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_expr *structure;$/;"	m	struct:sc_select
structure	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_expr *structure;$/;"	m	struct:sc_select
structure_collector	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^    annote_eater structure_collector;$/;"	m	class:Flow_hooks
stuff	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	C_code *stuff;$/;"	m	struct:sc_opaque
stuff	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	C_code *stuff;$/;"	m	struct:sc_opaque
stupid_structures_proc_symbols	/cad2/ece540s/basesuif-1.1.2/include/flow/procinfo.h	/^    in_mrk *stupid_structures_proc_symbols;$/;"	m	class:procedure_info
su_list	/cad2/ece540s/basesuif-1.1.2/include/builder/bldtypes.h	/^struct su_list {$/;"	s
subtype	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_node * subtype(int n = 0)	{ assert(n >= 0 && n <= ntypes);$/;"	f	class:type_node
successors	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  virtual CFGnode **successors(Node_index u,int *ip)$/;"	f	class:CFG_1_reversed
suif_byte_size	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	/^const int suif_byte_size = 8;$/;"	v
suif_check_result	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^enum suif_check_result { SF_CANT_OPEN, SF_NOT_SUIF, SF_SUIF_FILE };$/;"	g
suif_library	/cad2/ece540s/basesuif-1.1.2/include/suif/initsuif.h	/^struct suif_library {$/;"	s
suif_object	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^    suif_object()			{ anl = NULL; }$/;"	f	class:suif_object
suif_object	/cad2/ece540s/basesuif-1.1.2/include/suif/suifobj.h	/^class suif_object {$/;"	c
suif_sym	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    void *suif_sym;			\/* underlying SUIF representation *\/$/;"	m	struct:simple_sym_struct
suif_sym	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    void *suif_sym;			\/* underlying SUIF representation *\/$/;"	m	struct:simple_sym_struct
suif_type	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    void *suif_type;			\/* underlying SUIF representation *\/$/;"	m	struct:simple_type_struct
suif_type	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    void *suif_type;			\/* underlying SUIF representation *\/$/;"	m	struct:simple_type_struct
sval	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^	char *sval;$/;"	m	union:icon::__anon4
sval	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^	char *sval;$/;"	m	union:immed_dataonly::__anon34
swap	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^        void swap(int i, int j) { (*this)[i] ^= (*this)[j]; }$/;"	f	class:integer_matrix
swap	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^        void swap(int i, int j) { (*this)[i] ^= (*this)[j]; }$/;"	f	class:integer_matrix
swap	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^        void swap(int i, int j) { (*this)[i] ^= (*this)[j]; }$/;"	f	class:integer_matrix
swap_bytes	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    boolean swap_bytes;$/;"	m	class:in_stream
sym	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block sym(sym_node * s)      { return new block(s); }$/;"	f	class:block
sym	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^        sym_node       * sym;$/;"	m	union:block_info::__anon1
sym	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^        sym_node       * sym;$/;"	m	union:gen_tree::__anon3
sym	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *sym;$/;"	m	class:SV_node
sym	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *sym;$/;"	m	class:SV_node
sym	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^	var_sym *sym;$/;"	m	union:operand_dataonly::__anon35
sym	/cad2/ece540s/basesuif-1.1.2/include/suif/symaddr.h	/^    sym_node *sym;$/;"	m	class:sym_addr_dataonly
sym_addr	/cad2/ece540s/basesuif-1.1.2/include/suif/symaddr.h	/^    sym_addr(sym_node *s, unsigned o)	{ sym = s; off = o; }$/;"	f	class:sym_addr
sym_addr	/cad2/ece540s/basesuif-1.1.2/include/suif/symaddr.h	/^class sym_addr : public sym_addr_dataonly {$/;"	c
sym_addr_dataonly	/cad2/ece540s/basesuif-1.1.2/include/suif/symaddr.h	/^class sym_addr_dataonly {$/;"	c
sym_id	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    unsigned sym_id()			{ return id; }$/;"	f	class:sym_node
sym_id_index	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    ptr_index *sym_id_index;		\/* for fast lookups by id # *\/$/;"	m	class:base_symtab
sym_kind	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^} sym_kind;$/;"	t	typeref:enum:sym_kind_enum
sym_kind	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^} sym_kind;$/;"	t	typeref:enum:sym_kind_enum
sym_kind_enum	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^typedef enum sym_kind_enum {$/;"	g
sym_kind_enum	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^typedef enum sym_kind_enum {$/;"	g
sym_kinds	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^enum sym_kinds {$/;"	g
sym_kinds	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^enum sym_kinds {$/;"	g
sym_list	/cad2/ece540s/basesuif-1.1.2/include/flow/flowhooks.h	/^    path_base_list sym_list;$/;"	m	class:Flow_hooks
sym_list	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^    path_base_list sym_list;$/;"	m	class:proc
sym_name_index	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    string_index *sym_name_index;	\/* for fast lookups by name *\/$/;"	m	class:base_symtab
sym_node	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^class sym_node : public path_base {$/;"	c
sym_node	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^class sym_node : public suif_object {$/;"	c
symbol	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_sym *symbol;		\/* symbolic address *\/$/;"	m	struct:simple_immed_struct::__anon48::__anon49
symbol	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_sym *symbol;		\/* symbolic address *\/$/;"	m	struct:simple_immed_struct::__anon25::__anon26
symbol	/cad2/ece540s/basesuif-1.1.2/include/suif/symaddr.h	/^    sym_node *symbol()			{ return sym; }$/;"	f	class:sym_addr
symbols	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	Symbol_list symbols;$/;"	m	struct:sc_list
symbols	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Scope *symbols;$/;"	m	class:SV_rule
symbols	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	Symbol_list symbols;$/;"	m	struct:sc_list
symbols	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Scope *symbols;$/;"	m	class:SV_rule
symbols	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    sym_node_list *symbols()		{ return syms; }$/;"	f	class:base_symtab
syms	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    sym_node_list *syms;		\/* list of symbols *\/$/;"	m	class:base_symtab
symtab	/cad2/ece540s/basesuif-1.1.2/include/builder/bldtypes.h	/^    base_symtab * symtab;$/;"	m	class:type_template
symtab	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    file_symtab *symtab()		{ return table; }$/;"	f	class:file_set_entry
symtab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    block_symtab *symtab()		{ return st; }$/;"	f	class:tree_block
symtab_kinds	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^enum symtab_kinds {$/;"	g
symtab_ptr_loc	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    long symtab_ptr_loc;		\/* offset in file for symtab info *\/$/;"	m	class:file_set_entry
sz	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    int sz;				\/\/ for base types and arrays$/;"	m	class:type_node
sz	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^    int sz;$/;"	m	class:integer_row
sz	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^    int sz;$/;"	m	class:integer_row
sz	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    int sz;$/;"	m	class:base_type
sz	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    int sz;$/;"	m	class:struct_type
sz	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    int sz;$/;"	m	class:integer_row
sz	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    int sz;$/;"	m	class:name_table
sz	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int sz;$/;"	m	class:sc_fm_results
table	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	UD_hash_entry *table;  \/\/ the table$/;"	m	class:UD_hash_table
table	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	X_hash_entry *table;  \/\/ the table$/;"	m	class:X_hash_table
table	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	full_hash_entry *table;  \/\/ the table$/;"	m	class:full_hash_table
table	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	UD_hash_entry *table;  \/\/ the table$/;"	m	class:UD_hash_table
table	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	X_hash_entry *table;  \/\/ the table$/;"	m	class:X_hash_table
table	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	full_hash_entry *table;  \/\/ the table$/;"	m	class:full_hash_table
table	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	UD_hash_entry *table;  \/\/ the table$/;"	m	class:UD_hash_table
table	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	X_hash_entry *table;  \/\/ the table$/;"	m	class:X_hash_table
table	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	full_hash_entry *table;  \/\/ the table$/;"	m	class:full_hash_table
table	/cad2/ece540s/basesuif-1.1.2/include/hawg/stringtable.h	/^    string_e *table[string_table_size];$/;"	m	class:string_table
table	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    hash_table table;$/;"	m	class:Hashed_scope
table	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    hash_table table;$/;"	m	class:Hashed_scope
table	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    file_symtab *table;			\/* corresponding file symtab *\/$/;"	m	class:file_set_entry
table	/cad2/ece540s/basesuif-1.1.2/include/suif/stringtable.h	/^    string_e *table[string_table_size];$/;"	m	class:string_table
table	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    base_symtab *table;			\/* symtab containing this sym_node *\/$/;"	m	class:sym_node
table	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    base_symtab *table;			\/* symtab containing this type_node *\/$/;"	m	class:type_node
table	/cad2/ece540s/basesuif-1.1.2/include/suif/vardef.h	/^    base_symtab *table;$/;"	m	class:var_def
table_entry	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	/^} table_entry;$/;"	t	typeref:struct:__anon14
table_size	/cad2/ece540s/basesuif-1.1.2/include/sf2c/parse.h	/^    int table_size;$/;"	m	struct:__anon15
tag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field tag;$/;"	m	struct:Addrblock
tag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field tag;$/;"	m	struct:Constblock
tag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field tag;$/;"	m	struct:Errorblock
tag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field tag;$/;"	m	struct:Exprblock
tag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field tag;$/;"	m	struct:Headblock
tag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field tag;$/;"	m	struct:Impldoblock
tag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field tag;$/;"	m	struct:Listblock
tag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field tag;$/;"	m	struct:Nameblock
tag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field tag;$/;"	m	struct:Paramblock
tag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field tag;$/;"	m	struct:Primblock
tag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field tag;$/;"	m	union:Expression
tagptr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^typedef union Expression *expptr, *tagptr;$/;"	t	typeref:union:
tail	/cad2/ece540s/basesuif-1.1.2/include/general/glist.h	/^    glist_e *head, *tail;$/;"	m	class:glist
tail	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *tail()			{ return (alist_e*)mtflist::tail(); }$/;"	f	class:amtflist
tail	/cad2/ece540s/basesuif-1.1.2/include/suif/alist.h	/^    alist_e *tail() const		{ return (alist_e *)glist::tail(); }$/;"	f	class:alist
tail	/cad2/ece540s/basesuif-1.1.2/include/suif/dlist.h	/^    dlist_e *tail() const		{ return (dlist_e*)glist::tail(); }$/;"	f	class:dlist
tail	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_e *tail() const		{ return tail_e; }$/;"	f	class:glist
tail_e	/cad2/ece540s/basesuif-1.1.2/include/suif/glist.h	/^    glist_e *head_e, *tail_e;$/;"	m	class:glist
targ	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    label_sym *targ;$/;"	m	class:in_bj
target	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_sym *target;		\/* branch target label *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon52
target	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_sym *target;		\/* branch target label *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon29
target	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    label_sym *target()			{ return targ; }$/;"	f	class:in_bj
target_binder	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Q_binder *target_binder;$/;"	m	class:SVR_star
target_binder	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Q_binder *target_binder;$/;"	m	class:SVR_star
target_names	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Q_binder *target_names;$/;"	m	class:SVR_absorb
target_names	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Q_binder *target_names;$/;"	m	class:SVR_create
target_names	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Q_binder *target_names;$/;"	m	class:SVR_unit
target_names	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Q_binder *target_names;$/;"	m	class:SVR_absorb
target_names	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Q_binder *target_names;$/;"	m	class:SVR_create
target_names	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Q_binder *target_names;$/;"	m	class:SVR_unit
target_node	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_node *target_node;$/;"	m	class:SVR_absorb
target_node	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_node *target_node;$/;"	m	class:SVR_create
target_node	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_node *target_node;$/;"	m	class:SVR_star
target_node	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_node *target_node;$/;"	m	class:SVR_unit
target_node	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_node *target_node;$/;"	m	class:SVR_absorb
target_node	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_node *target_node;$/;"	m	class:SVR_create
target_node	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_node *target_node;$/;"	m	class:SVR_star
target_node	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_node *target_node;$/;"	m	class:SVR_unit
target_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *target_type;$/;"	m	class:SVR_absorb
target_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *target_type;$/;"	m	class:SVR_create
target_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *target_type;$/;"	m	class:SVR_star
target_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *target_type;$/;"	m	class:SVR_unit
target_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *target_type;$/;"	m	class:SVR_absorb
target_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *target_type;$/;"	m	class:SVR_create
target_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *target_type;$/;"	m	class:SVR_star
target_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *target_type;$/;"	m	class:SVR_unit
targets	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_sym **targets;	\/* array of labels *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon55
targets	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_sym **targets;	\/* array of labels *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon32
tell	/cad2/ece540s/basesuif-1.1.2/include/hawg/rstream.h	/^    int tell()				{ return proc_index; }$/;"	f	class:if_ristream
temp_marker	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^class temp_marker$/;"	c
test	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    char *test;$/;"	m	class:ast_node_for
test	/cad2/ece540s/basesuif-1.1.2/include/flow/astloop.h	/^    ast_node_list *test;$/;"	m	class:ast_node_loop
test	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	sc_expr *test;$/;"	m	struct:sc_switch
test	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	sc_expr *test;$/;"	m	struct:sc_switch
test	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_for_test test()		{ return tst; }$/;"	f	class:tree_for
test	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *test()		{ return tst; }$/;"	f	class:tree_loop
text	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	char text[segsize];$/;"	m	struct:String_seg
text	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	char text[segsize];$/;"	m	struct:String_seg
the_data	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^    void *the_data;$/;"	m	class:si_entry
the_denominator	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer the_denominator;$/;"	m	class:i_rational
the_expected_lower	/cad2/ece540s/basesuif-1.1.2/include/suif/tree_string_index.h	/^    char the_expected_lower;$/;"	m	class:tree_string_index
the_expected_upper	/cad2/ece540s/basesuif-1.1.2/include/suif/tree_string_index.h	/^    char the_expected_upper;$/;"	m	class:tree_string_index
the_fill_init	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    fill_init_struct *the_fill_init(void) { return this; }$/;"	f	class:fill_init_struct
the_fill_init	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    virtual fill_init_struct *the_fill_init(void) { return NULL; }$/;"	f	class:base_init_struct
the_id	/cad2/ece540s/basesuif-1.1.2/include/suif/fileset.h	/^    int the_id;$/;"	m	class:file_set_entry
the_list_size	/cad2/ece540s/basesuif-1.1.2/include/suif/tree_string_index.h	/^    unsigned long the_list_size;$/;"	m	class:tree_string_index
the_multi_init	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    multi_init_struct *the_multi_init(void) { return this; }$/;"	f	class:multi_init_struct
the_multi_init	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    virtual multi_init_struct *the_multi_init(void) { return NULL; }$/;"	f	class:base_init_struct
the_numerator	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer the_numerator;$/;"	m	class:i_rational
the_offset	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    int the_offset;$/;"	m	class:var_sym
the_parent_var	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    var_sym *the_parent_var;$/;"	m	class:var_sym
the_repeat_init	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    repeat_init_struct *the_repeat_init(void) { return this; }$/;"	f	class:repeat_init_struct
the_repeat_init	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    virtual repeat_init_struct *the_repeat_init(void) { return NULL; }$/;"	f	class:base_init_struct
the_string_index	/cad2/ece540s/basesuif-1.1.2/include/suif/ts_ptr_index.h	/^    string_index *the_string_index;$/;"	m	class:ts_ptr_index
the_tag	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^    i_integer_tag the_tag;$/;"	m	class:i_integer
then	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *then;$/;"	m	class:tree_if
then_part	/cad2/ece540s/basesuif-1.1.2/include/flow/astif.h	/^    ast_node_list *then_part;		\/* cannot be NULL *\/$/;"	m	class:ast_node_if
then_part	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *then_part()		{ return then; }$/;"	f	class:tree_if
this_id	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    unsigned long this_id;$/;"	m	class:temp_marker
tight	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    void tight() { loose_symbols=0; }$/;"	f	class:istream
tight	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    void tight() { loose_symbols=0; }$/;"	f	class:istream
tnl	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^        tree_node_list * tnl;$/;"	m	union:block_info::__anon1
tnl	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^        tree_node_list * tnl;$/;"	m	union:gen_tree::__anon3
to	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  CFGnode *from, *to;$/;"	m	class:CFG_1_edge
to	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode *to() { return (Snode *)data; }$/;"	f	struct:Snode_e
to	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^  Seqn *from,*to;$/;"	m	class:Sedge
to	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn *from,*to;$/;"	m	struct:Sedge
to	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode *to() { return (Snode *)data; }$/;"	f	struct:Snode_e
to	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn *from,*to;$/;"	m	struct:Sedge
to	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode *to() { return (Snode *)data; }$/;"	f	struct:Snode_e
to	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    cvt_to_imm_f to()			{ return to_f; }$/;"	f	class:struct_annote_def
to_f	/cad2/ece540s/basesuif-1.1.2/include/suif/aman.h	/^    cvt_to_imm_f to_f;$/;"	m	class:struct_annote_def
token	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	const int token;$/;"	m	struct:SV_keyword
token	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	const int token;$/;"	m	struct:SV_keyword
tol	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    label_sym *clab, *blab, *tol;$/;"	m	class:tree_loop
too_messy	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int too_messy;		\/\/ if not a perfect access vector$/;"	m	class:access_vector
too_messy	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int too_messy;		\/\/ if not a perfect access vector$/;"	m	class:access_vector
too_messy	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int too_messy;		\/\/ if not a perfect access vector$/;"	m	class:access_vector
top	/cad2/ece540s/basesuif-1.1.2/include/general/conslist.h	/^    void * top()			{ return ((cons_e *)head)->data; }$/;"	f	class:conslist
top	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/conslist.h	/^    void * top()			{ return ((cons_e *)head_e)->data; }$/;"	f	class:conslist
top	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Seqn *top() { return (Seqn *)((cons_e *)head_e)->data; }$/;"	f	struct:Seqn_conslist
top	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^	Snode *top() { return (Snode *)conslist::top(); }$/;"	f	class:Snode_list
top	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record *top() { return (ty_record *)conslist::top(); }$/;"	f	class:ty_record_list
top	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Seqn *top() { return (Seqn *)((cons_e *)head)->data; }$/;"	f	struct:Seqn_conslist
top	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^	Snode *top() { return (Snode *)conslist::top(); }$/;"	f	class:Snode_list
top	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Seqn *top() { return (Seqn *)((cons_e *)head)->data; }$/;"	f	struct:Seqn_conslist
top	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^	Snode *top() { return (Snode *)conslist::top(); }$/;"	f	class:Snode_list
top	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record *top() { return (ty_record *)conslist::top(); }$/;"	f	class:ty_record_list
top_of_loop	/cad2/ece540s/basesuif-1.1.2/include/flow/astloop.h	/^    path *top_of_loop;$/;"	m	class:ast_node_loop
toplab	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    label_sym *toplab()			{ return tol; }$/;"	f	class:tree_loop
total_size	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    int total_size(void) { return size * data->count(); }$/;"	f	class:multi_init_struct
total_size	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    int total_size(void) { return size * repetitions; }$/;"	f	class:repeat_init_struct
total_size	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    int total_size(void) { return size; }$/;"	f	class:fill_init_struct
tp	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^    type_node * tp;$/;"	m	struct:gen_tree
tp	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    value_tree * tp;                            \/\/ Branch when cond is true$/;"	m	class:value_tree
transformer	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    C_code *transformer;$/;"	m	class:SV_node
transformer	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    C_code *transformer;$/;"	m	class:SV_node
tree_block	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_block()			{ }$/;"	f	class:tree_block
tree_block	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^class tree_block : public tree_node {$/;"	c
tree_for	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^class tree_for : public tree_node {$/;"	c
tree_for_test	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^enum tree_for_test {$/;"	g
tree_if	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^class tree_if : public tree_node {$/;"	c
tree_instr	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_instr(instruction *i)		{ ins = NULL; set_instr(i); }$/;"	f	class:tree_instr
tree_instr	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^class tree_instr : public tree_node {$/;"	c
tree_kinds	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^enum tree_kinds {$/;"	g
tree_leaf	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^class tree_leaf : public value_tree {$/;"	c
tree_loop	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^class tree_loop : public tree_node {$/;"	c
tree_map_f	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^typedef void (*tree_map_f)(tree_node *t, void *x);$/;"	t
tree_node	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node()				{ num = 0; par = NULL; le = NULL; }$/;"	f	class:tree_node
tree_node	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^class tree_node : public suif_object {$/;"	c
tree_node_list	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list()			{ par = NULL; }$/;"	f	class:tree_node_list
tree_node_list	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list(tree_node *pr)	{ par = pr; }$/;"	f	class:tree_node_list
tree_node_list	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^class tree_node_list : public tree_node_list_base {$/;"	c
tree_proc	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_proc(tree_node_list *b, proc_symtab *s)$/;"	f	class:tree_proc
tree_proc	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^class tree_proc : public tree_block {$/;"	c
tree_string_index	/cad2/ece540s/basesuif-1.1.2/include/suif/tree_string_index.h	/^class tree_string_index : public string_index$/;"	c
trn	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^        tree_node      * trn;$/;"	m	union:block_info::__anon1
trn	/cad2/ece540s/basesuif-1.1.2/include/builder/cgen.h	/^        tree_node      * trn;$/;"	m	union:gen_tree::__anon3
true_branch	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    value_tree * true_branch()                  { return tp; }$/;"	f	class:value_tree
ts_ptr_index	/cad2/ece540s/basesuif-1.1.2/include/suif/ts_ptr_index.h	/^class ts_ptr_index : public ptr_index$/;"	c
tst	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_for_test tst;$/;"	m	class:tree_for
tst	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *bod, *tst;$/;"	m	class:tree_loop
tval	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^	if_type *tval;$/;"	m	union:icon::__anon4
ty	/cad2/ece540s/basesuif-1.1.2/include/builder/bldtypes.h	/^    type_node_list * ty;$/;"	m	struct:su_list
ty_base	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	ty_base(int bt):SV_type(TY_base) { type=bt; }$/;"	f	struct:ty_base
ty_base	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^struct ty_base: public SV_type {$/;"	s
ty_base	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	ty_base(int bt):SV_type(TY_base) { type=bt; }$/;"	f	struct:ty_base
ty_base	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^struct ty_base: public SV_type {$/;"	s
ty_enum	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	ty_enum(Symbol *n):SV_type(TY_enum) {type_name=n; count=0;}$/;"	f	class:ty_enum
ty_enum	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class ty_enum:public SV_type {$/;"	c
ty_enum	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	ty_enum(Symbol *n):SV_type(TY_enum) {type_name=n; count=0;}$/;"	f	class:ty_enum
ty_enum	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class ty_enum:public SV_type {$/;"	c
ty_function	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_function():SV_type(TY_function) { container=0; }$/;"	f	class:ty_function
ty_function	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_function(SV_type *ret,ty_record *c = 0):SV_type(TY_function){$/;"	f	class:ty_function
ty_function	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class ty_function:public SV_type {$/;"	c
ty_function	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_function():SV_type(TY_function) { container=0; }$/;"	f	class:ty_function
ty_function	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_function(SV_type *ret,ty_record *c = 0):SV_type(TY_function){$/;"	f	class:ty_function
ty_function	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class ty_function:public SV_type {$/;"	c
ty_named	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	ty_named(Symbol *n,SV_type *t):SV_type(TY_named)$/;"	f	class:ty_named
ty_named	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class ty_named:public SV_type {$/;"	c
ty_named	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	ty_named(Symbol *n,SV_type *t):SV_type(TY_named)$/;"	f	class:ty_named
ty_named	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class ty_named:public SV_type {$/;"	c
ty_pointer	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_pointer(SV_type *t):SV_type(TY_pointer) {type=t;}$/;"	f	class:ty_pointer
ty_pointer	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class ty_pointer:public SV_type {$/;"	c
ty_pointer	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_pointer(SV_type *t):SV_type(TY_pointer) {type=t;}$/;"	f	class:ty_pointer
ty_pointer	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class ty_pointer:public SV_type {$/;"	c
ty_record	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class ty_record: public SV_type {$/;"	c
ty_record	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class ty_record: public SV_type {$/;"	c
ty_record_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record_list() {}$/;"	f	class:ty_record_list
ty_record_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record_list(const ty_record_list &l):conslist(l) {}$/;"	f	class:ty_record_list
ty_record_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record_list(ty_record *t) { push(t); }$/;"	f	class:ty_record_list
ty_record_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class ty_record_list: public conslist$/;"	c
ty_record_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record_list() {}$/;"	f	class:ty_record_list
ty_record_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record_list(const ty_record_list &l):conslist(l) {}$/;"	f	class:ty_record_list
ty_record_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record_list(ty_record *t) { push(t); }$/;"	f	class:ty_record_list
ty_record_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class ty_record_list: public conslist$/;"	c
ty_record_list_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record_list_iter() {}$/;"	f	class:ty_record_list_iter
ty_record_list_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    ty_record_list_iter(ty_record_list *sl) { reset(sl); }$/;"	f	class:ty_record_list_iter
ty_record_list_iter	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^class ty_record_list_iter: public consiter {$/;"	c
ty_record_list_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record_list_iter() {}$/;"	f	class:ty_record_list_iter
ty_record_list_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    ty_record_list_iter(ty_record_list *sl) { reset(sl); }$/;"	f	class:ty_record_list_iter
ty_record_list_iter	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^class ty_record_list_iter: public consiter {$/;"	c
tyid	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	char *name, *tyid;$/;"	m	struct:Comvar
typ	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^        type_node      * typ;$/;"	m	union:block_info::__anon1
typ	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    type_node *typ;$/;"	m	class:instruction
typ	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    func_type *typ;			\/* function type (not just ret type) *\/$/;"	m	class:proc_sym
typ	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    type_node *typ;$/;"	m	class:var_sym
typ	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node *typ;$/;"	m	class:modifier_type
type	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    type_node * type;$/;"	m	struct:struct_access
type	/cad2/ece540s/basesuif-1.1.2/include/flow/reginfo.h	/^    if_type type;$/;"	m	class:register_info
type	/cad2/ece540s/basesuif-1.1.2/include/flow/storinfo.h	/^    if_type type;$/;"	m	class:storage_info
type	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_node **type;			\/\/ operand(s) for modifiers$/;"	m	class:type_node
type	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_type type;$/;"	m	class:instruction
type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	SV_type *const type;$/;"	m	class:SV_const
type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	SV_type *type;$/;"	m	class:SV_cell
type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	SV_type *type;$/;"	m	class:ty_named
type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	int type;$/;"	m	struct:ty_base
type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    SV_type *type;$/;"	m	class:ty_pointer
type	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	int  type;$/;"	m	struct:Vardesc
type	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int type;$/;"	m	struct:Comvar
type	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^	char *type;$/;"	m	struct:iob_data
type	/cad2/ece540s/basesuif-1.1.2/include/sf2c/iob.h	/^	int nelt, type;$/;"	m	struct:io_setup
type	/cad2/ece540s/basesuif-1.1.2/include/sf2c/output.h	/^    int type;			\/* UNARY_OP or BINARY_OP *\/$/;"	m	struct:__anon14
type	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	int  type;$/;"	m	struct:Vardesc
type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	SV_type *const type;$/;"	m	class:SV_const
type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	SV_type *type;$/;"	m	class:SV_cell
type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	SV_type *type;$/;"	m	class:ty_named
type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	int type;$/;"	m	struct:ty_base
type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    SV_type *type;$/;"	m	class:ty_pointer
type	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    simple_type *type;			\/* type of the result *\/$/;"	m	struct:simple_instr_struct
type	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    simple_type *type;			\/* variable type (VAR_SYMs only) *\/$/;"	m	struct:simple_sym_struct
type	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    simple_type *type;			\/* type of the result *\/$/;"	m	struct:simple_instr_struct
type	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    simple_type *type;			\/* variable type (VAR_SYMs only) *\/$/;"	m	struct:simple_sym_struct
type	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    func_type *type()			{ return typ; }$/;"	f	class:proc_sym
type	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    type_node *type()		 	{ return typ; }$/;"	f	class:var_sym
type_array	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_array$/;"	e	enum:type_ops
type_const	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_const,$/;"	e	enum:type_ops
type_enum	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_enum,$/;"	e	enum:type_ops
type_float	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_float,$/;"	e	enum:type_ops
type_function	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_function,$/;"	e	enum:type_ops
type_id	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    unsigned type_id()			{ return id; }$/;"	f	class:type_node
type_id_index	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    ptr_index *type_id_index;		\/* for fast lookups by id # *\/$/;"	m	class:base_symtab
type_kind	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	g
type_kind	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^enum type_kind {TY_base,TY_named,TY_record,TY_function,TY_pointer,TY_enum};$/;"	g
type_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Type_list type_list;$/;"	m	class:ty_record
type_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Type_list type_list;$/;"	m	class:ty_record
type_name	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	Symbol *type_name;$/;"	m	class:ty_enum
type_name	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	Symbol *type_name;$/;"	m	class:ty_named
type_name	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Symbol *type_name;$/;"	m	class:ty_record
type_name	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	Symbol *type_name;$/;"	m	class:ty_enum
type_name	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	Symbol *type_name;$/;"	m	class:ty_named
type_name	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Symbol *type_name;$/;"	m	class:ty_record
type_node	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^class type_node {$/;"	c
type_node	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^class type_node : public suif_object {$/;"	c
type_ops	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^enum type_ops {$/;"	g
type_ops	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^enum type_ops {$/;"	g
type_ptr	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_ptr,$/;"	e	enum:type_ops
type_signed	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_signed,$/;"	e	enum:type_ops
type_string	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    static char *type_string;$/;"	m	class:instruction
type_struct	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_struct,$/;"	e	enum:type_ops
type_sym	/cad2/ece540s/basesuif-1.1.2/include/flow/symtab.h	/^    type_sym$/;"	e	enum:sym_kinds
type_template	/cad2/ece540s/basesuif-1.1.2/include/builder/bldtypes.h	/^    type_template(base_symtab * bt) { symtab = bt; }$/;"	f	class:type_template
type_template	/cad2/ece540s/basesuif-1.1.2/include/builder/bldtypes.h	/^class type_template : private builder_base {$/;"	c
type_translation_list	/cad2/ece540s/basesuif-1.1.2/include/ist.h	/^    alist type_translation_list;$/;"	m	class:ist
type_translation_list	/cad2/ece540s/basesuif-1.1.2/include/ist/ist.h	/^    alist type_translation_list;$/;"	m	class:ist
type_union	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_union,$/;"	e	enum:type_ops
type_unsigned	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_unsigned,$/;"	e	enum:type_ops
type_void	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_void,$/;"	e	enum:type_ops
type_volatile	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	/^    type_volatile,$/;"	e	enum:type_ops
typelabel	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int typelabel;			\/* Label for function exit; this$/;"	m	struct:Entrypoint
types	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    type_node_list *types()		{ return typs; }$/;"	f	class:base_symtab
types	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    type_node **types;$/;"	m	class:struct_type
typs	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    type_node_list *typs;		\/* list of types *\/$/;"	m	class:base_symtab
u	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    int u, l;$/;"	m	class:access_ineq_list_iter
u	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    int u, l;$/;"	m	class:access_ineq_list_iter
u	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    } u;$/;"	m	struct:simple_immed_struct	typeref:union:simple_immed_struct::__anon48
u	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    } u;$/;"	m	struct:simple_instr_struct	typeref:union:simple_instr_struct::__anon50
u	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    } u;$/;"	m	struct:simple_immed_struct	typeref:union:simple_immed_struct::__anon25
u	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    } u;$/;"	m	struct:simple_instr_struct	typeref:union:simple_instr_struct::__anon27
u	/cad2/ece540s/basesuif-1.1.2/include/suif/operand.h	/^    } u;$/;"	m	class:operand_dataonly	typeref:union:operand_dataonly::__anon35
u	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    } u;$/;"	m	class:array_bound	typeref:union:array_bound::__anon36
u	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    int u, l;$/;"	m	class:access_ineq_list_iter
ub	/cad2/ece540s/basesuif-1.1.2/include/dependence/dep_node.h	/^    array_info *lb,*ub;$/;"	m	struct:dep_for_annote
ub	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^	array_info *lb,*ub;$/;"	m	struct:dep_node_for
ub	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^	array_info *lb,*ub;$/;"	m	struct:dep_node_for
ub	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    int ub()				{ return last; }$/;"	f	class:bit_set
ub	/cad2/ece540s/basesuif-1.1.2/include/general/xarray.h	/^    int ub()				{ return hi; }$/;"	f	class:x_array2
ub	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  int ub()$/;"	f	class:Parameterized_x_array0
ub	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    int ub()				{ return last; }$/;"	f	class:bit_set
ub_list	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *ub_list()		{ return upper; }$/;"	f	class:tree_for
ub_op	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    operand ub_op()			{ return upper->op(); }$/;"	f	class:tree_for
ub_part	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    ast_node_list *ub_part;$/;"	m	class:ast_node_for
ub_valid	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	boolean *ub_valid;$/;"	m	class:full_hash_entry
ub_valid	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	int *ub_valid;$/;"	m	class:full_hash_entry
ub_valid	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	int *ub_valid;$/;"	m	class:full_hash_entry
ub_well_behaved	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    boolean ub_well_behaved;$/;"	m	class:ast_node_for
uba	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    annote_list uba;$/;"	m	class:ast_node_for
ubexpr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		expptr ubexpr;	\/* expression to calculate upper bound *\/$/;"	m	struct:Dimblock::__anon11
ubsp	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    ast_node_suif_instr **ubsp;$/;"	m	class:ast_node_suif_instr
ubvar	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		expptr ubvar;	\/* upper bound var *\/$/;"	m	struct:Dimblock::__anon11
uc	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    unsigned char uc;$/;"	m	union:any_type
ui	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    unsigned ui;$/;"	m	union:any_type
uid	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	unsigned uid;				\/* Tor Aamodt April 29, 2007 : for debugging only *\/$/;"	m	struct:simple_instr_struct
uid	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	unsigned uid;				\/* Tor Aamodt April 29, 2007 : for debugging only *\/$/;"	m	struct:simple_instr_struct
uid	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    int uid() const { return unum; }$/;"	f	class:named_lin_ineq
uid	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    int uid() { return unum; }$/;"	f	class:named_symcoeff_ineq
ul	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    unsigned long ul;$/;"	m	union:any_type
uname_tag	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	int uname_tag;		\/* Tag describing which of the unions()$/;"	m	struct:Addrblock
unary_op	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^enum unary_op {  uop_minus,                     \/\/ -a$/;"	g
unique	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/cfg.h	/^  int unique;$/;"	m	class:CFinfo
unique	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sharlit.h	/^    int unique;$/;"	m	class:Snode
unique	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    int unique;$/;"	m	class:SV_dflow
unique	/cad2/ece540s/basesuif-1.1.2/include/sharlit.h	/^    int unique;$/;"	m	class:Snode
unique	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit.h	/^    int unique;$/;"	m	class:Snode
unique	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sharlit_cfg.h	/^  int unique;$/;"	m	class:CFinfo
unique	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    int unique;$/;"	m	class:SV_dflow
unique	/cad2/ece540s/basesuif-1.1.2/include/sharlit_cfg.h	/^  int unique;$/;"	m	class:CFinfo
unique_lab	/cad2/ece540s/basesuif-1.1.2/include/flow/labelinfo.h	/^    int unique_lab;$/;"	m	class:label_manager
unit_table	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    char *unit_table,*create_table,*absorb_table;$/;"	m	class:SV_path
unit_table	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    char *unit_table,*create_table,*absorb_table;$/;"	m	class:SV_path
unix	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	166;"	d
unix	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	166;"	d
unqual	/cad2/ece540s/basesuif-1.1.2/include/flow/symtypes.h	59;"	d
unqual	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual type_node *unqual()		{ return this; }$/;"	f	class:type_node
unsure	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^enum answer{independent, dependent, unsure};$/;"	e	enum:answer
unsure	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^enum answer{independent, dependent, unsure};$/;"	e	enum:answer
unsure	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^enum answer{independent, dependent, unsure};$/;"	e	enum:answer
unum	/cad2/ece540s/basesuif-1.1.2/include/builder/bldtypes.h	/^    static int unum;$/;"	m	class:type_template
unum	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    int unum;$/;"	m	class:named_lin_ineq
unum	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    int unum;$/;"	m	class:level_elem
unum	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    int unum;$/;"	m	class:named_symcoeff_ineq
unum_cnt	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    static int unum_cnt;$/;"	m	class:named_lin_ineq
unum_cnt	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_symcoeff_ineq.h	/^    static int unum_cnt;$/;"	m	class:named_symcoeff_ineq
uop	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    unary_op  uop;$/;"	m	struct:any_oper
uop_abs	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 uop_abs,                       \/\/ abs(a) or |a|$/;"	e	enum:unary_op
uop_addr	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 uop_addr,                      \/\/ address of (&a)$/;"	e	enum:unary_op
uop_dref	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 uop_dref                       \/\/ dereferencing a ptr (*a)$/;"	e	enum:unary_op
uop_lnot	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 uop_lnot,                      \/\/ ~a$/;"	e	enum:unary_op
uop_minus	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^enum unary_op {  uop_minus,                     \/\/ -a$/;"	e	enum:unary_op
uop_not	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_enum.h	/^                 uop_not,                       \/\/ !a$/;"	e	enum:unary_op
up	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	int_indef up[LOWUPSIZE];$/;"	m	class:exact
up	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int_indef up[lowupsize];$/;"	m	class:exact
up	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int_indef up[lowupsize];$/;"	m	class:exact
upper	/cad2/ece540s/basesuif-1.1.2/include/flow/astfor.h	/^    if_reg upper;			\/* pseudo reg *\/$/;"	m	class:ast_node_for
upper	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    tree_node_list *bod, *lpad, *lower, *upper, *step;$/;"	m	class:tree_for
upper_bound	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    array_bound upper_bound()		{ return uppr; }$/;"	f	class:array_type
uppers	/cad2/ece540s/basesuif-1.1.2/include/dephack/dep_node.h	/^    dep_node_si **uppers() {return (dep_node_si **)ast_node_suif_instr::uppers();}$/;"	f	struct:dep_node_si
uppers	/cad2/ece540s/basesuif-1.1.2/include/deptest/dep_node.h	/^    dep_node_si **uppers() {return (dep_node_si **)ast_node_suif_instr::uppers();}$/;"	f	struct:dep_node_si
uppers	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    ast_node_suif_instr ** uppers()	{ return ubsp; }$/;"	f	class:ast_node_suif_instr
uppers	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    if_reg *indxs, *uppers;$/;"	m	class:in_array
uppers	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    operand *indxs, *uppers;$/;"	m	class:in_array
uppr	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    array_bound uppr;$/;"	m	class:array_type
us	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    unsigned short us;$/;"	m	union:any_type
used_here	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned used_here:1;	\/* Boolean - true on the second pass$/;"	m	struct:Extsym
user	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	} user;$/;"	m	struct:Addrblock	typeref:union:Addrblock::__anon9
v	/cad2/ece540s/basesuif-1.1.2/include/hawg/icon.h	/^    } v;$/;"	m	class:icon	typeref:union:icon::__anon4
v	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^    } v;$/;"	m	class:immed_dataonly	typeref:union:immed_dataonly::__anon34
v	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^        var_sym * v;$/;"	m	union:name_table_entry::__anon37
vadjdim	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vadjdim:1;	\/* "adjustable dimension?" - needed for$/;"	m	struct:Nameblock
val	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block val(char * c)          { return new block(c); }$/;"	f	class:block
val	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block val(double d)          { return new block(d); }$/;"	f	class:block
val	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block val(float d)          { return new block(d); }$/;"	f	class:block
val	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_def.h	/^     static block val(int i)             { return new block(i); }$/;"	f	class:block
val	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int val() {return (int) info;}$/;"	f	struct:access_list_e
val	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int val(tree_node *a) {return elts.val(a);}$/;"	f	class:access_vector
val	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int val(var_sym * s, int indirect)$/;"	f	class:access_vector
val	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    int val(void *v) {access_list_e *e=search(v); return e ? e->val() : 0;}$/;"	f	struct:access_list
val	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    int val;$/;"	m	class:distance
val	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^    int val;$/;"	m	class:int_indef
val	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int val() {return (int) info;}$/;"	f	struct:access_list_e
val	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int val(ast_node *a) {return elts.val(a);}$/;"	f	class:access_vector
val	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int val(if_reg r,int indirect)$/;"	f	class:access_vector
val	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int val(path_base *p) {return conpaths.val(p);}$/;"	f	class:access_vector
val	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    int val(void *v) {access_list_e *e=search(v); return e ? e->val() : 0;}$/;"	f	struct:access_list
val	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    int val;$/;"	m	class:distance
val	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int val;$/;"	m	class:int_indef
val	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int val() {return (int) info;}$/;"	f	struct:access_list_e
val	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int val(ast_node *a) {return elts.val(a);}$/;"	f	class:access_vector
val	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int val(if_reg r,int indirect)$/;"	f	class:access_vector
val	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int val(path_base *p) {return conpaths.val(p);}$/;"	f	class:access_vector
val	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    int val(void *v) {access_list_e *e=search(v); return e ? e->val() : 0;}$/;"	f	struct:access_list
val	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    int val;$/;"	m	class:distance
val	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int val;$/;"	m	class:int_indef
val	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    immed val;$/;"	m	class:in_ldc
val	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    named_symcoeff_ineq val;                    \/\/ Condition$/;"	m	class:value_tree
valid_list	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    marked_nsi_list valid_list;                 \/\/ Valid original nests$/;"	m	class:tree_leaf
vals	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    int *vals;$/;"	m	class:enum_type
value	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    icon value;$/;"	m	class:in_ldc
value	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	int value;$/;"	m	class:cn_integer
value	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^	void *value;$/;"	m	class:SV_cell
value	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/symbol.h	/^    Sym_val *value;$/;"	m	class:Symbol
value	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	int value;$/;"	m	class:cn_integer
value	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^	void *value;$/;"	m	class:SV_cell
value	/cad2/ece540s/basesuif-1.1.2/include/sharlit/symbol.h	/^    Sym_val *value;$/;"	m	class:Symbol
value	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^	    simple_immed value;		\/* immediate constant *\/$/;"	m	struct:simple_instr_struct::__anon50::__anon53
value	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^	    simple_immed value;		\/* immediate constant *\/$/;"	m	struct:simple_instr_struct::__anon27::__anon30
value	/cad2/ece540s/basesuif-1.1.2/include/suif/instruction.h	/^    immed value()			{ return val; }$/;"	f	class:in_ldc
value	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    int value(unsigned n)		{ check_range(n); return vals[n]; }$/;"	f	class:enum_type
value	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^    named_symcoeff_ineq & value()               { return val; }$/;"	f	class:value_tree
value	/cad2/ece540s/basesuif-1.1.2/include/useful/inumbers.h	/^      } value;$/;"	m	class:i_integer	typeref:union:i_integer::__anon39
value_tree	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_merge.h	/^class value_tree {$/;"	c
var	/cad2/ece540s/basesuif-1.1.2/include/builder/builder_internals.h	/^    var_sym * var;$/;"	m	struct:struct_access
var	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    void *var() {return key;}$/;"	f	struct:access_list_e
var	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    void *var() {return key;}$/;"	f	struct:access_list_e
var	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    void *var() {return key;}$/;"	f	struct:access_list_e
var	/cad2/ece540s/basesuif-1.1.2/include/simple.h	/^    simple_sym *var;			\/* variable held in the register *\/$/;"	m	struct:simple_reg_struct
var	/cad2/ece540s/basesuif-1.1.2/include/simple/simple.h	/^    simple_sym *var;			\/* variable held in the register *\/$/;"	m	struct:simple_reg_struct
var	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^	var_sym *var;$/;"	m	union:array_bound::__anon36
var	/cad2/ece540s/basesuif-1.1.2/include/suif/vardef.h	/^    var_sym *var;$/;"	m	class:var_def
var	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    var_sym * var() const                       { assert(is_var);$/;"	f	class:name_table_entry
var_counter	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    unsigned var_counter;		\/* for creating unique var_syms *\/$/;"	m	class:base_symtab
var_def	/cad2/ece540s/basesuif-1.1.2/include/suif/vardef.h	/^    var_def()				{ }$/;"	f	class:var_def
var_def	/cad2/ece540s/basesuif-1.1.2/include/suif/vardef.h	/^class var_def : public suif_object {$/;"	c
var_defs	/cad2/ece540s/basesuif-1.1.2/include/suif/symtab.h	/^    var_def_list *var_defs()		{ return defs; }$/;"	f	class:base_symtab
var_sym	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^class var_sym : public sym_node {$/;"	c
vardesc	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		} vardesc;$/;"	m	struct:Nameblock	typeref:union:Nameblock::__anon6
vargs	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    boolean vargs;$/;"	m	class:func_type
variable	/cad2/ece540s/basesuif-1.1.2/include/suif/vardef.h	/^    var_sym *variable()			{ return var; }$/;"	f	class:var_def
varkind	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^        int varkind[TABLESIZE];$/;"	m	class:name_store
varkind	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^        int varkind[TABLESIZE];$/;"	m	class:name_store
varkind	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	/^        int varkind[TABLESIZE];$/;"	m	class:name_store
varleng	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	ftnint varleng;		\/* holds a copy of a constant length which$/;"	m	struct:Addrblock
varno	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		int varno;		\/* Return variable for a function.$/;"	m	union:Nameblock::__anon6
varnp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	Namep varnp;$/;"	m	struct:Impldoblock
varp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	Namep varp;$/;"	m	struct:Hashentry
vars	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    int *vars;  $/;"	m	class:coeff
vars	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    int *vars;  $/;"	m	class:coeff
vars	/cad2/ece540s/basesuif-1.1.2/include/math/nametable.h	/^	char *vars[TABLESIZE];$/;"	m	class:name_store
vars	/cad2/ece540s/basesuif-1.1.2/include/nametable.h	/^	char *vars[TABLESIZE];$/;"	m	class:name_store
vars	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	Vardesc **vars;$/;"	m	struct:Namelist
vars	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	Vardesc **vars;$/;"	m	struct:Namelist
vars	/cad2/ece540s/basesuif-1.1.2/include/suifmath/coeff.h	/^    int *vars;  $/;"	m	class:coeff
vars	/cad2/ece540s/basesuif-1.1.2/include/suifmath/nametable.h	/^	char *vars[TABLESIZE];$/;"	m	class:name_store
varvp	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	Constp varvp;$/;"	m	struct:Impldoblock
varxptr	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		} varxptr;$/;"	m	struct:Nameblock	typeref:union:Nameblock::__anon7
vax	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	167;"	d
vax	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	167;"	d
vclass	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vclass;$/;"	m	struct:Addrblock
vclass	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vclass;$/;"	m	struct:Constblock
vclass	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vclass;$/;"	m	struct:Exprblock
vclass	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vclass;$/;"	m	struct:Headblock
vclass	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vclass;$/;"	m	struct:Nameblock
vclass	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vclass;$/;"	m	struct:Paramblock
vcommequiv	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vcommequiv:1;	\/* True if EQUIVALENCEd onto STGCOMMON *\/$/;"	m	struct:Nameblock
vdcldone	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vdcldone:1;	\/* "do I think I'm done?" - set when the$/;"	m	struct:Nameblock
vdim	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	struct Dimblock *vdim;	\/* points to the dimensions if they exist *\/$/;"	m	struct:Nameblock	typeref:struct:Nameblock::Dimblock
vdovar	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vdovar:1;	\/* "is it a DO variable?" for register$/;"	m	struct:Nameblock
vector_space	/cad2/ece540s/basesuif-1.1.2/include/suifmath/vector_space.h	/^class vector_space {$/;"	c
veqvseen	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned veqvseen:1;	\/* Already seen in this equivalence *\/$/;"	m	struct:Nameblock
version	/cad2/ece540s/basesuif-1.1.2/include/suif/initsuif.h	/^    char *version;			\/* the library version *\/$/;"	m	struct:suif_library
vfmt_asg	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vfmt_asg:1;	\/* True if char *var_fmt needed *\/$/;"	m	struct:Nameblock
vimpldovar	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vimpldovar:1;	\/* used to prevent erroneous error messages$/;"	m	struct:Nameblock
vimplstg	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vimplstg:1;	\/* True if storage type is assigned implicitly;$/;"	m	struct:Nameblock
vis_assigned	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vis_assigned:1;\/* True if this variable has had some$/;"	m	struct:Nameblock
visused	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned visused:1;	\/* True if variable is referenced -- so we *\/$/;"	m	struct:Nameblock
vknownarg	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vknownarg:1;	\/* True if seen in a previous entry point *\/$/;"	m	struct:Nameblock
vlastdim	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	chainp vlastdim;	\/* datap points to new_vars entry for the *\/$/;"	m	struct:Nameblock
vleng	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr vleng;		\/* Expression for length of char string -$/;"	m	struct:Headblock
vleng	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr vleng;		\/* in the case of a character expression, this$/;"	m	struct:Exprblock
vleng	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr vleng;		\/* length of character string, if applicable *\/$/;"	m	struct:Nameblock
vleng	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr vleng;$/;"	m	struct:Addrblock
vleng	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr vleng;$/;"	m	struct:Constblock
vleng	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	expptr vleng;$/;"	m	struct:Paramblock
vnamelist	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vnamelist:1;	\/* Appears in a NAMELIST *\/$/;"	m	struct:Nameblock
voffset	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	ftnint voffset;		\/* offset in a storage block (the variable$/;"	m	struct:Nameblock
vpassed	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vpassed:1;	\/* True if passed as a character-variable arg *\/$/;"	m	struct:Nameblock
vprocclass	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vprocclass:3;	\/* P____ macros - selects the   varxptr$/;"	m	struct:Nameblock
vsave	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	unsigned vsave:1;$/;"	m	struct:Nameblock
vsname	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_lin_ineq.h	/^    } vsname;$/;"	m	class:name_table_entry	typeref:union:name_table_entry::__anon37
vstfdesc	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		chainp vstfdesc;	\/* points to (formals, expr) pair *\/$/;"	m	union:Nameblock::__anon7
vstg	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vstg;		\/* vstg = 1 when using Const.cds *\/$/;"	m	struct:Constblock
vstg	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vstg;$/;"	m	struct:Addrblock
vstg	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vstg;$/;"	m	struct:Exprblock
vstg	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vstg;$/;"	m	struct:Headblock
vstg	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vstg;$/;"	m	struct:Nameblock
vstg	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vstg;$/;"	m	struct:Paramblock
vstg1	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^		field vstg1;$/;"	m	struct:Addrblock::__anon9::__anon10
vtype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vtype;$/;"	m	struct:Addrblock
vtype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vtype;$/;"	m	struct:Constblock
vtype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vtype;$/;"	m	struct:Errorblock
vtype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vtype;$/;"	m	struct:Exprblock
vtype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vtype;$/;"	m	struct:Headblock
vtype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vtype;$/;"	m	struct:Listblock
vtype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vtype;$/;"	m	struct:Nameblock
vtype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vtype;$/;"	m	struct:Paramblock
vtype	/cad2/ece540s/basesuif-1.1.2/include/sf2c/defs.h	/^	field vtype;$/;"	m	struct:Primblock
w	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    int e, w;$/;"	m	class:bit_set_iter
w	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    int e, w;$/;"	m	class:bit_set_iter
walk_stack	/cad2/ece540s/basesuif-1.1.2/include/useful/walk.h	/^    walk_frame_data_list *walk_stack;$/;"	m	class:so_walker
warn_once	/cad2/ece540s/basesuif-1.1.2/include/suif/misc.h	192;"	d
willfit	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/sstring.h	/^	int willfit() { return this!=0 && length<segsize; }$/;"	f	struct:String_seg
willfit	/cad2/ece540s/basesuif-1.1.2/include/sharlit/sstring.h	/^	int willfit() { return this!=0 && length<segsize; }$/;"	f	struct:String_seg
without_irravalent_variables	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    lin_ineq without_irravalent_variables(int * dv) { $/;"	f	class:poly_iterator
without_irravalent_variables	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    lin_ineq without_irravalent_variables(int * dv) { $/;"	f	class:poly_iterator
without_irravalent_variables	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    lin_ineq without_irravalent_variables(int * dv) { $/;"	f	class:poly_iterator
wp	/cad2/ece540s/basesuif-1.1.2/include/general/wseq.h	/^    int *wp;$/;"	m	class:flat_seq
write	/cad2/ece540s/basesuif-1.1.2/include/flow/astinstr.h	/^    virtual void write(if_ostream *os)	{ instr->write(os); }$/;"	f	class:ast_node_suif_instr
write	/cad2/ece540s/basesuif-1.1.2/include/flow/istorage.h	/^    virtual void write(if_ostream *)	{ hawg_error(1, "i_storage::write"); }$/;"	f	class:i_storage
write	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    void write(if_ostream *os)		{ os->write(*this); }$/;"	f	class:path
write_back	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^    void write_back()			{ proc->write(os); }$/;"	f	class:ast_proc_iter
write_chunk	/cad2/ece540s/basesuif-1.1.2/include/hawg/if_stream.h	/^    int write_chunk(void *cp, int sz)	{ return fwrite((char *)cp, 1, sz,$/;"	f	class:if_ostream
write_int_size	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    unsigned long write_int_size;$/;"	m	class:in_stream
write_nv_ident	/cad2/ece540s/basesuif-1.1.2/include/sf2c/names.h	8;"	d
write_used	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	int *write_used;$/;"	m	class:exact
write_used	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	int *write_used;$/;"	m	class:exact
write_used	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	int *write_used;$/;"	m	class:exact
written	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    boolean written;			\/* has the procedure been written? *\/$/;"	m	class:proc_sym
wseq	/cad2/ece540s/basesuif-1.1.2/include/general/wseq.h	/^class wseq {$/;"	c
x_array	/cad2/ece540s/basesuif-1.1.2/include/general/xarray.h	/^class x_array {$/;"	c
x_array	/cad2/ece540s/basesuif-1.1.2/include/suif/xarray.h	/^class x_array {$/;"	c
x_array2	/cad2/ece540s/basesuif-1.1.2/include/general/xarray.h	/^class x_array2 {$/;"	c
xm	/cad2/ece540s/basesuif-1.1.2/include/suifmath/named_sc_fm.h	/^    int xm;                                             \/\/ # of ineq's in use$/;"	m	class:named_sc_fm
y_code	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	/^    C_code *y_code;$/;"	m	union:__anon5
y_code	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	/^    C_code *y_code;$/;"	m	union:__anon24
y_cstring	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	/^    char *y_cstring;$/;"	m	union:__anon5
y_cstring	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	/^    char *y_cstring;$/;"	m	union:__anon24
y_int	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	/^    int y_int;$/;"	m	union:__anon5
y_int	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	/^    int y_int;$/;"	m	union:__anon24
y_q_binder	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	/^    Q_binder *y_q_binder;$/;"	m	union:__anon5
y_q_binder	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	/^    Q_binder *y_q_binder;$/;"	m	union:__anon24
y_record_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	/^    ty_record_list *y_record_list;$/;"	m	union:__anon5
y_record_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	/^    ty_record_list *y_record_list;$/;"	m	union:__anon24
y_record_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	/^    ty_record *y_record_type;$/;"	m	union:__anon5
y_record_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	/^    ty_record *y_record_type;$/;"	m	union:__anon24
y_rule	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	/^    SV_rule *y_rule;$/;"	m	union:__anon5
y_rule	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	/^    SV_rule *y_rule;$/;"	m	union:__anon24
y_string	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	/^    String *y_string;$/;"	m	union:__anon5
y_string	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	/^    String *y_string;$/;"	m	union:__anon24
y_sym	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	/^    Symbol *y_sym;$/;"	m	union:__anon5
y_sym	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	/^    Symbol *y_sym;$/;"	m	union:__anon24
y_symbol_list	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	/^    Symbol_list *y_symbol_list;$/;"	m	union:__anon5
y_symbol_list	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	/^    Symbol_list *y_symbol_list;$/;"	m	union:__anon24
y_type	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/parse.h	/^    SV_type *y_type;$/;"	m	union:__anon5
y_type	/cad2/ece540s/basesuif-1.1.2/include/sharlit/parse.h	/^    SV_type *y_type;$/;"	m	union:__anon24
yval	/cad2/ece540s/basesuif-1.1.2/include/suif/immed.h	/^	sym_addr_dataonly yval;$/;"	m	union:immed_dataonly::__anon34
z	/cad2/ece540s/basesuif-1.1.2/include/sf2c.h	/^	doublecomplex z;$/;"	m	union:Multitype
z	/cad2/ece540s/basesuif-1.1.2/include/sf2c/sf2c.h	/^	doublecomplex z;$/;"	m	union:Multitype
~Parameterized_x_array0	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^  ~Parameterized_x_array0()$/;"	f	class:Parameterized_x_array0
~Parameterized_x_array1	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/x_array.h	/^    ~Parameterized_x_array1()$/;"	f	class:Parameterized_x_array1
~Parameterized_x_array1	/cad2/ece540s/basesuif-1.1.2/include/sharlit/x_array.h	/^    ~Parameterized_x_array1()$/;"	f	class:Parameterized_x_array1
~Parameterized_x_array1	/cad2/ece540s/basesuif-1.1.2/include/x_array.h	/^    ~Parameterized_x_array1()$/;"	f	class:Parameterized_x_array1
~UD_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	~UD_hash_entry() { delete A; delete U; delete D; }$/;"	f	class:UD_hash_entry
~UD_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	~UD_hash_entry() { delete A; delete U; delete D; }$/;"	f	class:UD_hash_entry
~UD_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	~UD_hash_entry() { delete A; delete U; delete D; }$/;"	f	class:UD_hash_entry
~X_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	~X_hash_entry() { delete A; delete X; }$/;"	f	class:X_hash_entry
~X_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	~X_hash_entry() { delete A; delete X; }$/;"	f	class:X_hash_entry
~X_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	~X_hash_entry() { delete A; delete X; }$/;"	f	class:X_hash_entry
~access_list_e	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    ~access_list_e() {}$/;"	f	struct:access_list_e
~access_list_e	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    ~access_list_e() {}$/;"	f	struct:access_list_e
~access_list_e	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    ~access_list_e() {}$/;"	f	struct:access_list_e
~access_list_iter	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    ~access_list_iter() {}$/;"	f	struct:access_list_iter
~access_list_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    ~access_list_iter() {}$/;"	f	struct:access_list_iter
~access_list_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    ~access_list_iter() {}$/;"	f	struct:access_list_iter
~alias_set	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    ~alias_set()			{ reset(); }$/;"	f	class:alias_set
~array_info_iter	/cad2/ece540s/basesuif-1.1.2/include/dependence/access_vector.h	/^    ~array_info_iter() {}$/;"	f	class:array_info_iter
~array_info_iter	/cad2/ece540s/basesuif-1.1.2/include/dephack/access_vector.h	/^    ~array_info_iter() {}$/;"	f	class:array_info_iter
~array_info_iter	/cad2/ece540s/basesuif-1.1.2/include/deptest/access_vector.h	/^    ~array_info_iter() {}$/;"	f	class:array_info_iter
~ast_group	/cad2/ece540s/basesuif-1.1.2/include/flow/astgroup.h	/^    virtual ~ast_group()		{ }$/;"	f	class:ast_group
~ast_node	/cad2/ece540s/basesuif-1.1.2/include/flow/astnode.h	/^    virtual ~ast_node()			{ }$/;"	f	class:ast_node
~ast_proc	/cad2/ece540s/basesuif-1.1.2/include/flow/astproc.h	/^    virtual ~ast_proc()			{ if (g) delete g; }$/;"	f	class:ast_proc
~ast_proc_iter	/cad2/ece540s/basesuif-1.1.2/include/flow/astprociter.h	/^    virtual ~ast_proc_iter()		{ delete ag; }$/;"	f	class:ast_proc_iter
~base_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    virtual ~base_init_struct(void) {}$/;"	f	class:base_init_struct
~base_stream	/cad2/ece540s/basesuif-1.1.2/include/suif/suifstreams.h	/^    virtual ~base_stream()		{ close(); }$/;"	f	class:base_stream
~bit_set	/cad2/ece540s/basesuif-1.1.2/include/general/bitset.h	/^    ~bit_set()				{ delete bits; }$/;"	f	class:bit_set
~bit_set	/cad2/ece540s/basesuif-1.1.2/include/suif/bitset.h	/^    ~bit_set()				{ delete bits; }$/;"	f	class:bit_set
~constraint	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    ~constraint() { }$/;"	f	class:constraint
~constraint	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    ~constraint() { }$/;"	f	class:constraint
~constraint	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    ~constraint() { }$/;"	f	class:constraint
~dir_array	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	~dir_array() { delete data; };$/;"	f	struct:dir_array
~dir_array	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	~dir_array() { delete data; };$/;"	f	struct:dir_array
~dir_array	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	~dir_array() { delete data; };$/;"	f	struct:dir_array
~distance	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    ~distance() {}$/;"	f	class:distance
~distance	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^    ~distance() {}$/;"	f	class:distance
~distance	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^    ~distance() {}$/;"	f	class:distance
~distance_vector	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    ~distance_vector() {}$/;"	f	struct:distance_vector
~distance_vector	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	~distance_vector() {}$/;"	f	struct:distance_vector
~distance_vector	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	~distance_vector() {}$/;"	f	struct:distance_vector
~distance_vector_e	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    ~distance_vector_e() {}$/;"	f	struct:distance_vector_e
~distance_vector_e	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	~distance_vector_e() {}$/;"	f	struct:distance_vector_e
~distance_vector_e	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	~distance_vector_e() {}$/;"	f	struct:distance_vector_e
~dvlist	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    ~dvlist() {}$/;"	f	class:dvlist
~dvlist	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	~dvlist() {}$/;"	f	class:dvlist
~dvlist	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	~dvlist() {}$/;"	f	class:dvlist
~dvlist_e	/cad2/ece540s/basesuif-1.1.2/include/dependence/dvector.h	/^    ~dvlist_e() {}$/;"	f	struct:dvlist_e
~dvlist_e	/cad2/ece540s/basesuif-1.1.2/include/dephack/dvector.h	/^	~dvlist_e() {}$/;"	f	struct:dvlist_e
~dvlist_e	/cad2/ece540s/basesuif-1.1.2/include/deptest/dvector.h	/^	~dvlist_e() {}$/;"	f	struct:dvlist_e
~exact	/cad2/ece540s/basesuif-1.1.2/include/dependence/exact.h	/^	~exact() { ; }	$/;"	f	class:exact
~exact	/cad2/ece540s/basesuif-1.1.2/include/dephack/exact.h	/^	~exact() { ; }	$/;"	f	class:exact
~exact	/cad2/ece540s/basesuif-1.1.2/include/deptest/exact.h	/^	~exact() { ; }	$/;"	f	class:exact
~fill_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    ~fill_init_struct(void) {}$/;"	f	class:fill_init_struct
~fract	/cad2/ece540s/basesuif-1.1.2/include/general/fract.h	/^    ~fract()				{ }$/;"	f	class:fract
~fract	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract.h	/^    ~fract()				{ }$/;"	f	class:fract
~fract_matrix	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_matrix.h	/^    ~fract_matrix() { clear(); }$/;"	f	class:fract_matrix
~fract_vector	/cad2/ece540s/basesuif-1.1.2/include/suifmath/fract_vector.h	/^    ~fract_vector()   { clear(); }$/;"	f	class:fract_vector
~full_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dependence/ehash.h	/^	~full_hash_entry() { delete lb_valid; delete ub_valid; }$/;"	f	class:full_hash_entry
~full_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/dephack/ehash.h	/^	~full_hash_entry() { delete lb_valid; delete ub_valid; }$/;"	f	class:full_hash_entry
~full_hash_entry	/cad2/ece540s/basesuif-1.1.2/include/deptest/ehash.h	/^	~full_hash_entry() { delete lb_valid; delete ub_valid; }$/;"	f	class:full_hash_entry
~in_array	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    ~in_array()				{ delete[] indxs; delete[] uppers; }$/;"	f	class:in_array
~in_cal	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    ~in_cal()				{ delete[] args; }$/;"	f	class:in_cal
~in_ldc	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    ~in_ldc()				{ }$/;"	f	class:in_ldc
~in_mbr	/cad2/ece540s/basesuif-1.1.2/include/hawg/instruction.h	/^    ~in_mbr()				{ delete[] labs; }$/;"	f	class:in_mbr
~int_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    ~int_e()				{ }$/;"	f	class:int_e
~integer_row	/cad2/ece540s/basesuif-1.1.2/include/int_matrix.h	/^    ~integer_row() { clear(); }$/;"	f	class:integer_row
~integer_row	/cad2/ece540s/basesuif-1.1.2/include/math/int_matrix.h	/^    ~integer_row() { clear(); }$/;"	f	class:integer_row
~integer_row	/cad2/ece540s/basesuif-1.1.2/include/suifmath/int_matrix.h	/^    ~integer_row() { clear(); }$/;"	f	class:integer_row
~lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/linear_ineq.h	/^    ~lin_ineq() { }$/;"	f	class:lin_ineq
~lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/math/linear_ineq.h	/^    ~lin_ineq() { }$/;"	f	class:lin_ineq
~lin_ineq	/cad2/ece540s/basesuif-1.1.2/include/suifmath/linear_ineq.h	/^    virtual ~lin_ineq() { }$/;"	f	class:lin_ineq
~matrix	/cad2/ece540s/basesuif-1.1.2/include/suifmath/matrix.h	/^    ~matrix() { clear(); }$/;"	f	class:matrix
~multi_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    ~multi_init_struct(void) {}$/;"	f	class:multi_init_struct
~path_e	/cad2/ece540s/basesuif-1.1.2/include/hawg/alias_set.h	/^    ~path_e()				{ }$/;"	f	class:path_e
~path_info	/cad2/ece540s/basesuif-1.1.2/include/hawg/path.h	/^    ~path_info()			{ delete (char *)name; }$/;"	f	class:path_info
~pb_alist	/cad2/ece540s/basesuif-1.1.2/include/hawg/pblist.h	/^    ~pb_alist()				{ }$/;"	f	class:pb_alist
~poly_iterator	/cad2/ece540s/basesuif-1.1.2/include/bounds.h	/^    ~poly_iterator() { }$/;"	f	class:poly_iterator
~poly_iterator	/cad2/ece540s/basesuif-1.1.2/include/math/bounds.h	/^    ~poly_iterator() { }$/;"	f	class:poly_iterator
~poly_iterator	/cad2/ece540s/basesuif-1.1.2/include/suifmath/bounds.h	/^    ~poly_iterator() { }$/;"	f	class:poly_iterator
~proc	/cad2/ece540s/basesuif-1.1.2/include/flow/proc.h	/^    virtual ~proc()			{ delete name; delete_symbols(); }$/;"	f	class:proc
~ptr_index	/cad2/ece540s/basesuif-1.1.2/include/suif/ptr_index.h	/^    virtual ~ptr_index(void)  { }$/;"	f	class:ptr_index
~repeat_init_struct	/cad2/ece540s/basesuif-1.1.2/include/useful/basic.h	/^    ~repeat_init_struct(void) {}$/;"	f	class:repeat_init_struct
~s_ostream	/cad2/ece540s/basesuif-1.1.2/include/nsharlit/lex.h	/^    ~s_ostream() { s=0; }$/;"	f	class:s_ostream
~s_ostream	/cad2/ece540s/basesuif-1.1.2/include/sharlit/lex.h	/^    ~s_ostream() { s=0; }$/;"	f	class:s_ostream
~seek_proc_e	/cad2/ece540s/basesuif-1.1.2/include/flow/prociter.h	/^    ~seek_proc_e()			{ delete proc_name; }$/;"	f	class:seek_proc_e
~si_entry	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^    ~si_entry(void)  { }$/;"	f	class:si_entry
~string_index	/cad2/ece540s/basesuif-1.1.2/include/suif/string_index.h	/^    virtual ~string_index(void)  { }$/;"	f	class:string_index
~sym_node	/cad2/ece540s/basesuif-1.1.2/include/suif/symbols.h	/^    virtual ~sym_node()			{ }$/;"	f	class:sym_node
~tree_node	/cad2/ece540s/basesuif-1.1.2/include/suif/trees.h	/^    virtual ~tree_node()		{ }$/;"	f	class:tree_node
~ts_ptr_index	/cad2/ece540s/basesuif-1.1.2/include/suif/ts_ptr_index.h	/^    ~ts_ptr_index(void)  { delete the_string_index; delete[] buffer; }$/;"	f	class:ts_ptr_index
~type_node	/cad2/ece540s/basesuif-1.1.2/include/suif/types.h	/^    virtual ~type_node()		{ }$/;"	f	class:type_node
~vector_space	/cad2/ece540s/basesuif-1.1.2/include/suifmath/vector_space.h	/^    ~vector_space()            { clear(); }$/;"	f	class:vector_space
